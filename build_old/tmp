--------------------------------------------------------------------------------
Profile data file 'callgrind.out.62234' (creator: callgrind-3.11.0)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 1036327649
Trigger: Program termination
Profiled target:  ./main_prog (PID 62234, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
           Ir 
--------------------------------------------------------------------------------
4,720,144,373  PROGRAM TOTALS

--------------------------------------------------------------------------------
         Ir  file:function
--------------------------------------------------------------------------------
303,539,059  ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 [./main_prog]
156,360,807  ???:nearbyint$fenv_access_off [/usr/lib/system/libsystem_m.dylib]
130,420,455  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::_M_range_check(unsigned long) const [./main_prog]
117,436,085  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::size() const [./main_prog]
104,830,245  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>::operator()(long, long) const [./main_prog]
100,929,220  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::operator()(long) [./main_prog]
 95,215,963  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::at(unsigned long) const [./main_prog]
 72,396,996  ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::compute_gradients(std::vector<double, std::allocator<double> > const&) [./main_prog]
 65,060,020  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::size() const [./main_prog]
 61,610,472  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::operator[](unsigned long) const [./main_prog]
 60,219,785  ../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::forward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [./main_prog]
 60,133,824  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::coeff(long, long) const [./main_prog]
 57,433,519  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::pmul<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) [./main_prog]
 57,069,243  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const, Eigen::Dense>::coeff(long, long) const [./main_prog]
 52,593,886  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::at(unsigned long) [./main_prog]
 50,814,246  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::coeffRef(long) [./main_prog]
 50,385,720  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived() const [./main_prog]
 49,579,285  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, -1, 0>::rows() const [./main_prog]
 47,053,272  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::derived() const [./main_prog]
 46,835,550  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 0>::coeff(long, long) const [./main_prog]
 45,500,900  ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) [./main_prog]
 44,783,560  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false, true>::innerStride() const [./main_prog]
 44,122,359  ???:dual_func [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
 42,413,833  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::rows() const [./main_prog]
 42,413,833  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::cols() const [./main_prog]
 40,579,778  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Visitor.h:Eigen::internal::visitor_impl<Eigen::internal::max_coeff_visitor<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const>, -1>::run(Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const> const&, Eigen::internal::max_coeff_visitor<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const> >&) [./main_prog]
 40,257,207  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator()(long, long) [./main_prog]
 39,800,272  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_multiple_op<double>::packetOp(double __vector(2) const&) const [./main_prog]
 37,035,526  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows() const [./main_prog]
 36,614,556  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Matrix.h:Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride() const [./main_prog]
 36,536,679  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::rows() const [./main_prog]
 35,447,062  ../src/QuadraticMonomial.cpp:QuadraticMonomial::evaluate_monomial(int, std::vector<double, std::allocator<double> > const&) [./main_prog]
 34,483,757  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::operator[](unsigned long) [./main_prog]
 34,404,945  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::copyPacket<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > const&) [./main_prog]
 31,524,207  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols() const [./main_prog]
 31,267,782  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows() const [./main_prog]
 30,711,195  ???:bobyqb_ [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
 29,382,060  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::ploadu<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type const*) [./main_prog]
 28,912,478  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, 1, 0>::rows() const [./main_prog]
 28,823,016  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 1>::writePacket<1>(long, double __vector(2) const&) [./main_prog]
 28,385,231  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::cols() const [./main_prog]
 28,096,545  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:Eigen::internal::general_matrix_vector_product<long, double, 1, false, double, false, 0>::run(long, long, double const*, long, double const*, long, double*, long, double) [./main_prog]
 27,909,530  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 3>::innerStride() const [./main_prog]
 27,713,464  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Visitor.h:Eigen::internal::max_coeff_visitor<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const> >::operator()(double const&, long, long) [./main_prog]
 26,901,045  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols() const [./main_prog]
 26,493,950  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, 1, 0>::data() [./main_prog]
 26,137,104  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::pload<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type const*) [./main_prog]
 26,130,970  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false, true>::innerStride() const [./main_prog]
 25,824,672  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::coeffRef(long, long) [./main_prog]
 25,417,272  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.tcc:double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u> >(std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&) [./main_prog]
 25,372,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true, true>::innerStride() const [./main_prog]
 25,211,367  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::pset1<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type const&) [./main_prog]
 25,093,015  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h:double __vector(2) Eigen::internal::pmadd<double __vector(2)>(double __vector(2) const&, double __vector(2) const&, double __vector(2) const&) [./main_prog]
 24,480,365  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::padd<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) [./main_prog]
 24,019,180  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>::packet<1>(long) const [./main_prog]
 23,110,914  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::derived() [./main_prog]
 22,961,554  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamic<long, -1>::value() const [./main_prog]
 22,601,664  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> >::derived() const [./main_prog]
 22,526,959  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_abs_op<double>::operator()(double const&) const [./main_prog]
 22,403,220  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
 22,403,220  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
 20,923,035  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, -1, 0>::cols() const [./main_prog]
 20,762,940  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const> >::derived() const [./main_prog]
 20,661,030  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h:void Eigen::internal::pstoret<double, double __vector(2), 1>(double*, double __vector(2) const&) [./main_prog]
 20,331,509  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 3>::outerStride() const [./main_prog]
 20,331,509  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 3>::innerStride() const [./main_prog]
 20,275,165  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, 1, 0>::cols() [./main_prog]
 19,747,944  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:void Eigen::internal::pstore<double, double __vector(2)>(double*, double __vector(2) const&) [./main_prog]
 19,410,890  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/cmath:std::abs(double) [./main_prog]
 19,223,207  ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&) [./main_prog]
 18,447,429  ../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) [./main_prog]
 18,377,355  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::conj_helper<double __vector(2), double __vector(2), false, false>::pmadd(double __vector(2) const&, double __vector(2) const&, double __vector(2) const&) const [./main_prog]
 18,338,292  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, -1, 0>::data() const [./main_prog]
 17,939,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 0>::rows() const [./main_prog]
 17,236,292  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::copyPacket<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
 16,634,871  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 3>::rowStride() const [./main_prog]
 16,634,871  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 3>::colStride() const [./main_prog]
 16,233,776  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::psub<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) [./main_prog]
 16,233,776  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_difference_op<double>::packetOp<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) const [./main_prog]
 16,002,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 0>::packet<0>(long) const [./main_prog]
 15,977,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const>::rows() const [./main_prog]
 15,670,432  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::ploadu<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type const*)
 15,223,380  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::derived() const [./main_prog]
 15,129,288  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h:double __vector(2) Eigen::internal::ploadt<double __vector(2), 1>(Eigen::internal::unpacket_traits<double __vector(2)>::type const*) [./main_prog]
 14,030,114  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false, true>::outerStride() const [./main_prog]
 13,799,984  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<Eigen::Matrix<double, -1, 1, 0, -1, 1>, std::allocator<Eigen::Matrix<double, -1, 1, 0, -1, 1> > >::operator[](unsigned long) [./main_prog]
 13,516,038  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h:double __vector(2) Eigen::internal::ploadt<double __vector(2), 0>(Eigen::internal::unpacket_traits<double __vector(2)>::type const*) [./main_prog]
 13,481,776  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::operator[](unsigned long) [./main_prog]
 13,444,308  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.tcc:std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>::_M_gen_rand() [./main_prog]
 13,210,905  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.tcc:std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>::operator()() [./main_prog]
 12,105,597  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const>::functor() const [./main_prog]
 11,955,738  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::derived() const [./main_prog]
 11,576,432  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
 11,540,944  ../src/CholeskyFactorization.cpp:CholeskyFactorization::compute(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, int&, double&, int) [./main_prog]
 11,223,632  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
 11,094,715  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, 3, 0, 0>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) [./main_prog]
 11,081,248  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gebp_traits<double, double, false, false>::madd(double __vector(2) const&, double __vector(2) const&, double __vector(2)&, double __vector(2)&) const [./main_prog]
 10,966,536  ../src/VectorOperations.cpp:VectorOperations::add(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) [./main_prog]
 10,920,640  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, true>::innerStride() const [./main_prog]
 10,376,226  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const>::nestedExpression() const [./main_prog]
 10,314,744  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> >::derived() const [./main_prog]
  9,251,154  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 3>::innerStride() const [./main_prog]
  9,150,480  ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) [./main_prog]
  9,135,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false, true>::innerStride() const [./main_prog]
  8,861,927  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gebp_kernel<double, double, long, 4, 4, false, false>::operator()(double*, long, double const*, double const*, long, long, long, double, long, long, long, long, double*) [./main_prog]
  8,835,926  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::pmul<double __vector(2)>(double __vector(2) const&, double __vector(2) const&)
  8,800,000  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u> >(std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&, std::uniform_real_distribution<double>::param_type const&) [./main_prog]
  8,730,408  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived() [./main_prog]
  8,520,880  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::packet<0>(long) const [./main_prog]
  8,338,204  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, -1, 0>::data() [./main_prog]
  6,635,000  ../src/MyBlackBoxFunction.cpp:MyBlackBoxFunction::evaluate(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, void*) [./main_prog]
  6,534,276  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::pload<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type const*)
  6,355,524  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::derived() const [./main_prog]
  6,218,220  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic(long) [./main_prog]
  6,070,085  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic(Eigen::internal::variable_if_dynamic<long, 1> const&) [./main_prog]
  6,004,080  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/cmath:std::log(long double) [./main_prog]
  5,915,655  ???:exp$fenv_access_off [/usr/lib/system/libsystem_m.dylib]
  5,909,184  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 3, 0, 0>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
  5,850,390  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>::functor() const [./main_prog]
  5,850,390  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::nestedExpression() const [./main_prog]
  5,850,390  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::functor() const [./main_prog]
  5,728,563  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>::Block(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, long, long, long, long) [./main_prog]
  5,643,276  ../src/VectorOperations.cpp:VectorOperations::rescale(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) [./main_prog]
  5,630,286  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> >::derived() const [./main_prog]
  5,387,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic(long) [./main_prog]
  5,331,880  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Dense>::packet<1>(long) const [./main_prog]
  5,171,544  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> >::derived() const [./main_prog]
  5,147,744  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::Dense>::coeff(long, long) const [./main_prog]
  5,140,432  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_multiple_op<double>::scalar_multiple_op(Eigen::internal::scalar_multiple_op<double> const&) [./main_prog]
  5,132,974  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 2>::innerStride() const [./main_prog]
  5,039,700  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, true>::innerStride() const [./main_prog]
  5,032,288  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:double __vector(2) Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::packet<1>(long) const [./main_prog]
  5,014,620  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>::nestedExpression() const [./main_prog]
  5,014,620  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::const_cast_derived() const [./main_prog]
  4,936,986  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:void Eigen::internal::pstore<double, double __vector(2)>(double*, double __vector(2) const&)
  4,794,452  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamic<long, 0>::variable_if_dynamic(long) [./main_prog]
  4,770,571  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_multiple_op<double>::operator()(double const&) const [./main_prog]
  4,673,130  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::copyCoeff<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(long, long, Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [./main_prog]
  4,666,340  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, true>::innerStride() const [./main_prog]
  4,551,570  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize() const [./main_prog]
  4,535,685  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::copyCoeffByOuterInner<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(long, long, Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [./main_prog]
  4,523,710  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::innerStride() const [./main_prog]
  4,506,678  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Matrix.h:Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride() const [./main_prog]
  4,476,153  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>::MapBase(double*, long, long) [./main_prog]
  4,313,813  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h:Eigen::FullPivHouseholderQR<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rank() const [./main_prog]
  4,302,575  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamic<long, 1>::value() [./main_prog]
  4,235,580  ../src/GaussianProcess.cpp:GaussianProcess::evaluate(std::vector<double, std::allocator<double> > const&, double&, double&) [./main_prog]
  4,221,555  ???:ImageLoaderMachOCompressed::trieWalk(unsigned char const*, unsigned char const*, char const*) [/usr/lib/dyld]
  4,172,657  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::MapBase(double*, long, long) [./main_prog]
  4,095,550  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<-1, 0>::Stride(Eigen::Stride<-1, 0> const&) [./main_prog]
  4,020,951  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true, true>::BlockImpl_dense(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, long) [./main_prog]
  3,950,336  ???:update_ [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
  3,780,848  ../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::compute_large_norm_solution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [./main_prog]
  3,766,210  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::padd<double __vector(2)>(double __vector(2) const&, double __vector(2) const&)
  3,624,864  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0> const&) [./main_prog]
  3,617,072  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >::Map(Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const&) [./main_prog]
  3,600,000  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:std::uniform_real_distribution<double>::param_type::a() const [./main_prog]
  3,587,138  ???:mma_minimize [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
  3,586,834  ???:ImageLoaderMachOCompressed::incrementCoalIterator(ImageLoader::CoalIterator&) [/usr/lib/dyld]
  3,571,904  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::copyCoeff<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >(long, long, Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > const&) [./main_prog]
  3,466,848  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::copyCoeffByOuterInner<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >(long, long, Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > const&) [./main_prog]
  3,466,848  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, Eigen::Dense>::coeff(long, long) const [./main_prog]
  3,437,170  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>, 3, 0>::run(Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
  3,348,662  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:long Eigen::internal::first_aligned<double, long>(double const*, long) [./main_prog]
  3,184,596  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>::Block(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const&, long, long, long, long) [./main_prog]
  3,174,322  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:void Eigen::internal::pstoreu<double, double __vector(2)>(double*, double __vector(2) const&) [./main_prog]
  3,171,756  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, true> const&) [./main_prog]
  3,134,138  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>::functor() const [./main_prog]
  3,117,678  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::derived() const [./main_prog]
  3,002,040  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>::min() [./main_prog]
  3,000,000  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u> >(std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&) [./main_prog]
  2,999,472  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_sum_op<double>::operator()(double const&, double const&) const [./main_prog]
  2,978,784  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0> const&) [./main_prog]
  2,978,784  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, true> const&) [./main_prog]
  2,973,663  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 3>::innerStride() const [./main_prog]
  2,972,438  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::nestedExpression() const [./main_prog]
  2,972,438  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::functor() const [./main_prog]
  2,950,584  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> >::derived() const [./main_prog]
  2,882,946  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >::copyCoeff<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> > const&) [./main_prog]
  2,830,752  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, true> const&) [./main_prog]
  2,830,752  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0> const&) [./main_prog]
  2,817,108  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 1>::coeffRef(long) [./main_prog]
  2,805,971  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [./main_prog]
  2,801,263  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::pset1<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type const&)
  2,780,568  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 0> const&) [./main_prog]
  2,768,640  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gebp_traits<double, double, false, false>::loadRhs(double const*, double __vector(2)&) const [./main_prog]
  2,744,171  ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::compute_basis_coefficients(BlackboxData const&) [./main_prog]
  2,731,212  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >::copyCoeff<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >(long, Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> > const&) [./main_prog]
  2,731,212  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>::coeff(long) const [./main_prog]
  2,728,212  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::derived() const [./main_prog]
  2,728,132  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 3>::innerStride() const [./main_prog]
  2,696,664  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false, true> const&) [./main_prog]
  2,696,664  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 0> const&) [./main_prog]
  2,686,404  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>::nestedExpression() const [./main_prog]
  2,637,120  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >::derived() const [./main_prog]
  2,622,520  ../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::backward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [./main_prog]
  2,611,455  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::coeff(long, long) const [./main_prog]
  2,611,253  ../src/VectorOperations.cpp:VectorOperations::dot_product(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) [./main_prog]
  2,601,768  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [./main_prog]
  2,594,952  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<-1, 0>::outer() const [./main_prog]
  2,587,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0> const&) [./main_prog]
  2,570,204  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, 1, 0>::data() const [./main_prog]
  2,547,804  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::const_cast_derived() const [./main_prog]
  2,534,100  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/TriangularSolverMatrix.h:Eigen::internal::triangular_solve_matrix<double, long, 1, 2, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [./main_prog]
  2,497,504  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::psub<double __vector(2)>(double __vector(2) const&, double __vector(2) const&)
  2,491,523  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>, 3, 0, 0>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> const&) [./main_prog]
  2,481,696  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_difference_op<double>::operator()(double const&, double const&) const [./main_prog]
  2,480,120  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false, true>::innerStride() const [./main_prog]
  2,435,616  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 1>::coeffRef(long) [./main_prog]
  2,432,997  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, true> const&) [./main_prog]
  2,401,632  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>, double>::operator()() [./main_prog]
  2,351,877  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const, Eigen::Dense>::coeff(long) const [./main_prog]
  2,339,319  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >& Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::lazyAssign<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > const&) [./main_prog]
  2,319,644  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::MapBase(double const*, long, long) [./main_prog]
  2,319,644  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0>::MapBase(double const*, long, long) [./main_prog]
  2,291,652  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::resize(long, long) [./main_prog]
  2,263,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, true> const&) [./main_prog]
  2,263,136  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, true>::BlockImpl_dense(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, long, long, long, long) [./main_prog]
  2,256,644  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_sum_op<double>::packetOp<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) const [./main_prog]
  2,254,838  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:long const& std::min<long>(long const&, long const&) [./main_prog]
  2,247,949  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 3>::innerStride() const [./main_prog]
  2,234,120  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::writePacket<1>(long, double __vector(2) const&) [./main_prog]
  2,204,445  ???:szone_free_definite_size [/usr/lib/system/libsystem_malloc.dylib]
  2,193,036  ../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::gradient(std::vector<double, std::allocator<double> > const&) [./main_prog]
  2,186,910  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:Eigen::internal::unpacket_traits<double __vector(2)>::type Eigen::internal::predux<double __vector(2)>(double __vector(2) const&) [./main_prog]
  2,150,391  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Swap.h:void Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::copyCoeff<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >(long, Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> > const&) [./main_prog]
  2,132,274  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:double* Eigen::internal::const_cast_ptr<double>(double const*) [./main_prog]
  2,129,686  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::OuterStride<-1>::OuterStride(Eigen::OuterStride<-1> const&) [./main_prog]
  2,124,276  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>::Block(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, long) [./main_prog]
  2,070,792  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::derived() const [./main_prog]
  2,055,099  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::copyPacket<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > const&) [./main_prog]
  2,048,409  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 1>::coeffRef(long, long) [./main_prog]
  2,042,558  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_conj_product_op<double, double>::packetOp<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) const [./main_prog]
  2,024,130  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/TriangularSolverVector.h:Eigen::internal::triangular_solve_vector<double, double, long, 1, 1, false, 0>::run(long, double const*, long, double*) [./main_prog]
  2,023,500  ../src/GaussianProcess.cpp:GaussianProcess::parameter_estimation_objective(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, void*) [./main_prog]
  2,015,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 1>::copyCoeff<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >(long, Eigen::DenseBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> > const&) [./main_prog]
  2,005,116  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >& Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::lazyAssign<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > const&) [./main_prog]
  2,001,050  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>, double>::_Adaptor(std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>&) [./main_prog]
  1,984,021  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::conj_helper<double __vector(2), double __vector(2), false, false>::pmul(double __vector(2) const&, double __vector(2) const&) const [./main_prog]
  1,964,028  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 3>::innerStride() const [./main_prog]
  1,963,468  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, Eigen::Dense> const&) [./main_prog]
  1,963,468  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const&) [./main_prog]
  1,955,508  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::derived() const [./main_prog]
  1,952,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>::rowIndexByOuterInner(long, long) const [./main_prog]
  1,952,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>::colIndexByOuterInner(long, long) const [./main_prog]
  1,945,394  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>::innerStride() const [./main_prog]
  1,899,288  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const&, long, long, long, long) [./main_prog]
  1,887,168  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, true> const&) [./main_prog]
  1,887,168  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0> const&) [./main_prog]
  1,871,748  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::copyPacket<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, 1>(long, Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [./main_prog]
  1,869,060  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const&) [./main_prog]
  1,859,700  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived() const [./main_prog]
  1,848,570  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::conj_helper<double, double, false, false>::pmul(double const&, double const&) const [./main_prog]
  1,807,218  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::derived() const [./main_prog]
  1,800,000  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:std::uniform_real_distribution<double>::param_type::b() const [./main_prog]
  1,785,952  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >::coeff(long, long) const [./main_prog]
  1,768,275  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&, Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::Index, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::Index) [./main_prog]
  1,744,710  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 0, 0, 0>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [./main_prog]
  1,741,926  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Swap.h:void Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >::copyPacket<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 1, 0>(long, Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> > const&) [./main_prog]
  1,719,504  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gebp_traits<double, double, false, false>::acc(double __vector(2) const&, double __vector(2) const&, double __vector(2)&) const [./main_prog]
  1,704,879  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_multiple_op<double>::scalar_multiple_op(double const&) [./main_prog]
  1,701,891  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>&, long, long, long, long) [./main_prog]
  1,697,352  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::coeffRef(long, long) [./main_prog]
  1,675,722  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::no_assignment_operator::no_assignment_operator() [./main_prog]
  1,669,074  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, 3>::innerStride() const [./main_prog]
  1,660,624  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gebp_traits<double, double, false, false>::loadLhs(double const*, double __vector(2)&) const [./main_prog]
  1,652,177  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::MapBase(double*, long, long) [./main_prog]
  1,650,132  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::coeff(long) const [./main_prog]
  1,650,132  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::coeffRef(long) [./main_prog]
  1,647,108  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 0>::coeff(long) const [./main_prog]
  1,642,578  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >::innerStride() const [./main_prog]
  1,641,430  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h:void Eigen::internal::outer_product_selector_run<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>::sub>(Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2> const&, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>::sub const&, Eigen::internal::false_type const&) [./main_prog]
  1,641,079  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 3>::innerStride() const [./main_prog]
  1,640,952  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>, Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> const&, Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::Index, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::Index) [./main_prog]
  1,631,214  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h:double Eigen::internal::pmul<double>(double const&, double const&) [./main_prog]
  1,622,424  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::derived() const [./main_prog]
  1,620,960  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1>::copyPacketByOuterInner<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, 0>(long, long, Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> > const&) [./main_prog]
  1,620,960  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1>::writePacket<1>(long, long, double __vector(2) const&) [./main_prog]
  1,613,508  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>::Block(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const&) [./main_prog]
  1,613,508  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, Eigen::Dense> const&) [./main_prog]
  1,601,088  ???:logl$fenv_access_off [/usr/lib/system/libsystem_m.dylib]
  1,598,220  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const&) [./main_prog]
  1,594,176  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::copyCoeff<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > const&) [./main_prog]
  1,588,280  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::MapBase(double const*, long, long) [./main_prog]
  1,574,834  ???:_platform_memmove$VARIANT$Haswell [/usr/lib/system/libsystem_platform.dylib]
  1,555,906  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, Eigen::Dense>::BlockImpl(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, long, long, long, long) [./main_prog]
  1,536,239  ???:szone_size [/usr/lib/system/libsystem_malloc.dylib]
  1,533,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/TriangularSolverVector.h:Eigen::internal::triangular_solve_vector<double, double, long, 1, 2, false, 0>::run(long, double const*, long, double*) [./main_prog]
  1,533,324  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>::Block(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const&) [./main_prog]
  1,533,324  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, Eigen::Dense> const&) [./main_prog]
  1,529,898  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >& Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::lazyAssign<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
  1,517,340  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false, true>::innerStride() const [./main_prog]
  1,517,340  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>::rows() const [./main_prog]
  1,506,141  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> const&) [./main_prog]
  1,506,141  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 1>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 1> const&) [./main_prog]
  1,506,141  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, Eigen::Dense> const&) [./main_prog]
  1,494,008  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, true>::BlockImpl_dense(Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const&, long) [./main_prog]
  1,491,890  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, true>::innerStride() const [./main_prog]
  1,476,612  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>::coeffRef(long) [./main_prog]
  1,463,460  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::rows() const [./main_prog]
  1,462,824  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>::coeffRef(long) [./main_prog]
  1,460,693  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>::Block(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const&) [./main_prog]
  1,460,693  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false, Eigen::Dense> const&) [./main_prog]
  1,460,693  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 1>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 1> const&) [./main_prog]
  1,455,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::tail(long) [./main_prog]
  1,436,226  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Swap.h:void Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::copyCoeff<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >(long, Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> > const&) [./main_prog]
  1,432,920  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gebp_traits<double, double, false, false>::initAcc(double __vector(2)&) [./main_prog]
  1,428,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::packet<0>(long) const [./main_prog]
  1,424,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 0>::packet<0>(long, long) const [./main_prog]
  1,424,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1>::copyPacket<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, 0>(long, long, Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> > const&) [./main_prog]
  1,419,971  ???:nlopt_optimize'2 [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
  1,411,650  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<0, 0>::Stride(Eigen::Stride<0, 0> const&) [./main_prog]
  1,401,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1> const&) [./main_prog]
  1,401,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>::Block(Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const&) [./main_prog]
  1,401,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, Eigen::Dense> const&) [./main_prog]
  1,383,770  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamic<long, 0>::value() [./main_prog]
  1,383,432  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::MapBase(double const*, long, long) [./main_prog]
  1,380,736  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double const Eigen::internal::scalar_identity_op<double>::operator()<long>(long, long) const [./main_prog]
  1,380,140  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:void Eigen::internal::pstoreu<double, double __vector(2)>(double*, double __vector(2) const&)
  1,379,785  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:Eigen::internal::unpacket_traits<double __vector(2)>::type Eigen::internal::pfirst<double __vector(2)>(double __vector(2) const&) [./main_prog]
  1,376,070  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::operator-=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >(Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > const&) [./main_prog]
  1,376,060  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, true>::BlockImpl_dense(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const&, long, long, long, long) [./main_prog]
  1,365,606  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::col(long) [./main_prog]
  1,365,606  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, 1>::coeffRef(long) [./main_prog]
  1,365,606  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, 0>::coeff(long) const [./main_prog]
  1,361,820  ???:__commpage_gettimeofday [/usr/lib/system/libsystem_kernel.dylib]
  1,354,890  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::copyCoeff<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > const&) [./main_prog]
  1,343,737  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/VectorBlock.h:Eigen::VectorBlock<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1>::VectorBlock(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, long, long) [./main_prog]
  1,338,204  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
  1,336,744  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>::MapBase(double*, long) [./main_prog]
  1,333,568  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>, 0, 0, 0>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> const&) [./main_prog]
  1,306,623  ???:free [/usr/lib/dyld]
  1,300,512  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const, Eigen::Dense>::coeff(long) const [./main_prog]
  1,290,610  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, true>::innerStride() const [./main_prog]
  1,285,506  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >::innerStride() const [./main_prog]
  1,281,280  ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::compute_mat_vec_representation(int) [./main_prog]
  1,273,536  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> >::derived() const [./main_prog]
  1,258,176  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > >::derived() const [./main_prog]
  1,245,060  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >::outerStride() const [./main_prog]
  1,239,649  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 0>::MapBase(double*, long, long) [./main_prog]
  1,238,598  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 0>::coeff(long, long) const [./main_prog]
  1,238,463  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const&, Eigen::internal::scalar_multiple_op<double> const&) [./main_prog]
  1,235,680  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::writePacket<1>(long, double __vector(2) const&) [./main_prog]
  1,235,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::TransposeImpl<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const, Eigen::Dense>::coeff(long) const [./main_prog]
  1,231,000  ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::gradient(std::vector<double, std::allocator<double> > const&, int) [./main_prog]
  1,213,872  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 1>::MapBase(double*, long, long) [./main_prog]
  1,208,088  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >::derived() const [./main_prog]
  1,204,416  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:double __vector(2) Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::packet<1>(long) const [./main_prog]
  1,195,076  ???:tiny_free_list_add_ptr [/usr/lib/system/libsystem_malloc.dylib]
  1,185,491  ???:tiny_malloc_from_free_list [/usr/lib/system/libsystem_malloc.dylib]
  1,182,336  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >::derived() const [./main_prog]
  1,179,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >& Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::operator-=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > const&) [./main_prog]
  1,170,416  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<double> const&) [./main_prog]
  1,161,630  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&, Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::Index, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::Index) [./main_prog]
  1,154,786  ???:szone_malloc_should_clear [/usr/lib/system/libsystem_malloc.dylib]
  1,147,032  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>::writePacket<1>(long, double __vector(2) const&) [./main_prog]
  1,146,754  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<-1, 0>::inner() const [./main_prog]
  1,138,005  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true, Eigen::Dense>::BlockImpl(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, long) [./main_prog]
  1,131,568  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::MapBase(double*, long, long) [./main_prog]
  1,113,984  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::coeff(long) const [./main_prog]
  1,105,305  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const, Eigen::Dense>::coeff(long) const [./main_prog]
  1,105,305  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, Eigen::Dense>::coeff(long) const [./main_prog]
  1,100,848  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>::Block(Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const&, long) [./main_prog]
  1,100,848  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >::Map(double*, long, Eigen::Stride<0, 0> const&) [./main_prog]
  1,099,332  ../include/SubproblemDefinitions.hpp:SubproblemDefinitions<MinimumFrobeniusNormModel, SubproblemOptimization>::constraints_for_subproblems(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, void*) [./main_prog]
  1,086,148  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false, true>::outerStride() const [./main_prog]
  1,085,945  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h:void Eigen::internal::outer_product_selector_run<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>::sub>(Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2> const&, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>::sub const&, Eigen::internal::false_type const&) [./main_prog]
  1,062,990  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Dense>::coeff(long) const [./main_prog]
  1,062,138  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true, true>::init() [./main_prog]
  1,062,138  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>::cols() const [./main_prog]
  1,061,532  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0>::coeffRef(long, long) const [./main_prog]
  1,061,532  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 0>::coeffRef(long, long) const [./main_prog]
  1,061,124  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >::innerStride() const [./main_prog]
  1,061,124  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::derived() const [./main_prog]
  1,054,987  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> >::operator*(double const&) const [./main_prog]
  1,054,464  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >::derived() const [./main_prog]
  1,054,464  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >::derived() const [./main_prog]
  1,053,711  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::blas_data_mapper<double, long, 0>::operator()(long, long) [./main_prog]
  1,052,020  ???:nlopt_seconds [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
  1,046,350  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::at(unsigned long) [./main_prog]
  1,044,022  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::cols() const [./main_prog]
  1,022,216  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, Eigen::Dense> const&) [./main_prog]
  1,022,216  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::CwiseUnaryOp(Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const&, Eigen::internal::scalar_multiple_op<double> const&) [./main_prog]
  1,022,216  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>::Block(Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const&) [./main_prog]
  1,019,664  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 1>::writePacket<0>(long, double __vector(2) const&) [./main_prog]
  1,019,664  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 1>::writePacket<1>(long, double __vector(2) const&) [./main_prog]
  1,009,118  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) [./main_prog]
  1,008,108  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::BlockImpl_dense(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long) [./main_prog]
  1,006,445  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::CwiseBinaryOp(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::internal::scalar_conj_product_op<double, double> const&) [./main_prog]
  1,005,440  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::size() const [./main_prog]
  1,001,350  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression() const [./main_prog]
  1,000,680  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h:std::mersenne_twister_engine<unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u, 11ul, 4294967295u, 7ul, 2636928640u, 15ul, 4022730752u, 18ul, 1812433253u>::max() [./main_prog]
  1,000,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>, 1, 0, 0>::run(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>&, Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> const&) [./main_prog]
    998,942  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::rhs() const [./main_prog]
    998,942  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::functor() const [./main_prog]
    998,942  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::lhs() const [./main_prog]
    990,122  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false, true>::init() [./main_prog]
    987,255  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>::copyPacket<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > > const&) [./main_prog]
    987,195  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 2>::innerStride() const [./main_prog]
    983,610  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::copyPacket<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [./main_prog]
    981,035  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>& Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::lazyAssign<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >(Eigen::DenseBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> > const&) [./main_prog]
    977,580  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::rows() const [./main_prog]
    976,728  ???:gettimeofday [/usr/lib/system/libsystem_c.dylib]
    964,282  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_constant_op<double>::packetOp<long>(long, long) const [./main_prog]
    955,860  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>::packet<1>(long) const [./main_prog]
    955,860  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::packet<0>(long) const [./main_prog]
    951,564  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::derived() const [./main_prog]
    949,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::derived() const [./main_prog]
    947,298  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::copyCoeff<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >(long, Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> > const&) [./main_prog]
    944,979  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::const_blas_data_mapper<double, long, 0>::operator()(long, long) const [./main_prog]
    942,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, true>::BlockImpl_dense(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, long) [./main_prog]
    937,090  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 2>::outerStride() const [./main_prog]
    937,090  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 2>::innerStride() const [./main_prog]
    924,450  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::_M_range_check(unsigned long) const [./main_prog]
    923,160  ../src/VectorOperations.cpp:VectorOperations::minus(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) [./main_prog]
    917,380  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >& Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::operator=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > const&) [./main_prog]
    917,380  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::cols() const [./main_prog]
    917,380  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::rows() const [./main_prog]
    911,030  ???:mach_absolute_time [/usr/lib/dyld]
    910,404  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::const_cast_derived() const [./main_prog]
    910,404  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::derived() [./main_prog]
    906,894  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Matrix.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>::innerStride() const [./main_prog]
    904,268  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> >::operator*(double const&) const [./main_prog]
    904,020  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:void Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::copyCoeff<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
    899,940  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::operator-=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
    897,450  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, true>::innerStride() const [./main_prog]
    896,096  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>::Block(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long) [./main_prog]
    889,417  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const>, 1, 0, 0>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> const&) [./main_prog]
    889,417  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, 1, 0, 0>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >&, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> const&) [./main_prog]
    885,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false>, 0>::packet<0>(long) const [./main_prog]
    877,560  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>::writePacket<1>(long, double __vector(2) const&) [./main_prog]
    864,952  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, Eigen::Dense>::BlockImpl(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const&, long, long, long, long) [./main_prog]
    861,570  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 0>::rows() const [./main_prog]
    861,570  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 0>::cols() const [./main_prog]
    849,720  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 0>::packet<1>(long) const [./main_prog]
    849,720  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 0>::packet<0>(long) const [./main_prog]
    839,832  ../src/QuadraticMinimization.cpp:QuadraticMinimization::minimize(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [./main_prog]
    834,537  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 3>::innerStride() const [./main_prog]
    834,537  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 3>::outerStride() const [./main_prog]
    827,012  ???:nlopt_optimize_limited'2 [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    825,642  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::SelfCwiseBinaryOp(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>&, Eigen::internal::scalar_difference_op<double> const&) [./main_prog]
    825,642  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::derived() const [./main_prog]
    820,680  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, true>::BlockImpl_dense(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const&, long, long, long, long) [./main_prog]
    809,946  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const&, Eigen::internal::scalar_multiple_op<double> const&) [./main_prog]
    807,600  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::derived() const [./main_prog]
    802,747  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double const Eigen::internal::scalar_constant_op<double>::operator()<long>(long, long) const [./main_prog]
    786,320  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> const&) [./main_prog]
    786,320  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>::rows() const [./main_prog]
    786,320  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >& Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::operator=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > const&) [./main_prog]
    786,320  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::rows() const [./main_prog]
    786,320  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::cols() const [./main_prog]
    779,773  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::operator=(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) [./main_prog]
    779,773  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::size() const [./main_prog]
    779,773  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h:void Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>::sub::operator()<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> const&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) const [./main_prog]
    777,216  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3, 0, 0>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [./main_prog]
    774,366  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> >::derived() const [./main_prog]
    766,710  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 2>::rowStride() const [./main_prog]
    766,710  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 2>::colStride() const [./main_prog]
    758,670  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>::DenseCoeffsBase() [./main_prog]
    758,670  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 3>::DenseCoeffsBase() [./main_prog]
    758,670  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, double, double, false>::special_scalar_op_base() [./main_prog]
    758,670  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::DenseBase() [./main_prog]
    758,670  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 1>::DenseCoeffsBase() [./main_prog]
    758,670  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::MatrixBase() [./main_prog]
    755,136  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::coeff(long) const [./main_prog]
    754,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 4, 0, 0>::run(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>&, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const&) [./main_prog]
    753,760  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>::Block(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, long) [./main_prog]
    747,004  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/VectorBlock.h:Eigen::VectorBlock<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1>::VectorBlock(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const&, long, long) [./main_prog]
    747,004  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> >::segment(long, long) const [./main_prog]
    737,490  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const, Eigen::Dense>::coeff(long) const [./main_prog]
    735,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const>::functor() const [./main_prog]
    735,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>::functor() const [./main_prog]
    735,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const>::nestedExpression() const [./main_prog]
    735,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>::lhs() const [./main_prog]
    735,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>::rhs() const [./main_prog]
    735,385  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false, true>::BlockImpl_dense(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>&, long, long, long, long) [./main_prog]
    733,904  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::coeffRef(long) [./main_prog]
    733,904  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:void Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::checkTransposeAliasing<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) const [./main_prog]
    730,620  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::coeff(long) const [./main_prog]
    724,727  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, 1, 0>::resize(long, long, long) [./main_prog]
    723,582  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>::rows() const [./main_prog]
    720,588  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::derived() [./main_prog]
    713,044  ../src/GaussianProcessSupport.cpp:GaussianProcessSupport::smooth_data(BlackboxData&) [./main_prog]
    711,678  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_difference_op<double>::scalar_difference_op() [./main_prog]
    707,688  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::derived() const [./main_prog]
    707,688  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > >::col(long) const [./main_prog]
    707,688  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::SelfCwiseBinaryOp(Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >&, Eigen::internal::scalar_difference_op<double> const&) [./main_prog]
    707,688  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> >::derived() const [./main_prog]
    707,230  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::MatrixBase() [./main_prog]
    707,230  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::DenseCoeffsBase() [./main_prog]
    707,230  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::DenseCoeffsBase() [./main_prog]
    707,230  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 3>::DenseCoeffsBase() [./main_prog]
    707,230  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, double, double, false>::special_scalar_op_base() [./main_prog]
    707,230  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::DenseBase() [./main_prog]
    705,600  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    704,526  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> >::derived() [./main_prog]
    689,954  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> >::operator*(double const&) const [./main_prog]
    688,035  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::operator*(double const&, Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> > const&) [./main_prog]
    688,035  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_selector<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, false, false>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) [./main_prog]
    683,936  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<0, 0>::Stride() [./main_prog]
    683,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::CwiseBinaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    682,803  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 3>::rowStride() const [./main_prog]
    682,803  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 3>::colStride() const [./main_prog]
    680,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::coeff(long) const [./main_prog]
    680,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >::derived() const [./main_prog]
    677,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:void Eigen::internal::gebp_madd<Eigen::internal::conj_helper<double, double, false, false>, double, double, double, double>(Eigen::internal::conj_helper<double, double, false, false> const&, double&, double&, double&, double&) [./main_prog]
    673,254  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 0>::coeff(long) const [./main_prog]
    672,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::derived() const [./main_prog]
    668,372  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::operator=(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> const&) [./main_prog]
    668,372  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::size() const [./main_prog]
    668,148  ???:ImageLoaderMachO::findExportedSymbol(char const*, bool, ImageLoader const**) const'2 [/usr/lib/dyld]
    667,520  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:Eigen::internal::general_matrix_vector_product<long, double, 0, false, double, false, 0>::run(long, long, double const*, long, double const*, long, double*, long, double) [./main_prog]
    662,270  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 0>::cols() const [./main_prog]
    659,956  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
    654,906  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::cols() const [./main_prog]
    647,784  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gemm_pack_lhs<double, long, 4, 2, 0, false, false>::operator()(double*, double const*, long, long, long, long, long) [./main_prog]
    646,872  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::coeffRef(long, long) const [./main_prog]
    642,576  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:void Eigen::internal::pstore1<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type*, Eigen::internal::unpacket_traits<double __vector(2)>::type const&) [./main_prog]
    638,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>, 3, 0>::run(Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    636,507  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Matrix.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>::outerStride() const [./main_prog]
    636,507  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::innerSize() const [./main_prog]
    633,096  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::coeffRef(long, long) const [./main_prog]
    633,096  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::tail(long) const [./main_prog]
    630,056  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    630,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::CwiseBinaryOp(Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const&, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const&, Eigen::internal::scalar_product_op<double, double> const&) [./main_prog]
    630,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::CwiseBinaryOp(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const&, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const&, Eigen::internal::scalar_product_op<double, double> const&) [./main_prog]
    629,056  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::coeffRef(long) [./main_prog]
    629,056  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:void Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::checkTransposeAliasing<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> const&) const [./main_prog]
    628,215  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::functor() const [./main_prog]
    627,628  ../src/VectorOperations.cpp:VectorOperations::scale(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) [./main_prog]
    626,610  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gemm_pack_rhs<double, long, 4, 0, false, true>::operator()(double*, double const*, long, long, long, long, long) [./main_prog]
    622,166  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::size() const [./main_prog]
    614,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 0>::rows() const [./main_prog]
    611,568  ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&, int) [./main_prog]
    609,364  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    599,960  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::cols() const [./main_prog]
    599,960  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::rows() const [./main_prog]
    599,960  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >& Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::operator=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
    589,740  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, Eigen::Dense>::BlockImpl(Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const&, long) [./main_prog]
    589,740  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>::MapBase(double*, long) [./main_prog]
    589,740  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_selector<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>, false, false>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> const&) [./main_prog]
    589,740  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::operator*(double const&, Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> > const&) [./main_prog]
    587,601  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 1>::copyPacket<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const>, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const> > const&) [./main_prog]
    581,334  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >::derived() const [./main_prog]
    580,804  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >::operator[](unsigned long) const [./main_prog]
    573,715  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >, 3, 0, 0>::run(Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > const&) [./main_prog]
    567,297  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::tail(long) [./main_prog]
    567,297  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::coeffRef(long, long) [./main_prog]
    559,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:double const& Eigen::internal::conj_if<false>::operator()<double>(double const&) [./main_prog]
    558,600  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, 3, 0, 0>::run(Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&) [./main_prog]
    552,318  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h:void Eigen::internal::pstoret<double, double __vector(2), 0>(double*, double __vector(2) const&) [./main_prog]
    550,424  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false, true>::init() [./main_prog]
    550,424  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>::cols() const [./main_prog]
    550,424  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, true>::outerStride() const [./main_prog]
    550,424  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true, true>::init() [./main_prog]
    547,546  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 3, 0, 0>::run(Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >&, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> const&) [./main_prog]
    539,964  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::SelfCwiseBinaryOp(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>&, Eigen::internal::scalar_difference_op<double> const&) [./main_prog]
    539,964  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::derived() const [./main_prog]
    538,470  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::const_cast_derived() const [./main_prog]
    538,470  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::nestedExpression() const [./main_prog]
    538,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::rows() const [./main_prog]
    531,069  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const>::functor() const [./main_prog]
    530,671  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Dot.h:Eigen::internal::scalar_product_traits<double, Eigen::internal::traits<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::Scalar>::ReturnType Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::dot<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) const [./main_prog]
    529,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::derived() const [./main_prog]
    529,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::derived() const [./main_prog]
    528,816  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 1>::writePacket<1>(long, double __vector(2) const&) [./main_prog]
    528,675  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 1, 0, 0>::run(Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >&, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> const&) [./main_prog]
    528,498  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:Eigen::internal::gebp_traits<double, double, false, false>::unpackRhs(long, double const*, double*) [./main_prog]
    525,100  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::cols() const [./main_prog]
    521,270  ???:nlopt_isinf [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    516,109  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false>, 2>::innerStride() const [./main_prog]
    515,856  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, Eigen::Dense>::BlockImpl(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const&, long, long, long, long) [./main_prog]
    511,910  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:double __vector(2) Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::packet<0>(long) const [./main_prog]
    510,020  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:double __vector(2) Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >::packet<0>(long) const [./main_prog]
    509,966  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::operator=(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
    509,966  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::size() const [./main_prog]
    509,966  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h:void Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>::sub::operator()<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> const&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) const [./main_prog]
    509,600  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::CwiseUnaryOp(Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const&, Eigen::internal::scalar_multiple_op<double> const&) [./main_prog]
    504,559  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::rows() const [./main_prog]
    504,559  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::cols() const [./main_prog]
    504,559  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::cols() const [./main_prog]
    504,559  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::rows() const [./main_prog]
    504,264  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0> const&) [./main_prog]
    504,054  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::row(long) [./main_prog]
    504,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    504,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    504,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    497,184  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_abs2_op<double>::packetOp<double __vector(2)>(double __vector(2) const&) const [./main_prog]
    494,200  ???:tlv_get_addr [/usr/lib/system/libdyld.dylib]
    494,073  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::binaryExpr<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&, Eigen::internal::scalar_conj_product_op<double, double> const&) const [./main_prog]
    487,701  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyPacket<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 1>(long, Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    486,010  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::coeff(long) const [./main_prog]
    485,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::resizeLike<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
    485,144  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const>, 3, 0>::run(Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    485,122  ???:nlopt_stop_forced [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    484,848  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const> >::derived() const [./main_prog]
    484,560  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::col(long) const [./main_prog]
    484,297  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_constant_op<double>::scalar_constant_op(Eigen::internal::scalar_constant_op<double> const&) [./main_prog]
    479,968  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:void Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::checkTransposeAliasing<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) const [./main_prog]
    479,968  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::coeffRef(long) [./main_prog]
    475,782  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::derived() [./main_prog]
    473,888  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:void Eigen::internal::prefetch<double>(double const*) [./main_prog]
    471,792  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::derived() [./main_prog]
    470,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>::Block(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long, long, long, long) [./main_prog]
    469,190  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false, true>::innerStride() const [./main_prog]
    463,762  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::CwiseNullaryOp(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    462,242  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false, Eigen::Dense>::BlockImpl(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>&, long, long, long, long) [./main_prog]
    462,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>& Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::lazyAssign<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&) [./main_prog]
    462,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const, Eigen::Dense>::coeff(long) const [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::DenseBase() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::rows() const [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >, 0>::DenseCoeffsBase() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >, 3>::DenseCoeffsBase() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >, 1>::DenseCoeffsBase() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>::cols() const [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const, Eigen::Dense>::CwiseUnaryOpImpl() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, 0>::DenseCoeffsBase() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >, double, double, false>::special_scalar_op_base() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::DenseBase() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::MatrixBase() [./main_prog]
    458,690  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::MatrixBase() [./main_prog]
    455,700  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::coeff(long) const [./main_prog]
    455,202  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >::const_cast_derived() const [./main_prog]
    455,202  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, 0>::checkSanity() const [./main_prog]
    455,202  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true> >::EigenBase() [./main_prog]
    455,202  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const>::nestedExpression() const [./main_prog]
    455,202  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >::const_cast_derived() const [./main_prog]
    451,360  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const>, 3, 0>::run(Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    450,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::operator*(double const&) const [./main_prog]
    449,970  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::operator*(double const&, Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> > const&) [./main_prog]
    449,970  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_selector<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, false, false>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
    448,048  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::MapBase(double*, long, long) [./main_prog]
    445,512  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/VectorBlock.h:Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1>::VectorBlock(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const&, long, long) [./main_prog]
    444,923  ???:nlopt_stop_time [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    442,952  ???:ccsa_quadratic_minimize [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    441,231  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true> const&) [./main_prog]
    441,156  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double const Eigen::internal::scalar_sum_op<double>::predux<double __vector(2)>(double __vector(2) const&) const [./main_prog]
    436,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_product_op<double, double>::packetOp<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) const [./main_prog]
    432,476  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::rows() const [./main_prog]
    432,476  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::cols() const [./main_prog]
    432,476  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 2>::outerStride() const [./main_prog]
    432,476  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 2>::innerStride() const [./main_prog]
    432,476  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::cols() const [./main_prog]
    432,476  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::rows() const [./main_prog]
    430,283  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 0>::cols() const [./main_prog]
    428,553  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> const>::cols() const [./main_prog]
    428,256  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>::cols() const [./main_prog]
    424,338  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 0>::checkSanity() const [./main_prog]
    424,338  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::EigenBase() [./main_prog]
    423,405  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Dense>::coeff(long) const [./main_prog]
    423,378  ???:tiny_free_list_remove_ptr [/usr/lib/system/libsystem_malloc.dylib]
    423,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 0>::rowIndexByOuterInner(long, long) const [./main_prog]
    423,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 0>::colIndexByOuterInner(long, long) const [./main_prog]
    421,032  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::derived() [./main_prog]
    420,877  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::sum() const [./main_prog]
    420,448  ???:malloc_zone_malloc [/usr/lib/system/libsystem_malloc.dylib]
    420,220  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/VectorBlock.h:Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, -1>::VectorBlock(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>&, long, long) [./main_prog]
    420,045  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, Eigen::Dense>::BlockImpl(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long) [./main_prog]
    420,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>::CwiseBinaryOp(Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&, Eigen::internal::scalar_product_op<double, double> const&) [./main_prog]
    416,583  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1>::coeffRef(long, long) [./main_prog]
    416,268  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::coeffRef(long) [./main_prog]
    414,641  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h:Eigen::FullPivHouseholderQR<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::compute(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [./main_prog]
    412,821  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>::rows() const [./main_prog]
    412,440  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Dense>::packet<1>(long) const [./main_prog]
    410,960  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::Constant(long, double const&) [./main_prog]
    410,696  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 2>::innerStride() const [./main_prog]
    409,871  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::cols() const [./main_prog]
    409,871  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::rows() const [./main_prog]
    409,095  ???:ImageLoaderMachOCompressed::libReExported(unsigned int) const [/usr/lib/dyld]
    408,688  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_quotient1_op<double>::packetOp(double __vector(2) const&) const [./main_prog]
    404,740  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, 0>::MapBase(double*, long, long) [./main_prog]
    404,712  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:void Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::writePacket<1>(long, double __vector(2) const&) [./main_prog]
    404,350  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 0>::cols() const [./main_prog]
    403,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, Eigen::Dense>::BlockImpl(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, long) [./main_prog]
    403,034  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 3, 0, 0>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [./main_prog]
    402,578  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::cols() const [./main_prog]
    402,578  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::rows() const [./main_prog]
    400,759  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resize(long, long) [./main_prog]
    398,616  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::size() const [./main_prog]
    395,536  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 0>::MapBase(double*, long, long) [./main_prog]
    395,472  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, std::allocator<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::operator[](unsigned long) [./main_prog]
    395,262  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<0, 0>::inner() const [./main_prog]
    395,262  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<0, 0>::outer() const [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const, Eigen::Dense>::CwiseUnaryOpImpl() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >, 1>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::MatrixBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::rows() const [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 2>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 2>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, double, double, false>::special_scalar_op_base() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, double, double, false>::special_scalar_op_base() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::DenseBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, double, double, false>::special_scalar_op_base() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::MatrixBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::MatrixBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 0>::cols() const [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >, 0>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> >::DenseBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> >::DenseBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> >::MatrixBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>, 0>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 3>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >, 3>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::DenseBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> >::MatrixBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 0>::rows() const [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::DenseBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >, double, double, false>::special_scalar_op_base() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0>::rows() const [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 1>::DenseCoeffsBase() [./main_prog]
    393,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::DenseCoeffsBase() [./main_prog]
    392,963  ???:strcmp [/usr/lib/dyld]
    392,180  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:Eigen::internal::aligned_free(void*) [./main_prog]
    392,042  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::init() [./main_prog]
    392,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::rows() const [./main_prog]
    391,410  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::derived() [./main_prog]
    390,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>::nestedExpression() const [./main_prog]
    388,984  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/vector.tcc:std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [./main_prog]
    388,692  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyPacket<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
    386,903  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::size() const [./main_prog]
    386,217  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>::cols() const [./main_prog]
    385,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::lazyAssign<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
    384,279  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Dot.h:Eigen::internal::dot_nocheck<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<double, -1, 1, 0, -1, 1>, false>::run(Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&, Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    382,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::derived() const [./main_prog]
    382,705  ???:ImageLoaderMachOCompressed::rebase(ImageLoader::LinkContext const&) [/usr/lib/dyld]
    382,545  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 3, 0, 0>::run(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [./main_prog]
    381,981  ???:nlopt_stop_x [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    376,880  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, true>::init() [./main_prog]
    376,880  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::cols() const [./main_prog]
    376,305  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:Eigen::internal::unpacket_traits<double __vector(2)>::type Eigen::internal::pfirst<double __vector(2)>(double __vector(2) const&)
    367,570  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::rows() const [./main_prog]
    365,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::cols() const [./main_prog]
    365,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::rows() const [./main_prog]
    364,106  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, 0, 0>::run(Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >&, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> const&) [./main_prog]
    364,106  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, 0, 0>::run(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>&, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> const&) [./main_prog]
    364,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::CwiseUnaryOp(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&) [./main_prog]
    361,925  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::resizeLike<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    361,854  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::derived() [./main_prog]
    359,292  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >::derived() const [./main_prog]
    356,740  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>& Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::operator=<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
    353,844  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::cols() const [./main_prog]
    353,844  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 2>::rowStride() const [./main_prog]
    353,844  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>::rows() const [./main_prog]
    353,844  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 2>::colStride() const [./main_prog]
    352,558  ???:nlopt::opt::myvfunc(unsigned int, double const*, double*, void*) [./main_prog]
    350,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::rows() const [./main_prog]
    344,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>, 3, 0, 0>::run(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> const&) [./main_prog]
    343,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_product_op<double, double>::scalar_product_op(Eigen::internal::scalar_product_op<double, double> const&) [./main_prog]
    342,432  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_sum_op<double>::scalar_sum_op() [./main_prog]
    340,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::copyPacket<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&) [./main_prog]
    338,903  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::internal::checkTransposeAliasing_impl<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>, true>::run(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> const&, Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> const&) [./main_prog]
    336,176  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 1>::MapBase(double*, long, long) [./main_prog]
    336,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    335,790  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>::CwiseUnaryOp(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const&, Eigen::internal::scalar_multiple_op<double> const&) [./main_prog]
    332,059  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::pdiv<double __vector(2)>(double __vector(2) const&, double __vector(2) const&) [./main_prog]
    331,854  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const> >::derived() const [./main_prog]
    331,641  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::resizeLike<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >(Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
    329,978  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::cols() const [./main_prog]
    329,978  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::rows() const [./main_prog]
    329,978  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::cols() const [./main_prog]
    329,978  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::rows() const [./main_prog]
    329,625  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::rows() const [./main_prog]
    329,280  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>::MapBase(Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 0> const&) [./main_prog]
    328,768  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::NullaryExpr<Eigen::internal::scalar_constant_op<double> >(long, Eigen::internal::scalar_constant_op<double> const&) [./main_prog]
    328,768  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::Zero(long) [./main_prog]
    328,272  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true, true>::outerStride() const [./main_prog]
    328,272  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false, true>::init() [./main_prog]
    327,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >, 0>::MapBase(double const*, long, long) [./main_prog]
    326,512  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, 3, 0, 0>::run(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    325,275  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::pnegate<double __vector(2)>(double __vector(2) const&) [./main_prog]
    324,864  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Diagonal.h:Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0>::rows() const [./main_prog]
    324,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::operator+<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> > const&) const [./main_prog]
    323,993  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const>, 3, 0, 0>::run(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const> const&) [./main_prog]
    323,118  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SolveTriangular.h:Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 1, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [./main_prog]
    321,083  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::rhs() const [./main_prog]
    321,083  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::internal::checkTransposeAliasing_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, false>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > const&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) [./main_prog]
    319,637  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::head(long) [./main_prog]
    318,640  ../src/GaussianProcess.cpp:GaussianProcess::update(std::vector<double, std::allocator<double> > const&, double&, double&) [./main_prog]
    315,560  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false, true>::BlockImpl_dense(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>&, long) [./main_prog]
    315,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::cols() const [./main_prog]
    311,134  ???:nlopt_stop_ftol [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    311,083  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::result_of<Eigen::internal::scalar_sum_op<double> (double)>::type Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::redux<Eigen::internal::scalar_sum_op<double> >(Eigen::internal::scalar_sum_op<double> const&) const [./main_prog]
    309,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 0>::MapBase(double*, long, long) [./main_prog]
    309,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const>, 3, 0>::run(Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    309,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const>, 3, 0>::run(Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    309,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const>, 3, 0>::run(Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    308,033  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::cols() const [./main_prog]
    308,033  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::rows() const [./main_prog]
    304,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/MatrixCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::Scalar>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> >::cwiseProduct<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> > const&) const [./main_prog]
    304,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/MatrixCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, Eigen::internal::traits<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::Scalar>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::cwiseProduct<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> > const&) const [./main_prog]
    303,229  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::size() const [./main_prog]
    303,229  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_selector<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, false, true>::run(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    301,956  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> >::derived() const [./main_prog]
    301,627  ???:malloc [/usr/lib/dyld]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >, 1>::DenseCoeffsBase() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::MatrixBase() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::rows() const [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::DenseBase() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const, Eigen::Dense>::CwiseUnaryOpImpl() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::DenseBase() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::cols() const [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 0>::DenseCoeffsBase() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >, 0>::DenseCoeffsBase() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >, double, double, false>::special_scalar_op_base() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::MatrixBase() [./main_prog]
    299,980  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >, 3>::DenseCoeffsBase() [./main_prog]
    298,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::Index, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::Index) [./main_prog]
    297,045  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> >::operator*(double const&) const [./main_prog]
    296,274  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:void Eigen::internal::conditional_aligned_delete_auto<double, true>(double*, unsigned long) [./main_prog]
    294,154  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false, true>::init() [./main_prog]
    294,154  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::outerStride() const [./main_prog]
    294,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::operator*(double const&, Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> > const&) [./main_prog]
    293,670  ???:nlopt_set_maxtime [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    291,648  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    287,364  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_constant_op<double>::scalar_constant_op(double const&) [./main_prog]
    285,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >::transpose() const [./main_prog]
    285,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>::Transpose(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    285,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:void Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::checkTransposeAliasing<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >(Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> const&) const [./main_prog]
    283,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::CwiseBinaryOp(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&) [./main_prog]
    283,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::CwiseBinaryOp(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&) [./main_prog]
    283,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::coeff(long) const [./main_prog]
    283,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::coeff(long) const [./main_prog]
    283,176  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>&, long, long, long, long) [./main_prog]
    283,045  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 0>::rows() const [./main_prog]
    281,413  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 3>::innerStride() const [./main_prog]
    281,270  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::__normal_iterator(double const* const&) [./main_prog]
    280,885  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::lazyAssign<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    280,030  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::MatrixBase() [./main_prog]
    280,030  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, double, double, false>::special_scalar_op_base() [./main_prog]
    280,030  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::DenseCoeffsBase() [./main_prog]
    280,030  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 3>::DenseCoeffsBase() [./main_prog]
    280,030  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::DenseBase() [./main_prog]
    280,030  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::DenseCoeffsBase() [./main_prog]
    280,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>::rows() const [./main_prog]
    280,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::rows() const [./main_prog]
    279,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::functor() const [./main_prog]
    277,706  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::cols() const [./main_prog]
    277,706  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::rows() const [./main_prog]
    277,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::cols() const [./main_prog]
    275,214  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::derived() [./main_prog]
    275,214  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::EigenBase() [./main_prog]
    275,214  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> > >::EigenBase() [./main_prog]
    275,214  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::lhs() const [./main_prog]
    275,212  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::internal::checkTransposeAliasing_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const>, false>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > const&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> const&) [./main_prog]
    275,212  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >::cast_to_pointer_type(double*) [./main_prog]
    275,212  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0>::cols() const [./main_prog]
    275,212  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::cols() const [./main_prog]
    274,518  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::const_cast_derived() const [./main_prog]
    274,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >::Map(Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&) [./main_prog]
    273,143  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, Eigen::Dense>::BlockImpl(Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, Eigen::Dense> const&) [./main_prog]
    273,143  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> const&) [./main_prog]
    273,143  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::MapBase(Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1> const&) [./main_prog]
    272,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyPacket<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, 1, 0>(long, Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true> > const&) [./main_prog]
    270,816  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const> >::derived() const [./main_prog]
    270,720  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:void Eigen::internal::conditional_aligned_free<true>(void*) [./main_prog]
    269,796  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >::const_cast_derived() const [./main_prog]
    269,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::DenseCoeffsBase() [./main_prog]
    269,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 2>::DenseCoeffsBase() [./main_prog]
    269,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::MatrixBase() [./main_prog]
    269,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, double, double, false>::special_scalar_op_base() [./main_prog]
    269,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::DenseBase() [./main_prog]
    267,555  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::internal::check_transpose_aliasing_run_time_selector<double, false, Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >::run(double const*, Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> const&) [./main_prog]
    265,230  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const> >::derived() const [./main_prog]
    262,207  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<int, std::allocator<int> >::operator[](unsigned long) const [./main_prog]
    260,680  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>&, long, long, long, long) [./main_prog]
    260,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h:double __vector(2) Eigen::internal::pabs<double __vector(2)>(double __vector(2) const&) [./main_prog]
    257,928  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 2>::outerStride() const [./main_prog]
    257,928  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::rows() const [./main_prog]
    257,928  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::cols() const [./main_prog]
    256,905  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::lazyAssign<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
    256,375  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::cols() const [./main_prog]
    256,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 3, 0, 0>::run(Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
    255,830  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false, true>::innerStride() const [./main_prog]
    254,331  ???:nlopt_stop_evals [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    252,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::cols() const [./main_prog]
    251,502  ???:ImageLoaderMachOCompressed::findExportedSymbol(char const*, ImageLoader const**) const [/usr/lib/dyld]
    251,344  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_conj_product_op<double, double>::operator()(double const&, double const&) const [./main_prog]
    247,662  ???:sqrt$fenv_access_off [/usr/lib/system/libsystem_m.dylib]
    247,428  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SolveTriangular.h:Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 2, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [./main_prog]
    243,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_product_op<double, double>::operator()(double const&, double const&) const [./main_prog]
    242,990  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/pmmintrin.h:Eigen::internal::unpacket_traits<double __vector(2)>::type Eigen::internal::predux<double __vector(2)>(double __vector(2) const&)
    240,699  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h:void Eigen::internal::solve_retval<Eigen::FullPivHouseholderQR<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&) const [./main_prog]
    240,100  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>::cols() const [./main_prog]
    239,495  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_check_template_params() [./main_prog]
    239,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::nestedExpression() const [./main_prog]
    239,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>::cols() const [./main_prog]
    238,680  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h:double Eigen::internal::padd<double>(double const&, double const&) [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> >::EigenBase() [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, 0>::checkSanity() const [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false>, 0>::checkSanity() const [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::EigenBase() [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> >::EigenBase() [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::EigenBase() [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> > >::derived() [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true>, 0>::checkSanity() const [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >::const_cast_derived() const [./main_prog]
    235,896  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> > const, -1, 1, true> const, -1, 1, false> const> >::EigenBase() [./main_prog]
    234,740  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<int, std::allocator<int> >::operator[](unsigned long) [./main_prog]
    234,640  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, true>::BlockImpl_dense(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long) [./main_prog]
    234,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> >::MatrixBase() [./main_prog]
    234,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> >::DenseBase() [./main_prog]
    234,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 2>::DenseCoeffsBase() [./main_prog]
    234,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::DenseCoeffsBase() [./main_prog]
    234,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, double, double, false>::special_scalar_op_base() [./main_prog]
    234,106  ???:__infl [/usr/lib/system/libsystem_m.dylib]
    231,121  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 3>::outerStride() const [./main_prog]
    231,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>& Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::lazyAssign<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
    228,893  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:Eigen::internal::aligned_stack_memory_handler<double>::aligned_stack_memory_handler(double*, unsigned long, bool) [./main_prog]
    226,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyPacket<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
    225,144  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived() const [./main_prog]
    225,080  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, double, double, false>::special_scalar_op_base() [./main_prog]
    225,080  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, 0>::DenseCoeffsBase() [./main_prog]
    225,080  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >::MatrixBase() [./main_prog]
    225,080  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >::DenseBase() [./main_prog]
    224,006  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Householder/Householder.h:void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1> const&, double const&, double*) [./main_prog]
    224,006  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Householder/Householder.h:void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1> const&, double const&, double*) [./main_prog]
    219,520  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>::Block(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>&, long) [./main_prog]
    218,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> >::derived() const [./main_prog]
    218,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> >::derived() const [./main_prog]
    218,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> >::derived() const [./main_prog]
    215,977  ???:get_tiny_free_size [/usr/lib/system/libsystem_malloc.dylib]
    214,591  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::size() const [./main_prog]
    214,375  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h:void Eigen::internal::gemv_selector<2, 1, true>::run<Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 4>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 4> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 4>::Scalar const&) [./main_prog]
    214,375  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h:void Eigen::internal::gemv_selector<2, 1, true>::run<Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, 4>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, 4> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, 4>::Scalar const&) [./main_prog]
    213,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const>::CwiseBinaryOp(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::internal::scalar_conj_product_op<double, double> const&) [./main_prog]
    213,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const>::CwiseBinaryOp(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::internal::scalar_conj_product_op<double, double> const&) [./main_prog]
    213,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const>::CwiseBinaryOp(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&, Eigen::internal::scalar_conj_product_op<double, double> const&) [./main_prog]
    212,660  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>::Transpose(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const&) [./main_prog]
    212,394  ???:nlopt_set_force_stop [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    211,032  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 2>::colStride() const [./main_prog]
    211,032  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 2>::rowStride() const [./main_prog]
    210,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 1>::DenseCoeffsBase() [./main_prog]
    210,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::MatrixBase() [./main_prog]
    210,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, double, double, false>::special_scalar_op_base() [./main_prog]
    210,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 0>::DenseCoeffsBase() [./main_prog]
    210,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 3>::DenseCoeffsBase() [./main_prog]
    210,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::DenseBase() [./main_prog]
    209,986  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::rhs() const [./main_prog]
    209,986  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::internal::checkTransposeAliasing_impl<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, false>::run(Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
    209,950  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:double* Eigen::internal::conditional_aligned_new_auto<double, true>(unsigned long) [./main_prog]
    208,320  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::packet<0>(long) const [./main_prog]
    206,610  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >::derived() const [./main_prog]
    206,264  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, 0>::MapBase(double*, long, long) [./main_prog]
    204,786  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::data() [./main_prog]
    203,861  ../src/ImprovePoisedness.cpp:ImprovePoisedness::compute_poisedness_constant(int, std::vector<double, std::allocator<double> >&, BlackboxData&) [./main_prog]
    203,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::CwiseBinaryOp(Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
    203,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/MatrixCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::Scalar>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> const Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::cwiseProduct<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) const [./main_prog]
    201,600  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:double __vector(2) Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, 0>::packet<0>(long) const [./main_prog]
    201,593  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_conj_product_op<double, double>::scalar_conj_product_op(Eigen::internal::scalar_conj_product_op<double, double> const&) [./main_prog]
    201,544  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:double __vector(2) Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::packet<0>(long) const [./main_prog]
    199,272  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::bottomRightCorner(long, long) [./main_prog]
    198,550  ???:get_tiny_previous_free_msize [/usr/lib/system/libsystem_malloc.dylib]
    198,272  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false, true>::BlockImpl_dense(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long, long, long, long) [./main_prog]
    196,842  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SolveTriangular.h:void Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>::solveInPlace<1, Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) const [./main_prog]
    196,740  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::Stride<-1, 0>::Stride(long, long) [./main_prog]
    196,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows() const [./main_prog]
    196,207  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >::cols() const [./main_prog]
    196,207  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::extract_data_selector<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, true>::run(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> const&) [./main_prog]
    196,207  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >::rows() const [./main_prog]
    196,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::CwiseUnaryOpImpl() [./main_prog]
    196,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    196,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::DenseBase() [./main_prog]
    196,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, 0>::DenseCoeffsBase() [./main_prog]
    196,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::MatrixBase() [./main_prog]
    195,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::copyCoeff<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >(long, Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
    195,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::Index, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::Index) [./main_prog]
    195,165  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::pnegate<double __vector(2)>(double __vector(2) const&)
    193,260  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::variable_if_dynamicindex<long, 0>::value() [./main_prog]
    193,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const, Eigen::Dense>::coeff(long) const [./main_prog]
    192,080  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>::rows() const [./main_prog]
    191,775  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::begin() const [./main_prog]
    191,775  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::end() const [./main_prog]
    190,202  ???:ImageLoaderMachOCompressed::eachBind(ImageLoader::LinkContext const&, unsigned long (ImageLoaderMachOCompressed::*)(ImageLoader::LinkContext const&, unsigned long, unsigned char, char const*, unsigned char, long, long, char const*, ImageLoaderMachOCompressed::LastLookup*, bool)) [/usr/lib/dyld]
    190,182  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::OuterStride<-1> >::Map(double const*, long, long, Eigen::OuterStride<-1> const&) [./main_prog]
    189,099  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 3>::colStride() const [./main_prog]
    189,099  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 3>::rowStride() const [./main_prog]
    188,650  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >& Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::lazyAssign<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > > const&) [./main_prog]
    187,746  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Householder/Householder.h:void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> >::makeHouseholder<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1>&, double&, double&) const [./main_prog]
    187,712  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>::Block(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long) [./main_prog]
    184,437  ../include/SubproblemDefinitions.hpp:SubproblemDefinitions<MinimumFrobeniusNormModel, SubproblemOptimization>::trustregion_constraint(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, void*) [./main_prog]
    183,348  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::const_cast_derived() const [./main_prog]
    182,990  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::DenseBase() [./main_prog]
    182,990  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    182,990  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Dense>::CwiseBinaryOpImpl() [./main_prog]
    182,990  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::MatrixBase() [./main_prog]
    182,990  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>, 0>::DenseCoeffsBase() [./main_prog]
    182,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols() const [./main_prog]
    182,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::GeneralProduct<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 4> const>, 3, 0>::run(Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::GeneralProduct<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 4> const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    180,705  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:Eigen::internal::aligned_stack_memory_handler<double>::~aligned_stack_memory_handler() [./main_prog]
    179,988  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::derived() [./main_prog]
    179,988  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > >::EigenBase() [./main_prog]
    179,988  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::EigenBase() [./main_prog]
    179,988  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::lhs() const [./main_prog]
    178,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::size() const [./main_prog]
    178,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::size() const [./main_prog]
    178,370  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >::DenseBase() [./main_prog]
    178,370  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>, double, double, false>::special_scalar_op_base() [./main_prog]
    178,370  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>, 0>::DenseCoeffsBase() [./main_prog]
    178,370  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >::MatrixBase() [./main_prog]
    178,370  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::TransposeImpl<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const, Eigen::Dense>::TransposeImpl() [./main_prog]
    178,360  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 1>::MapBase(Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 1> const&) [./main_prog]
    178,360  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::CwiseNullaryOp(long, long, Eigen::internal::scalar_constant_op<double> const&) [./main_prog]
    178,290  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [./main_prog]
    176,820  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const, Eigen::Dense>::packet<1>(long) const [./main_prog]
    176,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::rows() const [./main_prog]
    176,176  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:Eigen::internal::aligned_malloc(unsigned long) [./main_prog]
    174,930  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >& Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >::lazyAssign<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> > const&) [./main_prog]
    174,930  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >& Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >::lazyAssign<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >(Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> > const&) [./main_prog]
    174,810  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >::derived() [./main_prog]
    173,910  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resizeLike<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [./main_prog]
    172,794  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_conj_product_op<double, double>::scalar_conj_product_op() [./main_prog]
    171,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 0>::MapBase(double*, long, long) [./main_prog]
    170,505  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyPacket<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const>, 1, 1>(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const> > const&) [./main_prog]
    169,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h:void Eigen::internal::gemv_selector<2, 1, true>::run<Eigen::GeneralProduct<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 4>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::GeneralProduct<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 4> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::GeneralProduct<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 4>::Scalar const&) [./main_prog]
    168,850  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [./main_prog]
    168,396  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_product_op<double, double>::scalar_product_op() [./main_prog]
    168,018  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::EigenBase() [./main_prog]
    168,018  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::checkSanity() const [./main_prog]
    168,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    168,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    168,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>& Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::operator=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&) [./main_prog]
    168,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:double __vector(2) Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::Dense>::packet<0>(long) const [./main_prog]
    167,750  ???:dyld::loadPhase5(char const*, char const*, dyld::LoadContext const&, std::__1::vector<char const*, std::__1::allocator<char const*> >*) [/usr/lib/dyld]
    166,940  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::size() const [./main_prog]
    166,656  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Dense>::packet<1>(long) const [./main_prog]
    164,864  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const>::functor() const [./main_prog]
    164,691  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::Index Eigen::internal::first_aligned<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const&) [./main_prog]
    163,569  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const>::functor() const [./main_prog]
    161,700  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::functor() const [./main_prog]
    161,700  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::lhs() const [./main_prog]
    161,700  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::rhs() const [./main_prog]
    161,520  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> >::EigenBase() [./main_prog]
    161,520  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true>, 0>::checkSanity() const [./main_prog]
    160,884  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::data() const [./main_prog]
    160,704  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::copyPacket<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, 1, 1>(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> > const&) [./main_prog]
    160,533  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>::Scalar const* Eigen::internal::extract_data<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> const&) [./main_prog]
    160,533  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>::cols() const [./main_prog]
    160,533  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>::rows() const [./main_prog]
    160,533  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>::Scalar const* Eigen::internal::extract_data<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >(Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> const&) [./main_prog]
    156,240  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:double __vector(2) Eigen::internal::pabs<double __vector(2)>(double __vector(2) const&)
    154,420  ???:_os_lock_spin_lock [/usr/lib/system/libsystem_platform.dylib]
    154,275  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::lazyAssign<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [./main_prog]
    153,566  ???:ImageLoaderMachO::findExportedSymbol(char const*, bool, ImageLoader const**) const [/usr/lib/dyld]
    153,420  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::base() const [./main_prog]
    153,360  ???:nlopt_set_maxeval [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
    152,210  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Dense>::coeff(long) const [./main_prog]
    151,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Diagonal.h:Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0>::coeff(long) const [./main_prog]
    151,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyCoeff<Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0> >(long, Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0> > const&) [./main_prog]
    151,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true> >::derived() const [./main_prog]
    151,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>::Index, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>::Index) [./main_prog]
    150,732  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SolveTriangular.h:void Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 2u>::solveInPlace<1, Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) const [./main_prog]
    149,455  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::resizeLike<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const> >(Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const> > const&) [./main_prog]
    147,196  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [./main_prog]
    146,640  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_iterator.h:bool __gnu_cxx::operator==<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > const&) [./main_prog]
    145,245  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const>, 3, 0, 0>::run(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const> const&) [./main_prog]
    144,276  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::extract_data_selector<Eigen::Matrix<double, -1, 1, 0, -1, 1>, true>::run(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [./main_prog]
    144,060  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false, true>::BlockImpl_dense(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>&, long, long, long, long) [./main_prog]
    143,627  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, -1, 0>::resize(long, long, long) [./main_prog]
    143,344  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyCoeff<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >(long, Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
    142,968  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:double __vector(2) const& Eigen::internal::conj_if<false>::pconj<double __vector(2)>(double __vector(2) const&) [./main_prog]
    142,422  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_sum_op<double>::scalar_sum_op(Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    141,588  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false>::Block(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const&, long, long, long, long) [./main_prog]
    141,588  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>::Block(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>&, long, long, long, long) [./main_prog]
    141,312  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const>::nestedExpression() const [./main_prog]
    140,688  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false>, 0>::checkSanity() const [./main_prog]
    140,688  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> >::EigenBase() [./main_prog]
    140,202  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const>::nestedExpression() const [./main_prog]
    140,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::lazyAssign<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
    140,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
    139,308  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<double, std::allocator<double> >::empty() const [./main_prog]
    137,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::functor() const [./main_prog]
    137,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::nestedExpression() const [./main_prog]
    136,312  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false, Eigen::Dense>::BlockImpl(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long, long, long, long) [./main_prog]
    135,048  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >::EigenBase() [./main_prog]
    134,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:void Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> >::checkTransposeAliasing<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&) const [./main_prog]
    133,007  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > const&, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Index, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Index) [./main_prog]
    133,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_set<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
    132,928  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resizeLike<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >(Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > const&) [./main_prog]
    132,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::functor() const [./main_prog]
    132,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::rhs() const [./main_prog]
    132,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::functor() const [./main_prog]
    132,300  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::rhs() const [./main_prog]
    131,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_impl<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, 3, 0, 0>::run(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true> const&) [./main_prog]
    130,725  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:Eigen::operator*(double const&, Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> > const&) [./main_prog]
    130,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::copyCoeff<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(long, Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&) [./main_prog]
    130,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyCoeff<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(long, Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
    130,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_opposite_op<double>::packetOp<double __vector(2)>(double __vector(2) const&) const [./main_prog]
    129,990  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SolveTriangular.h:void Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::evalTo<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::Matrix<double, -1, 1, 0, -1, 1>&) const [./main_prog]
    129,150  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    129,150  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> >::MatrixBase() [./main_prog]
    129,150  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> >::DenseBase() [./main_prog]
    129,150  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Dense>::CwiseUnaryOpImpl() [./main_prog]
    129,150  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, 0>::DenseCoeffsBase() [./main_prog]
    128,745  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, 1, 0>::~DenseStorage() [./main_prog]
    128,309  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::copyCoeff<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(long, Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    127,840  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1>::copyCoeff<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> >(long, long, Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> > const&) [./main_prog]
    126,066  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 0>::checkSanity() const [./main_prog]
    126,066  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::EigenBase() [./main_prog]
    126,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_selector<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, false, false>::run(Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const&) [./main_prog]
    124,992  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> >::derived() const [./main_prog]
    124,859  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false>, 1>::data() const [./main_prog]
    124,352  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>::CwiseBinaryOp(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const&, Eigen::internal::scalar_sum_op<double> const&) [./main_prog]
    124,080  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1>::copyCoeffByOuterInner<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> >(long, long, Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> > const&) [./main_prog]
    123,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false> >::row(long) [./main_prog]
    122,360  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false, true>::BlockImpl_dense(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>&, long, long, long, long) [./main_prog]
    122,360  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PermutationMatrix.h:Eigen::PermutationBase<Eigen::PermutationMatrix<-1, -1, int> >::applyTranspositionOnTheRight(int, int) [./main_prog]
    122,256  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [./main_prog]
    122,134  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1>::Index, Eigen::Matrix<double, -1, 1, 0, -1, 1>::Index) [./main_prog]
    120,929  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:void Eigen::internal::unaligned_assign_impl<false>::run<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::Index, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> >::Index) [./main_prog]
    120,672  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::col(long) [./main_prog]
    120,615  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Matrix.h:Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [./main_prog]
    119,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> >::size() const [./main_prog]
    119,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> >::size() const [./main_prog]
    119,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> >::size() const [./main_prog]
    118,602  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h:Eigen::DenseStorage<double, -1, -1, -1, 0>::~DenseStorage() [./main_prog]
    118,048  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const> >::size() const [./main_prog]
    118,044  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>::Scalar const* Eigen::internal::extract_data<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [./main_prog]
    118,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 0>::rows() const [./main_prog]
    117,920  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::lazyAssign<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > const&) [./main_prog]
    117,840  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::CwiseUnaryOp(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::internal::scalar_abs2_op<double> const&) [./main_prog]
    117,600  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::EigenBase() [./main_prog]
    117,600  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:double __vector(2) Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs2_op<double>, Eigen::GeneralProduct<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 4> const, Eigen::Dense>::packet<1>(long) const [./main_prog]
    116,948  ???:ImageLoader::weakBind(ImageLoader::LinkContext const&) [/usr/lib/dyld]
    116,832  /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h:void Eigen::internal::pstore1<double __vector(2)>(Eigen::internal::unpacket_traits<double __vector(2)>::type*, Eigen::internal::unpacket_traits<double __vector(2)>::type const&)
    116,620  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, 0>::MapBase(double*, long) [./main_prog]
    115,775  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::lazyAssign<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::ReturnByValue<Eigen::internal::triangular_solve_retval<1, Eigen::TriangularView<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1u>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const> > const&) [./main_prog]
    115,537  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h:Eigen::FullPivHouseholderQR<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::threshold() const [./main_prog]
    115,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::cols() const [./main_prog]
    115,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::cols() const [./main_prog]
    115,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::rows() const [./main_prog]
    115,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::rows() const [./main_prog]
    115,102  ???:dyld_stub_binder'2 [/usr/lib/system/libdyld.dylib]
    114,576  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_opposite_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0> const, Eigen::Dense>::coeff(long, long) const [./main_prog]
    113,663  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MathFunctions.h:Eigen::internal::real_retval<Eigen::internal::global_math_functions_filtering_base<double, void>::type>::type Eigen::numext::real<double>(double const&) [./main_prog]
    113,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::lhs() const [./main_prog]
    113,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:void Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false>, 1>::copyPacket<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 1, 0>(long, Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> > const&) [./main_prog]
    113,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>::lhs() const [./main_prog]
    113,190  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::rows() const [./main_prog]
    113,190  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::cols() const [./main_prog]
    112,930  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::sum() const [./main_prog]
    112,365  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) [./main_prog]
    112,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::MatrixBase() [./main_prog]
    112,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 0>::DenseCoeffsBase() [./main_prog]
    112,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::DenseBase() [./main_prog]
    112,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:void Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::checkTransposeAliasing<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> const&) const [./main_prog]
    112,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>::cols() const [./main_prog]
    112,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const, Eigen::Dense>::CwiseBinaryOpImpl() [./main_prog]
    112,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    111,104  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0> const>, 0>::coeffByOuterInner(long, long) const [./main_prog]
    111,104  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Diagonal.h:Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0>::coeff(long, long) const [./main_prog]
    110,880  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, 3>::innerStride() const [./main_prog]
    109,794  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::internal::first_aligned_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>, true>::run(Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const&) [./main_prog]
    109,794  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::EigenBase() [./main_prog]
    109,760  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::setConstant(double const&) [./main_prog]
    109,760  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, 1>::MapBase(double*, long, long) [./main_prog]
    109,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::GeneralProduct<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 4> const> >::derived() const [./main_prog]
    109,060  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_iterator_base_types.h:std::_Iter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, true>::_S_base(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [./main_prog]
    108,020  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::rows() const [./main_prog]
    108,020  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::cols() const [./main_prog]
    107,632  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOpImpl<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, Eigen::Dense>::coeff(long) const [./main_prog]
    107,264  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 1>::MapBase(double*, long, long) [./main_prog]
    107,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const>::cols() const [./main_prog]
    107,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols() const [./main_prog]
    107,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const>::rows() const [./main_prog]
    107,136  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0> const> >::derived() const [./main_prog]
    107,022  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> >::EigenBase() [./main_prog]
    107,022  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::extract_data_selector<Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const>, false>::run(Eigen::Transpose<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > const> const&) [./main_prog]
    107,022  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::blas_traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >::extract(Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> const&) [./main_prog]
    106,404  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MathFunctions.h:Eigen::internal::abs2_impl<double>::run(double const&) [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::MatrixBase() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::CwiseBinaryOpImpl() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Dense>::CwiseBinaryOpImpl() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::DenseBase() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, 0>::DenseCoeffsBase() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h:Eigen::internal::special_scalar_op_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, double, double, false>::special_scalar_op_base() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::internal::assign_selector<Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>, false, false>::run(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> const&) [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const>, 0>::DenseCoeffsBase() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::MatrixBase() [./main_prog]
    105,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::DenseBase() [./main_prog]
    104,615  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 4>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::ProductBase(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const&, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const&) [./main_prog]
    104,615  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, 4>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::ProductBase(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const&, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const&) [./main_prog]
    104,615  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const>, 4>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> >::ProductBase(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const> const&) [./main_prog]
    104,615  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h:Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const>, 4>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> >::ProductBase(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const&) [./main_prog]
    104,473  ???:ImageLoaderMachOCompressed::exportedSymbolAddress(ImageLoader::LinkContext const&, ImageLoader::Symbol const*, ImageLoader const*, bool) const [/usr/lib/dyld]
    104,160  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:double __vector(2) const Eigen::internal::scalar_abs_op<double>::packetOp<double __vector(2)>(double __vector(2) const&) const [./main_prog]
    103,132  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false>, 0>::MapBase(double const*, long, long) [./main_prog]
    103,132  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>, 0>::MapBase(double*, long, long) [./main_prog]
    103,110  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Dot.h:Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::squaredNorm() const [./main_prog]
    102,912  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >::CwiseNullaryOp(Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [./main_prog]
    102,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >& Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::operator+=<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >(Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> > const&) [./main_prog]
    102,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false, Eigen::Dense>::BlockImpl(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>&, long) [./main_prog]
    102,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>, 0>::cols() const [./main_prog]
    102,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false, true>::BlockImpl_dense(Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false, true> const&) [./main_prog]
    102,900  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false>& Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false> >::operator-=<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> >(Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const> > const&) [./main_prog]
    102,522  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h:std::vector<MinimumFrobeniusNormModel, std::allocator<MinimumFrobeniusNormModel> >::operator[](unsigned long) [./main_prog]
    102,258  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data() const [./main_prog]
    102,140  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    102,140  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::lazyAssign<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
    101,584  ../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&) [./main_prog]
    101,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Dot.h:Eigen::internal::scalar_product_traits<double, Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::Scalar>::ReturnType Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::dot<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&) const [./main_prog]
    101,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Dot.h:Eigen::internal::scalar_product_traits<double, Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::Scalar>::ReturnType Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::dot<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&) const [./main_prog]
    101,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Dot.h:Eigen::internal::scalar_product_traits<double, Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::Scalar>::ReturnType Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::dot<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&) const [./main_prog]
    100,800  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true, true>::innerStride() const [./main_prog]
    100,560  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, Eigen::Dense>::BlockImpl(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, long) [./main_prog]
     99,468  ???:nlopt_reorder_bounds [/usr/local/nowpac/external/nlopt/lib/libnlopt.0.dylib]
     99,201  ../include/NOWPAC.hpp:NOWPAC<MinimumFrobeniusNormModel, BasisForMinimumFrobeniusNormModel>::update_trustregion(double) [./main_prog]
     99,136  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1>::MapBase(double*, long, long) [./main_prog]
     98,622  ???:ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&, void (*)(), void (*)()) [/usr/lib/dyld]
     98,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::cols() const [./main_prog]
     98,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/MatrixCwiseUnaryOps.h:Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::cwiseAbs2() const [./main_prog]
     98,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const>::rows() const [./main_prog]
     98,154  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:std::_Miter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [./main_prog]
     98,154  /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h:std::_Niter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [./main_prog]
     98,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_set_selector<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> const&, Eigen::internal::false_type const&) [./main_prog]
     97,773  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::PlainObjectBase() [./main_prog]
     97,712  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h:Eigen::internal::redux_impl<Eigen::internal::scalar_max_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0> const>, 0, 0>::run(Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, Eigen::Diagonal<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0> const> const&, Eigen::internal::scalar_max_op<double> const&) [./main_prog]
     97,537  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MathFunctions.h:Eigen::internal::abs2_retval<Eigen::internal::global_math_functions_filtering_base<double, void>::type>::type Eigen::numext::abs2<double>(double const&) [./main_prog]
     97,216  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const>::functor() const [./main_prog]
     96,480  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows() const [./main_prog]
     96,140  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>& Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::lazyAssign<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >(Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> > const&) [./main_prog]
     96,140  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >& Eigen::DenseBase<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> > >::lazyAssign<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >(Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> > const&) [./main_prog]
     96,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, 1, -1, false, true>::init() [./main_prog]
     96,040  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h:Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >::Map(double*, long, Eigen::Stride<0, 0> const&) [./main_prog]
     95,225  ???:_platform_strncmp [/usr/lib/system/libsystem_platform.dylib]
     94,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> const Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::binaryExpr<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&, Eigen::internal::scalar_conj_product_op<double, double> const&) const [./main_prog]
     94,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> const Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::binaryExpr<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&, Eigen::internal::scalar_conj_product_op<double, double> const&) const [./main_prog]
     94,500  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> const Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::binaryExpr<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >(Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> > const&, Eigen::internal::scalar_conj_product_op<double, double> const&) const [./main_prog]
     94,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h:Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, 1>::coeffRef(long, long) [./main_prog]
     94,392  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h:Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >::tail(long) [./main_prog]
     93,856  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true, true>::init() [./main_prog]
     93,420  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::lazyAssign<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
     93,420  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_set_noalias<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
     93,060  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false>& Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false>, -1, 1, false> >::lazyAssign<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const> >(Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const, -1, 1, false> const> > const&) [./main_prog]
     92,997  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MathFunctions.h:Eigen::internal::real_default_impl<double, false>::run(double const&) [./main_prog]
     92,914  ???:ImageLoader::hash(char const*) [/usr/lib/dyld]
     92,587  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_set<Eigen::Matrix<double, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&) [./main_prog]
     92,565  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::cols() const [./main_prog]
     92,565  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::rows() const [./main_prog]
     92,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::rows() const [./main_prog]
     92,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> >::cols() const [./main_prog]
     92,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::Dense>::coeff(long) const [./main_prog]
     92,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::Dense>::coeff(long) const [./main_prog]
     92,400  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::Dense>::coeff(long) const [./main_prog]
     92,192  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >::CwiseNullaryOp(long, long, Eigen::internal::scalar_identity_op<double> const&) [./main_prog]
     91,812  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h:Eigen::OuterStride<-1>::OuterStride(long) [./main_prog]
     91,000  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_resize_to_match<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> >(Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const> > const&) [./main_prog]
     90,456  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h:Eigen::internal::blas_traits<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::extract(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [./main_prog]
     90,272  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const>::CwiseUnaryOp(Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const&, Eigen::internal::scalar_abs_op<double> const&) [./main_prog]
     89,913  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Matrix<int, -1, 1, 0, -1, 1> >::size() const [./main_prog]
     89,180  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const>::Transpose(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const&) [./main_prog]
     89,180  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h:Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const>::CwiseUnaryOp(Eigen::Map<Eigen::Matrix<double, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::scalar_multiple_op<double> const&) [./main_prog]
     89,180  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h:Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const>::Transpose(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> const> const&) [./main_prog]
     89,148  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true>, -1, 1, false> >::size() const [./main_prog]
     88,364  ???:ImageLoaderMachOCompressed::resolve(ImageLoader::LinkContext const&, char const*, unsigned char, long, ImageLoader const**, ImageLoaderMachOCompressed::LastLookup*, bool) [/usr/lib/dyld]
     88,220  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >& Eigen::DenseBase<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> > >::lazyAssign<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> >(Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, 1, true> > const&) [./main_prog]
     88,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>::functor() const [./main_prog]
     88,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, -1, 1, true> const, -1, 1, false> const> const> const>::rhs() const [./main_prog]
     88,200  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h:Eigen::EigenBase<Eigen::CwiseUnaryOp<Eigen::internal::scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> >::derived() const [./main_prog]
     87,761  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::Matrix<double, -1, 1, 0, -1, 1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::_set<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> > > const&) [./main_prog]
     87,285  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h:Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >& Eigen::DenseBase<Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> > >::lazyAssign<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> >(Eigen::DenseBase<Eigen::Block<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1, -1, false> > const&) [./main_prog]
     86,744  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h:Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false, true>::init() [./main_prog]
     86,100  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h:Eigen::internal::scalar_abs2_op<double>::operator()(double const&) const [./main_prog]
     85,830  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 3>::DenseCoeffsBase() [./main_prog]
     85,830  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0>::DenseCoeffsBase() [./main_prog]
     85,830  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h:Eigen::MatrixBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::MatrixBase() [./main_prog]
     85,830  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h:Eigen::PlainObjectBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::~PlainObjectBase() [./main_prog]
     85,830  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h:Eigen::DenseBase<Eigen::Matrix<double, -1, 1, 0, -1, 1> >::DenseBase() [./main_prog]
     85,830  /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1>::DenseCoeffsBase() [./main_prog]

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PermutationMatrix.h
--------------------------------------------------------------------------------
    Ir 

-- line 45 ----------------------------------------
     .  struct permut_matrix_product_retval;
     .  template<typename PermutationType, typename MatrixType, int Side, bool Transposed=false>
     .  struct permut_sparsematrix_product_retval;
     .  enum PermPermProduct_t {PermPermProduct};
     .  
     .  } // end namespace internal
     .  
     .  template<typename Derived>
   460  class PermutationBase : public EigenBase<Derived>
   322  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (46x)
     .  {
     .      typedef internal::traits<Derived> Traits;
     .      typedef EigenBase<Derived> Base;
     .    public:
     .  
     .      #ifndef EIGEN_PARSED_BY_DOXYGEN
     .      typedef typename Traits::IndicesType IndicesType;
     .      enum {
-- line 61 ----------------------------------------
-- line 106 ----------------------------------------
     .  
     .      /** \returns the number of rows */
     .      inline Index rows() const { return Index(indices().size()); }
     .  
     .      /** \returns the number of columns */
     .      inline Index cols() const { return Index(indices().size()); }
     .  
     .      /** \returns the size of a side of the respective square matrix, i.e., the number of indices */
58,047      inline Index size() const { return Index(indices().size()); }
601,578  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10554x)
     .  
     .      #ifndef EIGEN_PARSED_BY_DOXYGEN
     .      template<typename DenseDerived>
     .      void evalTo(MatrixBase<DenseDerived>& other) const
     .      {
     .        other.setZero();
     .        for (int i=0; i<rows();++i)
     .          other.coeffRef(indices().coeff(i),i) = typename DenseDerived::Scalar(1);
-- line 122 ----------------------------------------
-- line 128 ----------------------------------------
     .        * the Matrix constructor taking EigenBase objects.
     .        */
     .      DenseMatrixType toDenseMatrix() const
     .      {
     .        return derived();
     .      }
     .  
     .      /** const version of indices(). */
58,047      const IndicesType& indices() const { return derived().indices(); }
73,878  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10554x)
     .      /** \returns a reference to the stored array representing the permutation. */
58,047      IndicesType& indices() { return derived().indices(); }
73,878  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10554x)
     .  
     .      /** Resizes to given size.
     .        */
   198      inline void resize(Index newSize)
     .      {
   264        indices().resize(newSize);
 2,112  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
   165      }
     .  
     .      /** Sets *this to be the identity permutation matrix */
   165      void setIdentity()
     .      {
15,996        for(Index i = 0; i < size(); ++i)
224,406  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1781x)
19,228          indices().coeffRef(i) = i;
85,652  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
   165      }
     .  
     .      /** Sets *this to be the identity permutation matrix of given size.
     .        */
   165      void setIdentity(Index newSize)
     .      {
   165        resize(newSize);
 2,772  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    99        setIdentity();
345,645  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    99      }
     .  
     .      /** Multiplies *this by the transposition \f$(ij)\f$ on the left.
     .        *
     .        * \returns a reference to *this.
     .        *
     .        * \warning This is much slower than applyTranspositionOnTheRight(int,int):
     .        * this has linear complexity and requires a lot of branching.
     .        *
-- line 168 ----------------------------------------
-- line 182 ----------------------------------------
     .      /** Multiplies *this by the transposition \f$(ij)\f$ on the right.
     .        *
     .        * \returns a reference to *this.
     .        *
     .        * This is a fast operation, it only consists in swapping two indices.
     .        *
     .        * \sa applyTranspositionOnTheLeft(int,int)
     .        */
13,984      Derived& applyTranspositionOnTheRight(Index i, Index j)
     .      {
59,432        eigen_assert(i>=0 && j>=0 && i<size() && j<size());
440,496  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
34,960        std::swap(indices().coeffRef(i), indices().coeffRef(j));
253,460  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8740x)
 5,244        return derived();
12,236  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
 8,740      }
     .  
     .      /** \returns the inverse permutation matrix.
     .        *
     .        * \note \note_try_to_help_rvo
     .        */
     .      inline Transpose<PermutationBase> inverse() const
     .      { return derived(); }
     .      /** \returns the tranpose permutation matrix.
-- line 203 ----------------------------------------
-- line 275 ----------------------------------------
     .   : traits<Matrix<IndexType,SizeAtCompileTime,SizeAtCompileTime,0,MaxSizeAtCompileTime,MaxSizeAtCompileTime> >
     .  {
     .    typedef IndexType Index;
     .    typedef Matrix<IndexType, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;
     .  };
     .  }
     .  
     .  template<int SizeAtCompileTime, int MaxSizeAtCompileTime, typename IndexType>
   460  class PermutationMatrix : public PermutationBase<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType> >
23,129  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (46x)
     .  {
     .      typedef PermutationBase<PermutationMatrix> Base;
     .      typedef internal::traits<PermutationMatrix> Traits;
     .    public:
     .  
     .      #ifndef EIGEN_PARSED_BY_DOXYGEN
     .      typedef typename Traits::IndicesType IndicesType;
     .      #endif
     .  
     4      inline PermutationMatrix()
     9      {}
   134  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     .  
     .      /** Constructs an uninitialized permutation matrix of given size.
     .        */
   462      inline PermutationMatrix(int size) : m_indices(size)
17,945  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
    99      {}
     .  
     .      /** Copy constructor. */
     .      template<typename OtherDerived>
     .      inline PermutationMatrix(const PermutationBase<OtherDerived>& other)
     .        : m_indices(other.indices()) {}
     .  
     .      #ifndef EIGEN_PARSED_BY_DOXYGEN
     .      /** Standard copy constructor. Defined only to prevent a default copy constructor
     .        * from hiding the other templated constructor */
   228      inline PermutationMatrix(const PermutationMatrix& other) : m_indices(other.indices()) {}
16,092  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36x)
     .      #endif
     .  
     .      /** Generic constructor from expression of the indices. The indices
     .        * array has the meaning that the permutations sends each integer i to indices[i].
     .        *
     .        * \warning It is your responsibility to check that the indices array that you passes actually
     .        * describes a permutation, i.e., each value between 0 and n-1 occurs exactly once, where n is the
     .        * array's size.
-- line 317 ----------------------------------------
-- line 350 ----------------------------------------
     .      PermutationMatrix& operator=(const PermutationMatrix& other)
     .      {
     .        m_indices = other.m_indices;
     .        return *this;
     .      }
     .      #endif
     .  
     .      /** const version of indices(). */
42,222      const IndicesType& indices() const { return m_indices; }
     .      /** \returns a reference to the stored array representing the permutation. */
31,662      IndicesType& indices() { return m_indices; }
     .  
     .  
     .      /**** multiplication helpers to hopefully get RVO ****/
     .  
     .  #ifndef EIGEN_PARSED_BY_DOXYGEN
     .      template<typename Other>
     .      PermutationMatrix(const Transpose<PermutationBase<Other> >& other)
     .        : m_indices(other.nestedPermutation().size())
-- line 368 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/TriangularMatrixOperations.cpp
--------------------------------------------------------------------------------
        Ir 

         .  #include "TriangularMatrixOperations.hpp"
         .  #include <iostream>
         .  
         .  //--------------------------------------------------------------------------------
        44  TriangularMatrixOperations::TriangularMatrixOperations ( int n ) 
       928  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
         .  {
         6    dim = n;
        16    w.resize( dim );
    46,425  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        16    tmp_ev.resize( dim );  
       991  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        10  }
         .  //--------------------------------------------------------------------------------
         .  
         .  
         .  //--------------------------------------------------------------------------------
         .  void TriangularMatrixOperations::forward_substitution (Eigen::MatrixXd const &L,
         .                                                         Eigen::VectorXd &x )
    37,240  {
         .    // solves the system L * y = x for a lower triangular nonsingular matrix L
         .    // and stores the solution y in x 
    31,920    dim = x.size();
   468,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5320x)
   804,650    for (int i = 0; i < dim; i++) {
 1,167,075      tmp = x(i);
19,062,225  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (129675x)
11,552,655      for (int j = 0; j <= i-1; j++)
43,617,120        tmp -= L(i,j)*x(j);
583,378,980  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3634760x)
 2,982,525      x(i) = tmp / L(i,i);
41,625,675  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (259350x)
         .    }
         .  
     5,320    return;
    21,280  }
         .  //--------------------------------------------------------------------------------
         .  
         .  
         .  //--------------------------------------------------------------------------------
         .  void TriangularMatrixOperations::backward_substitution (Eigen::MatrixXd const &L,
         .                                                          Eigen::VectorXd &x )
     6,125  {
         .    // solves the system L' * y = x for a lower triangular nonsingular matrix L
         .    // and stores the solution y in x
     5,250    dim = x.size();
    77,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (875x)
    43,810    for (int i = dim-1; i >= 0; i--) {
    86,760      tmp = x(i);
 1,417,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9640x)
   504,880      for (int j = i+1; j < dim; j++)
 1,749,600        tmp -= L(j,i)*x(j);
23,400,900  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (145800x)
   221,720      x(i) = tmp / L(i,i);
 3,094,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19280x)
         .    }
       875    return;
     3,500  }
         .  //--------------------------------------------------------------------------------
         .  
         .  
         .  
         .  //--------------------------------------------------------------------------------
         .  void TriangularMatrixOperations::compute_large_norm_solution ( 
     5,600    Eigen::MatrixXd const &L, Eigen::VectorXd &y ) {
         .    //this algorithm computes an approximation of the largest norm solution y of
         .    //Ly = p for any vector ||p||_2 = 1. Reference: Cline et. al (1982)
         .  
         .    //initialize variables with zeros
     9,100    d = Eigen::VectorXd::Zero( dim );
 1,129,357  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
     9,100    p = Eigen::VectorXd::Zero( dim );
 1,129,481  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
     8,400    y = Eigen::VectorXd::Zero( dim );
 1,129,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
     2,100    yy = 0e0;
         .  
         .    //define the weights
     7,700    w = L.diagonal();
 1,837,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
   126,000    for (int i = 0; i < dim; i++) w(i) = 1e0/w(i);
 1,440,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9800x)
         .  
         .  
    32,900    for (int k = 0; k < dim; k++) {
         .      //step 1: compute cosine/sine pairs
     9,800      if (k == 0) {
     2,100        c    = 1e0;
     2,100        s    = 0e0;
    12,600        y(0) = c/L(0,0);
   224,700  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
     2,800        yy   = 0e0;
         .      } else {
   100,800        yy = yy + y(k-1)*y(k-1);
 1,234,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
    21,000        if (k < dim-1) {
   122,500          tDDt = ( ((L.col(k)).tail(dim-k-1)).cwiseProduct(w.tail(dim-k-1)) )
 8,053,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14000x)
   150,500                 .dot(((L.col(k)).tail(dim-k-1)).cwiseProduct(w.tail(dim-k-1)) );
18,244,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (17500x)
    98,000          pDDp = ( (p.tail(dim-k-1)).cwiseProduct(w.tail(dim-k-1)) )
 6,233,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10500x)
   126,000                 .dot((p.tail(dim-k-1)).cwiseProduct(w.tail(dim-k-1)) );
15,781,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14000x)
   122,500          pDDt = ( ((L.col(k)).tail(dim-k-1)).cwiseProduct(w.tail(dim-k-1)) )
 8,053,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14000x)
   129,500                 .dot((p.tail(dim-k-1)).cwiseProduct(w.tail(dim-k-1)) );
16,102,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14000x)
         .        } else {
     2,100          tDDt = 0e0;
     2,100          pDDp = 0e0;
     2,100          pDDt = 0e0;
         .        }
   252,000        beta  = (yy + pDDp)*(L(k,k)*L(k,k)) + (p(k)*p(k) - 1e0)*(1e0+tDDt) -
 2,696,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16800x)
   109,200                2e0*p(k)*L(k,k)*pDDp;
 1,348,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
   130,200        alpha = p(k)*(1e0+tDDt) - L(k,k)*pDDt;
 1,348,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
    33,600        if (alpha != 0e0) {
    37,800          r  = beta / (2e0 * alpha);
    75,600          mu = r + sqrt(1e0 + r*r);
    12,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
    67,200          s1 = 1/sqrt(1e0 + mu*mu);
    12,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
    29,400          c1 = s1*mu; 
    84,000          mu = r - sqrt(1e0 + r*r);
    12,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
    67,200          s2 = 1/sqrt(1e0 + mu*mu);
    12,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
    33,600          c2 = s2*mu; 
         .        } else {
         .          s1 = 0e0;
         .          c1 = 1e0;
         .          s2 = 1e0;
         .          c2 = 0e0;
         .        }
   134,400        y1   = (c1 - s1*p(k))/L(k,k);
 1,348,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
   134,400        y2   = (c2 - s2*p(k))/L(k,k);
 1,348,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
    67,200        phi1 = s1*s1*yy + y1*y1;
    67,200        phi2 = s2*s2*yy + y2*y2;
    21,000        if (k < dim-1) {
   252,000          tmp_ev = (w.tail(dim-k-1)).cwiseProduct(s1*p.tail(dim-k-1)+y1*(L.col(k)).tail(dim-k-1));
26,495,677  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (31500x)
    52,500          phi1 = phi1 + tmp_ev.dot(tmp_ev);
 4,517,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3500x)
   252,000          tmp_ev = (w.tail(dim-k-1)).cwiseProduct(s2*p.tail(dim-k-1)+y2*(L.col(k)).tail(dim-k-1));
23,853,900  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (31500x)
    52,500          phi2 = phi2 + tmp_ev.dot(tmp_ev);
 4,517,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3500x)
         .        }
    25,200        if (phi1 > phi2) {
     8,992          s    = s1;
     8,992          c    = c1;
    24,728          y(k) = y1;
   330,456  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2248x)
         .        } else {
     7,808          s    = s2;
     7,808          c    = c2;
    19,520          y(k) = y2;			
   286,944  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1952x)
         .        }
         .      }
         .      //step 2:
         .      //note: updating y(k) has already been incorporated in step 1 
    53,900      d(k) = c;
   720,300  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4900x)
     9,800      if (k > 0) {
   117,600        d.head(k) = s*d.head(k);
11,069,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16800x)
   109,200        y.head(k) = s*y.head(k);
11,069,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16800x)
         .      }
    24,500      if ( k < dim-1 )
   298,200        p.tail(dim-k-1) = s*p.tail(dim-k-1) + (L.col(k)).tail(dim-k-1)*y(k); 
24,462,900  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (37800x)
         .    
         .    }
       700    return;     
     3,519  }
       134  => ../src/TriangularMatrixOperations.cpp:__static_initialization_and_destruction_0(int, int) (1x)
         .  //--------------------------------------------------------------------------------
         .  

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Assign.h
--------------------------------------------------------------------------------
       Ir 

-- line 251 ----------------------------------------
        .  {
        .    static inline void run(Derived1 &, const Derived2 &) { }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, DefaultTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
   24,940    static inline void run(Derived1 &dst, const Derived2 &src)
        .    {
   19,952      const Index innerSize = dst.innerSize();
    1,833  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39x)
   19,952      const Index outerSize = dst.outerSize();
    1,833  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39x)
  194,372      for(Index outer = 0; outer < outerSize; ++outer)
1,359,636        for(Index inner = 0; inner < innerSize; ++inner)
1,464,120          dst.copyCoeffByOuterInner(outer, inner, src);
  448,105  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1519x)
   14,964    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, DefaultTraversal, CompleteUnrolling, Version>
        .  {
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
        .      assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, 0, Derived1::SizeAtCompileTime>
-- line 274 ----------------------------------------
-- line 292 ----------------------------------------
        .  /***********************
        .  *** Linear traversal ***
        .  ***********************/
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
  152,520    static inline void run(Derived1 &dst, const Derived2 &src)
        .    {
  122,016      const Index size = dst.size();
  176,157  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1587x)
1,764,531      for(Index i = 0; i < size; ++i)
1,971,018        dst.copyCoeff(i, src);
23,928,819  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (45753x)
   91,512    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearTraversal, CompleteUnrolling, Version>
        .  {
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
        .      assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, 0, Derived1::SizeAtCompileTime>
-- line 313 ----------------------------------------
-- line 360 ----------------------------------------
        .  /***************************
        .  *** Linear vectorization ***
        .  ***************************/
        .  
        .  template <bool IsAligned = false>
        .  struct unaligned_assign_impl
        .  {
        .    template <typename Derived, typename OtherDerived>
  195,264    static EIGEN_STRONG_INLINE void run(const Derived&, OtherDerived&, typename Derived::Index, typename Derived::Index) {}
        .  };
        .  
        .  template <>
        .  struct unaligned_assign_impl<false>
        .  {
        .    // MSVC must not inline this functions. If it does, it fails to optimize the
        .    // packet access path.
        .  #ifdef _MSC_VER
        .    template <typename Derived, typename OtherDerived>
        .    static EIGEN_DONT_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)
        .  #else
        .    template <typename Derived, typename OtherDerived>
2,036,104    static EIGEN_STRONG_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)
        .  #endif
        .    {
2,126,985      for (typename Derived::Index index = start; index < end; ++index)
  807,150        dst.copyCoeff(index, src);
  244,404  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (876x)
  872,616    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
  781,420    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
  625,136      const Index size = dst.size();
    1,056  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
        .      typedef packet_traits<typename Derived1::Scalar> PacketTraits;
        .      enum {
        .        packetSize = PacketTraits::size,
        .        dstAlignment = PacketTraits::AlignedOnScalar ? Aligned : int(assign_traits<Derived1,Derived2>::DstIsAligned) ,
        .        srcAlignment = assign_traits<Derived1,Derived2>::JointAlignment
        .      };
        .      const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
1,367,576                               : internal::first_aligned(&dst.coeffRef(0), size);
  154,350  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
  126,910  => /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:long Eigen::internal::first_aligned<double, long>(double const*, long) (3430x)
1,497,752      const Index alignedEnd = alignedStart + ((size-alignedStart)/packetSize)*packetSize;
        .  
1,072,292      unaligned_assign_impl<assign_traits<Derived1,Derived2>::DstIsAligned!=0>::run(src,dst,0,alignedStart);
      120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
        .  
8,460,674      for(Index index = alignedStart; index < alignedEnd; index += packetSize)
        .      {
9,241,140        dst.template copyPacket<Derived2, dstAlignment, srcAlignment>(index, src);
5,886,965  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36565x)
        .      }
        .  
  937,704      unaligned_assign_impl<>::run(src,dst,alignedEnd,size);
      192  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
  468,852    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, CompleteUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
-- line 422 ----------------------------------------
-- line 432 ----------------------------------------
        .  /**************************
        .  *** Slice vectorization ***
        .  ***************************/
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, SliceVectorizedTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
    1,356    static inline void run(Derived1 &dst, const Derived2 &src)
        .    {
        .      typedef packet_traits<typename Derived1::Scalar> PacketTraits;
        .      enum {
        .        packetSize = PacketTraits::size,
        .        alignable = PacketTraits::AlignedOnScalar,
        .        dstAlignment = alignable ? Aligned : int(assign_traits<Derived1,Derived2>::DstIsAligned) ,
        .        srcAlignment = assign_traits<Derived1,Derived2>::JointAlignment
        .      };
      226      const Index packetAlignedMask = packetSize - 1;
      904      const Index innerSize = dst.innerSize();
    7,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
      904      const Index outerSize = dst.outerSize();
    7,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
    3,164      const Index alignedStep = alignable ? (packetSize - dst.outerStride() % packetSize) & packetAlignedMask : 0;
    1,280  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
        .      Index alignedStart = ((!alignable) || assign_traits<Derived1,Derived2>::DstIsAligned) ? 0
    2,260                         : internal::first_aligned(&dst.coeffRef(0,0), innerSize);
    5,920  => /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:long Eigen::internal::first_aligned<double, long>(double const*, long) (160x)
   17,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
        .  
   22,504      for(Index outer = 0; outer < outerSize; ++outer)
        .      {
   30,240        const Index alignedEnd = alignedStart + ((innerSize-alignedStart) & ~packetAlignedMask);
        .        // do the non-vectorizable part of the assignment
   23,870        for(Index inner = 0; inner<alignedStart ; ++inner)
    7,908          dst.copyCoeffByOuterInner(outer, inner, src);
  305,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (920x)
        .  
        .        // do the vectorizable part of the assignment
  267,200        for(Index inner = alignedStart; inner<alignedEnd; inner+=packetSize)
  294,720          dst.template copyPacketByOuterInner<Derived2, dstAlignment, Unaligned>(outer, inner, src);
19,598,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (49120x)
        .  
        .        // do the non-vectorizable part of the assignment
   36,610        for(Index inner = alignedEnd; inner<innerSize ; ++inner)
   18,012          dst.copyCoeffByOuterInner(outer, inner, src);
  942,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2840x)
        .  
   77,760        alignedStart = std::min<Index>((alignedStart+alignedStep)%packetSize, innerSize);
   52,640  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3760x)
        .      }
    1,130    }
        .  };
        .  
        .  } // end namespace internal
        .  
        .  /***************************************************************************
        .  * Part 4 : implementation of DenseBase methods
        .  ***************************************************************************/
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
  419,358  EIGEN_STRONG_INLINE Derived& DenseBase<Derived>
        .    ::lazyAssign(const DenseBase<OtherDerived>& other)
        .  {
        .    enum{
        .      SameType = internal::is_same<typename Derived::Scalar,typename OtherDerived::Scalar>::value
        .    };
        .  
        .    EIGEN_STATIC_ASSERT_LVALUE(Derived)
        .    EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Derived,OtherDerived)
        .    EIGEN_STATIC_ASSERT(SameType,YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
        .  
        .  #ifdef EIGEN_DEBUG_ASSIGN
        .    internal::assign_traits<Derived, OtherDerived>::debug();
        .  #endif
1,677,432    eigen_assert(rows() == other.rows() && cols() == other.cols());
    7,896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (224x)
  209,679    internal::assign_impl<Derived, OtherDerived, int(SameType) ? int(internal::assign_traits<Derived, OtherDerived>::Traversal)
   73,613  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56x)
  489,251                                                         : int(InvalidTraversal)>::run(derived(),other.derived());
      784  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (112x)
        .  #ifndef EIGEN_NO_DEBUG
  559,144    checkTransposeAliasing(other.derived());
    2,184  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (112x)
        .  #endif
  209,679    return derived();
      392  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56x)
  279,572  }
        .  
        .  namespace internal {
        .  
        .  template<typename Derived, typename OtherDerived,
        .           bool EvalBeforeAssigning = (int(internal::traits<OtherDerived>::Flags) & EvalBeforeAssigningBit) != 0,
        .           bool NeedToTranspose = ((int(Derived::RowsAtCompileTime) == 1 && int(OtherDerived::ColsAtCompileTime) == 1)
        .                                |   // FIXME | instead of || to please GCC 4.4.0 stupid warning "suggest parentheses around &&".
        .                                    // revert to || as soon as not needed anymore.
        .                                    (int(Derived::ColsAtCompileTime) == 1 && int(OtherDerived::RowsAtCompileTime) == 1))
        .                                && int(Derived::SizeAtCompileTime) != 1>
        .  struct assign_selector;
        .  
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,false,false> {
2,589,840    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.derived()); }
11,287,925  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (814x)
        .    template<typename ActualDerived, typename ActualOtherDerived>
   58,318    static EIGEN_STRONG_INLINE Derived& evalTo(ActualDerived& dst, const ActualOtherDerived& other) { other.evalTo(dst); return dst; }
512,334,623  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .  };
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,true,false> {
        .    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.eval()); }
        .  };
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,false,true> {
  303,229    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose()); }
26,374,755  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35674x)
        .    template<typename ActualDerived, typename ActualOtherDerived>
        .    static EIGEN_STRONG_INLINE Derived& evalTo(ActualDerived& dst, const ActualOtherDerived& other) { Transpose<ActualDerived> dstTrans(dst); other.evalTo(dstTrans); return dst; }
        .  };
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,true,true> {
        .    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose().eval()); }
        .  };
        .  
-- line 538 ----------------------------------------
-- line 547 ----------------------------------------
        .  
        .  template<typename Derived>
        .  EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase& other)
        .  {
        .    return internal::assign_selector<Derived,Derived>::run(derived(), other.derived());
        .  }
        .  
        .  template<typename Derived>
   11,448  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)
        .  {
   19,080    return internal::assign_selector<Derived,Derived>::run(derived(), other.derived());
8,921,050  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5244x)
    7,632  }
        .  
        .  template<typename Derived>
        .  template <typename OtherDerived>
  946,482  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)
        .  {
1,577,470    return internal::assign_selector<Derived,OtherDerived>::run(derived(), other.derived());
   26,117  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (69x)
  630,988  }
        .  
        .  template<typename Derived>
        .  template <typename OtherDerived>
        .  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)
        .  {
        .    return internal::assign_selector<Derived,OtherDerived,false>::evalTo(derived(), other.derived());
        .  }
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
   26,916  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)
        .  {
   44,860    return internal::assign_selector<Derived,OtherDerived,false>::evalTo(derived(), other.derived());
75,501,276  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8532x)
   17,944  }
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_ASSIGN_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MatrixBase.h
--------------------------------------------------------------------------------
       Ir 

-- line 93 ----------------------------------------
        .  #ifndef EIGEN_PARSED_BY_DOXYGEN
        .      /** type of the equivalent square matrix */
        .      typedef Matrix<Scalar,EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime),
        .                            EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;
        .  #endif // not EIGEN_PARSED_BY_DOXYGEN
        .  
        .      /** \returns the size of the main diagonal, which is min(rows(),cols()).
        .        * \sa rows(), cols(), SizeAtCompileTime. */
   74,540      inline Index diagonalSize() const { return (std::min)(rows(),cols()); }
  327,976  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11181x)
        .  
        .      /** \brief The plain matrix type corresponding to this expression.
        .        *
        .        * This is not necessarily exactly the return type of eval(). In the case of plain matrices,
        .        * the return type of eval() is a const reference to a matrix, not a matrix! It is however guaranteed
        .        * that the return type of eval() is either PlainObject or const PlainObject&.
        .        */
        .      typedef Matrix<typename internal::traits<Derived>::Scalar,
-- line 109 ----------------------------------------
-- line 490 ----------------------------------------
        .      template<int Size> VectorBlock<Derived,Size> end();
        .      template<int Size> const VectorBlock<const Derived,Size> end() const;
        .  
        .      Minor<Derived> minor(Index row, Index col);
        .      const Minor<Derived> minor(Index row, Index col) const;
        .  #endif
        .  
        .    protected:
8,936,180      MatrixBase() : Base() {}
  415,648  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6704x)
        .  
        .    private:
        .      explicit MatrixBase(int);
        .      MatrixBase(int,int);
        .      template<typename OtherDerived> explicit MatrixBase(const MatrixBase<OtherDerived>&);
        .    protected:
        .      // mixing arrays and matrices is not legal
        .      template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )
-- line 506 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h
--------------------------------------------------------------------------------
     Ir 

-- line 41 ----------------------------------------
      .           | (functor_traits<NullaryOp>::PacketAccess ? PacketAccessBit : 0)))
      .        | (functor_traits<NullaryOp>::IsRepeatable ? 0 : EvalBeforeNestingBit),
      .      CoeffReadCost = functor_traits<NullaryOp>::Cost
      .    };
      .  };
      .  }
      .  
      .  template<typename NullaryOp, typename PlainObjectType>
568,258  class CwiseNullaryOp : internal::no_assignment_operator,
356,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35674x)
      .    public internal::dense_xpr_base< CwiseNullaryOp<NullaryOp, PlainObjectType> >::type
      .  {
      .    public:
      .  
      .      typedef typename internal::dense_xpr_base<CwiseNullaryOp>::type Base;
      .      EIGEN_DENSE_PUBLIC_INTERFACE(CwiseNullaryOp)
      .  
197,876      CwiseNullaryOp(Index nbRows, Index nbCols, const NullaryOp& func = NullaryOp())
650,164        : m_rows(nbRows), m_cols(nbCols), m_functor(func)
  5,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (280x)
      .      {
516,626        eigen_assert(nbRows >= 0
      .              && (RowsAtCompileTime == Dynamic || RowsAtCompileTime == nbRows)
      .              &&  nbCols >= 0
      .              && (ColsAtCompileTime == Dynamic || ColsAtCompileTime == nbCols));
 84,804      }
      .  
453,985      EIGEN_STRONG_INLINE Index rows() const { return m_rows.value(); }
  2,992  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (374x)
402,007      EIGEN_STRONG_INLINE Index cols() const { return m_cols.value(); }
    336  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56x)
      .  
633,696      EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const
      .      {
844,928        return m_functor(rowId, colId);
  6,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
316,848      }
      .  
      .      template<int LoadMode>
      .      EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const
      .      {
      .        return m_functor.packetOp(rowId, colId);
      .      }
      .  
362,085      EIGEN_STRONG_INLINE const Scalar coeff(Index index) const
      .      {
579,336        return m_functor(index);
835,488  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (69624x)
217,251      }
      .  
      .      template<int LoadMode>
438,310      EIGEN_STRONG_INLINE PacketScalar packet(Index index) const
      .      {
613,634        return m_functor.packetOp(index);
837,890  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36430x)
175,324      }
      .  
      .      /** \returns the functor representing the nullary operation */
      .      const NullaryOp& functor() const { return m_functor; }
      .  
      .    protected:
      .      const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;
      .      const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;
      .      const NullaryOp m_functor;
-- line 97 ----------------------------------------
-- line 109 ----------------------------------------
      .    *
      .    * The template parameter \a CustomNullaryOp is the type of the functor.
      .    *
      .    * \sa class CwiseNullaryOp
      .    */
      .  template<typename Derived>
      .  template<typename CustomNullaryOp>
      .  EIGEN_STRONG_INLINE const CwiseNullaryOp<CustomNullaryOp, Derived>
 54,040  DenseBase<Derived>::NullaryExpr(Index rows, Index cols, const CustomNullaryOp& func)
      .  {
 46,320    return CwiseNullaryOp<CustomNullaryOp, Derived>(rows, cols, func);
 17,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (130x)
 23,160  }
      .  
      .  /** \returns an expression of a matrix defined by a custom functor \a func
      .    *
      .    * The parameter \a size is the size of the returned vector.
      .    * Must be compatible with this MatrixBase type.
      .    *
      .    * \only_for_vectors
      .    *
-- line 128 ----------------------------------------
-- line 132 ----------------------------------------
      .    *
      .    * The template parameter \a CustomNullaryOp is the type of the functor.
      .    *
      .    * \sa class CwiseNullaryOp
      .    */
      .  template<typename Derived>
      .  template<typename CustomNullaryOp>
      .  EIGEN_STRONG_INLINE const CwiseNullaryOp<CustomNullaryOp, Derived>
123,288  DenseBase<Derived>::NullaryExpr(Index size, const CustomNullaryOp& func)
      .  {
      .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      .    if(RowsAtCompileTime == 1) return CwiseNullaryOp<CustomNullaryOp, Derived>(1, size, func);
143,836    else return CwiseNullaryOp<CustomNullaryOp, Derived>(size, 1, func);
3,041,104  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20548x)
 61,644  }
      .  
      .  /** \returns an expression of a matrix defined by a custom functor \a func
      .    *
      .    * This variant is only for fixed-size DenseBase types. For dynamic-size types, you
      .    * need to use the variants taking size arguments.
      .    *
      .    * The template parameter \a CustomNullaryOp is the type of the functor.
      .    *
-- line 153 ----------------------------------------
-- line 171 ----------------------------------------
      .    * instead.
      .    *
      .    * The template parameter \a CustomNullaryOp is the type of the functor.
      .    *
      .    * \sa class CwiseNullaryOp
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE const typename DenseBase<Derived>::ConstantReturnType
 39,032  DenseBase<Derived>::Constant(Index nbRows, Index nbCols, const Scalar& value)
      .  {
 61,336    return DenseBase<Derived>::NullaryExpr(nbRows, nbCols, internal::scalar_constant_op<Scalar>(value));
  9,912  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (112x)
 16,728  }
      .  
      .  /** \returns an expression of a constant matrix of value \a value
      .    *
      .    * The parameter \a size is the size of the returned vector.
      .    * Must be compatible with this DenseBase type.
      .    *
      .    * \only_for_vectors
      .    *
-- line 190 ----------------------------------------
-- line 193 ----------------------------------------
      .    * instead.
      .    *
      .    * The template parameter \a CustomNullaryOp is the type of the functor.
      .    *
      .    * \sa class CwiseNullaryOp
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE const typename DenseBase<Derived>::ConstantReturnType
123,288  DenseBase<Derived>::Constant(Index size, const Scalar& value)
      .  {
226,028    return DenseBase<Derived>::NullaryExpr(size, internal::scalar_constant_op<Scalar>(value));
3,636,996  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (41096x)
 61,644  }
      .  
      .  /** \returns an expression of a constant matrix of value \a value
      .    *
      .    * This variant is only for fixed-size DenseBase types. For dynamic-size types, you
      .    * need to use the variants taking size arguments.
      .    *
      .    * The template parameter \a CustomNullaryOp is the type of the functor.
      .    *
-- line 212 ----------------------------------------
-- line 324 ----------------------------------------
      .    setConstant(val);
      .  }
      .  
      .  /** Sets all coefficients in this expression to \a value.
      .    *
      .    * \sa fill(), setConstant(Index,const Scalar&), setConstant(Index,Index,const Scalar&), setZero(), setOnes(), Constant(), class CwiseNullaryOp, setZero(), setOnes()
      .    */
      .  template<typename Derived>
 32,676  EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setConstant(const Scalar& val)
      .  {
119,812    return derived() = Constant(rows(), cols(), val);
9,552,937  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (17150x)
 21,784  }
      .  
      .  /** Resizes to the given \a size, and sets all coefficients in this expression to the given \a value.
      .    *
      .    * \only_for_vectors
      .    *
      .    * Example: \include Matrix_setConstant_int.cpp
      .    * Output: \verbinclude Matrix_setConstant_int.out
      .    *
-- line 343 ----------------------------------------
-- line 420 ----------------------------------------
      .    *
      .    * Example: \include MatrixBase_zero_int_int.cpp
      .    * Output: \verbinclude MatrixBase_zero_int_int.out
      .    *
      .    * \sa Zero(), Zero(Index)
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE const typename DenseBase<Derived>::ConstantReturnType
    384  DenseBase<Derived>::Zero(Index nbRows, Index nbCols)
      .  {
    512    return Constant(nbRows, nbCols, Scalar(0));
 11,968  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (64x)
    192  }
      .  
      .  /** \returns an expression of a zero vector.
      .    *
      .    * The parameter \a size is the size of the returned vector.
      .    * Must be compatible with this MatrixBase type.
      .    *
      .    * \only_for_vectors
      .    *
-- line 439 ----------------------------------------
-- line 443 ----------------------------------------
      .    *
      .    * Example: \include MatrixBase_zero_int.cpp
      .    * Output: \verbinclude MatrixBase_zero_int.out
      .    *
      .    * \sa Zero(), Zero(Index,Index)
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE const typename DenseBase<Derived>::ConstantReturnType
102,740  DenseBase<Derived>::Zero(Index size)
      .  {
164,384    return Constant(size, Scalar(0));
4,068,504  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20548x)
 61,644  }
      .  
      .  /** \returns an expression of a fixed-size zero matrix or vector.
      .    *
      .    * This variant is only for fixed-size MatrixBase types. For dynamic-size types, you
      .    * need to use the variants taking size arguments.
      .    *
      .    * Example: \include MatrixBase_zero.cpp
      .    * Output: \verbinclude MatrixBase_zero.out
-- line 462 ----------------------------------------
-- line 491 ----------------------------------------
      .  /** Sets all coefficients in this expression to zero.
      .    *
      .    * Example: \include MatrixBase_setZero.cpp
      .    * Output: \verbinclude MatrixBase_setZero.out
      .    *
      .    * \sa class CwiseNullaryOp, Zero()
      .    */
      .  template<typename Derived>
 21,784  EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setZero()
      .  {
 38,122    return setConstant(Scalar(0));
3,345,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1960x)
 10,892  }
      .  
      .  /** Resizes to the given \a size, and sets all coefficients in this expression to zero.
      .    *
      .    * \only_for_vectors
      .    *
      .    * Example: \include Matrix_setZero_int.cpp
      .    * Output: \verbinclude Matrix_setZero_int.out
      .    *
-- line 510 ----------------------------------------
-- line 675 ----------------------------------------
      .    *
      .    * Example: \include MatrixBase_identity_int_int.cpp
      .    * Output: \verbinclude MatrixBase_identity_int_int.out
      .    *
      .    * \sa Identity(), setIdentity(), isIdentity()
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::IdentityReturnType
 12,864  MatrixBase<Derived>::Identity(Index nbRows, Index nbCols)
      .  {
 19,296    return DenseBase<Derived>::NullaryExpr(nbRows, nbCols, internal::scalar_identity_op<Scalar>());
334,464  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4288x)
  6,432  }
      .  
      .  /** \returns an expression of the identity matrix (not necessarily square).
      .    *
      .    * This variant is only for fixed-size MatrixBase types. For dynamic-size types, you
      .    * need to use the variant taking size arguments.
      .    *
      .    * Example: \include MatrixBase_identity.cpp
      .    * Output: \verbinclude MatrixBase_identity.out
-- line 694 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/emmintrin.h
--------------------------------------------------------------------------------
       Ir 

-- line 55 ----------------------------------------
        .  /* Create a selector for use with the SHUFPD instruction.  */
        .  #define _MM_SHUFFLE2(fp1,fp0) \
        .   (((fp1) << 1) | (fp0))
        .  
        .  /* Create a vector with element 0 as F and the rest zero.  */
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_set_sd (double __F)
        .  {
3,976,024    return __extension__ (__m128d){ __F, 0.0 };
        .  }
        .  
        .  /* Create a vector with both elements equal to F.  */
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_set1_pd (double __F)
        .  {
2,801,263    return __extension__ (__m128d){ __F, __F };
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_set_pd1 (double __F)
        .  {
        .    return _mm_set1_pd (__F);
        .  }
        .  
-- line 78 ----------------------------------------
-- line 111 ----------------------------------------
        .  {
        .    return (__m128d) __builtin_ia32_movsd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  /* Load two DPFP values from P.  The address must be 16-byte aligned.  */
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_load_pd (double const *__P)
        .  {
6,534,276    return *(__m128d *)__P;
        .  }
        .  
        .  /* Load two DPFP values from P.  The address need not be 16-byte aligned.  */
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_loadu_pd (double const *__P)
        .  {
        .    return __builtin_ia32_loadupd (__P);
        .  }
-- line 127 ----------------------------------------
-- line 132 ----------------------------------------
        .  {
        .    return _mm_set1_pd (*__P);
        .  }
        .  
        .  /* Create a vector with element 0 as *P and the rest zero.  */
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_load_sd (double const *__P)
        .  {
5,876,412    return _mm_set_sd (*__P);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_load_pd1 (double const *__P)
        .  {
        .    return _mm_load1_pd (__P);
        .  }
        .  
-- line 148 ----------------------------------------
-- line 153 ----------------------------------------
        .    __m128d __tmp = _mm_load_pd (__P);
        .    return __builtin_ia32_shufpd (__tmp, __tmp, _MM_SHUFFLE2 (0,1));
        .  }
        .  
        .  /* Store two DPFP values.  The address must be 16-byte aligned.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_store_pd (double *__P, __m128d __A)
        .  {
4,936,986    *(__m128d *)__P = __A;
        .  }
        .  
        .  /* Store two DPFP values.  The address need not be 16-byte aligned.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_storeu_pd (double *__P, __m128d __A)
        .  {
        .    __builtin_ia32_storeupd (__P, __A);
        .  }
        .  
        .  /* Stores the lower DPFP value.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_store_sd (double *__P, __m128d __A)
        .  {
  690,070    *__P = ((__v2df)__A)[0];
        .  }
        .  
        .  extern __inline double __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_cvtsd_f64 (__m128d __A)
        .  {
  376,305    return ((__v2df)__A)[0];
        .  }
        .  
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_storel_pd (double *__P, __m128d __A)
        .  {
        .    _mm_store_sd (__P, __A);
        .  }
        .  
        .  /* Stores the upper DPFP value.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_storeh_pd (double *__P, __m128d __A)
        .  {
  690,070    *__P = ((__v2df)__A)[1];
        .  }
        .  
        .  /* Store the lower DPFP value across two words.
        .     The address must be 16-byte aligned.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_store1_pd (double *__P, __m128d __A)
        .  {
        .    _mm_store_pd (__P, __builtin_ia32_shufpd (__A, __A, _MM_SHUFFLE2 (0,0)));
-- line 202 ----------------------------------------
-- line 235 ----------------------------------------
        .  {
        .    return ((__v2di)__A)[0];
        .  }
        .  #endif
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_add_pd (__m128d __A, __m128d __B)
        .  {
3,766,210    return (__m128d) ((__v2df)__A + (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_add_sd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_addsd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_sub_pd (__m128d __A, __m128d __B)
        .  {
2,497,504    return (__m128d) ((__v2df)__A - (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_sub_sd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_subsd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_mul_pd (__m128d __A, __m128d __B)
        .  {
8,835,926    return (__m128d) ((__v2df)__A * (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_mul_sd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_mulsd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_div_pd (__m128d __A, __m128d __B)
        .  {
   51,086    return (__m128d) ((__v2df)__A / (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_div_sd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_divsd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
-- line 287 ----------------------------------------
-- line 297 ----------------------------------------
        .  {
        .    __v2df __tmp = __builtin_ia32_movsd ((__v2df)__A, (__v2df)__B);
        .    return (__m128d)__builtin_ia32_sqrtsd ((__v2df)__tmp);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_min_pd (__m128d __A, __m128d __B)
        .  {
       60    return (__m128d)__builtin_ia32_minpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_min_sd (__m128d __A, __m128d __B)
        .  {
       20    return (__m128d)__builtin_ia32_minsd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_max_pd (__m128d __A, __m128d __B)
        .  {
       60    return (__m128d)__builtin_ia32_maxpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_max_sd (__m128d __A, __m128d __B)
        .  {
       20    return (__m128d)__builtin_ia32_maxsd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_and_pd (__m128d __A, __m128d __B)
        .  {
   20,832    return (__m128d)__builtin_ia32_andpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_andnot_pd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_andnpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
-- line 337 ----------------------------------------
-- line 339 ----------------------------------------
        .  _mm_or_pd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_orpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_xor_pd (__m128d __A, __m128d __B)
        .  {
   26,022    return (__m128d)__builtin_ia32_xorpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_cmpeq_pd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_cmpeqpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
-- line 355 ----------------------------------------
-- line 591 ----------------------------------------
        .  _mm_set_epi64 (__m64 __q1,  __m64 __q0)
        .  {
        .    return _mm_set_epi64x ((long long)__q1, (long long)__q0);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_set_epi32 (int __q3, int __q2, int __q1, int __q0)
        .  {
  281,124    return __extension__ (__m128i)(__v4si){ __q0, __q1, __q2, __q3 };
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_set_epi16 (short __q7, short __q6, short __q5, short __q4,
        .  	       short __q3, short __q2, short __q1, short __q0)
        .  {
        .    return __extension__ (__m128i)(__v8hi){
        .      __q0, __q1, __q2, __q3, __q4, __q5, __q6, __q7 };
-- line 607 ----------------------------------------
-- line 909 ----------------------------------------
        .  #define _mm_shuffle_pd(A, B, N)						\
        .    ((__m128d)__builtin_ia32_shufpd ((__v2df)(__m128d)(A),		\
        .  				   (__v2df)(__m128d)(B), (int)(N)))
        .  #endif
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_unpackhi_pd (__m128d __A, __m128d __B)
        .  {
       40    return (__m128d)__builtin_ia32_unpckhpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_unpacklo_pd (__m128d __A, __m128d __B)
        .  {
        .    return (__m128d)__builtin_ia32_unpcklpd ((__v2df)__A, (__v2df)__B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_loadh_pd (__m128d __A, double const *__B)
        .  {
5,876,412    return (__m128d)__builtin_ia32_loadhpd ((__v2df)__A, __B);
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_loadl_pd (__m128d __A, double const *__B)
        .  {
        .    return (__m128d)__builtin_ia32_loadlpd ((__v2df)__A, __B);
        .  }
        .  
-- line 937 ----------------------------------------
-- line 1521 ----------------------------------------
        .  _mm_castpd_ps(__m128d __A)
        .  {
        .    return (__m128) __A;
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_castpd_si128(__m128d __A)
        .  {
   29,208    return (__m128i) __A;
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_castps_pd(__m128 __A)
        .  {
        .    return (__m128d) __A;
        .  }
        .  
-- line 1537 ----------------------------------------
-- line 1545 ----------------------------------------
        .  _mm_castsi128_ps(__m128i __A)
        .  {
        .    return (__m128) __A;
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_castsi128_pd(__m128i __A)
        .  {
   52,635    return (__m128d) __A;
        .  }
        .  
        .  #ifdef __DISABLE_SSE2__
        .  #undef __DISABLE_SSE2__
        .  #pragma GCC pop_options
        .  #endif /* __DISABLE_SSE2__ */
        .  
        .  #endif /* _EMMINTRIN_H_INCLUDED */
-- line 1561 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h
--------------------------------------------------------------------------------
       Ir 

-- line 51 ----------------------------------------
        .  EIGEN_DONT_INLINE static void run(
        .    Index rows, Index cols,
        .    const LhsScalar* lhs, Index lhsStride,
        .    const RhsScalar* rhs, Index rhsIncr,
        .    ResScalar* res, Index resIncr, RhsScalar alpha);
        .  };
        .  
        .  template<typename Index, typename LhsScalar, bool ConjugateLhs, typename RhsScalar, bool ConjugateRhs, int Version>
    6,720  EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,ColMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>::run(
        .    Index rows, Index cols,
        .    const LhsScalar* lhs, Index lhsStride,
        .    const RhsScalar* rhs, Index rhsIncr,
        .    ResScalar* res, Index resIncr, RhsScalar alpha)
        .  {
    1,680    EIGEN_UNUSED_VARIABLE(resIncr)
    3,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
        .    eigen_internal_assert(resIncr==1);
        .    #ifdef _EIGEN_ACCUMULATE_PACKETS
        .    #error _EIGEN_ACCUMULATE_PACKETS has already been defined
        .    #endif
        .    #define _EIGEN_ACCUMULATE_PACKETS(A0,A13,A2) \
        .      pstore(&res[j], \
        .        padd(pload<ResPacket>(&res[j]), \
        .          padd( \
-- line 73 ----------------------------------------
-- line 77 ----------------------------------------
        .                    pcj.pmul(EIGEN_CAT(ploa , A13)<LhsPacket>(&lhs3[j]),   ptmp3)) )))
        .  
        .    conj_helper<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> cj;
        .    conj_helper<LhsPacket,RhsPacket,ConjugateLhs,ConjugateRhs> pcj;
        .    if(ConjugateRhs)
        .      alpha = numext::conj(alpha);
        .  
        .    enum { AllAligned = 0, EvenAligned, FirstAligned, NoneAligned };
      560    const Index columnsAtOnce = 4;
      560    const Index peels = 2;
      560    const Index LhsPacketAlignedMask = LhsPacketSize-1;
      560    const Index ResPacketAlignedMask = ResPacketSize-1;
        .  //  const Index PeelAlignedMask = ResPacketSize*peels-1;
    1,120    const Index size = rows;
        .    
        .    // How many coeffs of the result do we have to skip to be aligned.
        .    // Here we assume data are at least aligned on the base scalar type.
    2,800    Index alignedStart = internal::first_aligned(res,size);
   20,720  => /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:long Eigen::internal::first_aligned<double, long>(double const*, long) (560x)
    3,920    Index alignedSize = ResPacketSize>1 ? alignedStart + ((size-alignedStart) & ~ResPacketAlignedMask) : 0;
    1,680    const Index peeledSize = alignedSize - RhsPacketSize*peels - RhsPacketSize + 1;
        .  
    5,040    const Index alignmentStep = LhsPacketSize>1 ? (LhsPacketSize - lhsStride % LhsPacketSize) & LhsPacketAlignedMask : 0;
        .    Index alignmentPattern = alignmentStep==0 ? AllAligned
        .                         : alignmentStep==(LhsPacketSize/2) ? EvenAligned
    3,920                         : FirstAligned;
        .  
        .    // we cannot assume the first element is aligned because of sub-matrices
    3,360    const Index lhsAlignmentOffset = internal::first_aligned(lhs,size);
   20,720  => /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:long Eigen::internal::first_aligned<double, long>(double const*, long) (560x)
        .  
        .    // find how many columns do we have to skip to be aligned with the result (if possible)
      560    Index skipColumns = 0;
        .    // if the data cannot be aligned (TODO add some compile time tests when possible, e.g. for floats)
    4,480    if( (size_t(lhs)%sizeof(LhsScalar)) || (size_t(res)%sizeof(ResScalar)) )
        .    {
        .      alignedSize = 0;
        .      alignedStart = 0;
        .    }
        .    else if (LhsPacketSize>1)
        .    {
        .      eigen_internal_assert(size_t(lhs+lhsAlignmentOffset)%sizeof(LhsPacket)==0 || size<LhsPacketSize);
        .  
    9,520      while (skipColumns<LhsPacketSize &&
        .            alignedStart != ((lhsAlignmentOffset + alignmentStep*skipColumns)%LhsPacketSize))
        .        ++skipColumns;
    1,680      if (skipColumns==LhsPacketSize)
        .      {
        .        // nothing can be aligned, no need to skip any column
        .        alignmentPattern = NoneAligned;
        .        skipColumns = 0;
        .      }
        .      else
        .      {
    3,920        skipColumns = (std::min)(skipColumns,cols);
    7,840  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
        .        // note that the skiped columns are processed later.
        .      }
        .  
        .      eigen_internal_assert(  (alignmentPattern==NoneAligned)
        .                        || (skipColumns + columnsAtOnce >= cols)
        .                        || LhsPacketSize > size
        .                        || (size_t(lhs+alignedStart+lhsStride*skipColumns)%sizeof(LhsPacket))==0);
        .    }
        .    else if(Vectorizable)
        .    {
        .      alignedStart = 0;
        .      alignedSize = size;
        .      alignmentPattern = AllAligned;
        .    }
        .  
    2,800    Index offset1 = (FirstAligned && alignmentStep==1?3:1);
    2,800    Index offset3 = (FirstAligned && alignmentStep==1?1:3);
        .  
    6,720    Index columnBound = ((cols-skipColumns)/columnsAtOnce)*columnsAtOnce + skipColumns;
    6,160    for (Index i=skipColumns; i<columnBound; i+=columnsAtOnce)
        .    {
    7,280      RhsPacket ptmp0 = pset1<RhsPacket>(alpha*rhs[i*rhsIncr]),
    6,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
    8,400                ptmp1 = pset1<RhsPacket>(alpha*rhs[(i+offset1)*rhsIncr]),
    6,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
    7,840                ptmp2 = pset1<RhsPacket>(alpha*rhs[(i+2)*rhsIncr]),
    6,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
    8,400                ptmp3 = pset1<RhsPacket>(alpha*rhs[(i+offset3)*rhsIncr]);
    6,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
        .  
        .      // this helps a lot generating better binary code
    7,840      const LhsScalar *lhs0 = lhs + i*lhsStride,     *lhs1 = lhs + (i+offset1)*lhsStride,
    8,400                      *lhs2 = lhs + (i+2)*lhsStride, *lhs3 = lhs + (i+offset3)*lhsStride;
        .  
        .      if (Vectorizable)
        .      {
        .        /* explicit vectorization */
        .        // process initial unaligned coeffs
    2,240        for (Index j=0; j<alignedStart; ++j)
        .        {
        .          res[j] = cj.pmadd(lhs0[j], pfirst(ptmp0), res[j]);
        .          res[j] = cj.pmadd(lhs1[j], pfirst(ptmp1), res[j]);
        .          res[j] = cj.pmadd(lhs2[j], pfirst(ptmp2), res[j]);
        .          res[j] = cj.pmadd(lhs3[j], pfirst(ptmp3), res[j]);
        .        }
        .  
    1,680        if (alignedSize>alignedStart)
        .        {
    1,680          switch(alignmentPattern)
        .          {
        .            case AllAligned:
        .              for (Index j = alignedStart; j<alignedSize; j+=ResPacketSize)
        .                _EIGEN_ACCUMULATE_PACKETS(d,d,d);
        .              break;
        .            case EvenAligned:
   11,200              for (Index j = alignedStart; j<alignedSize; j+=ResPacketSize)
  159,600                _EIGEN_ACCUMULATE_PACKETS(d,du,d);
  472,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (23520x)
    1,120              break;
        .            case FirstAligned:
        .            {
        .              Index j = alignedStart;
        .              if(peels>1)
        .              {
        .                LhsPacket A00, A01, A02, A03, A10, A11, A12, A13;
        .                ResPacket T0, T1;
        .  
-- line 191 ----------------------------------------
-- line 225 ----------------------------------------
        .              for (Index j = alignedStart; j<alignedSize; j+=ResPacketSize)
        .                _EIGEN_ACCUMULATE_PACKETS(du,du,du);
        .              break;
        .          }
        .        }
        .      } // end explicit vectorization
        .  
        .      /* process remaining coeffs (or all if there is no explicit vectorization) */
    5,600      for (Index j=alignedSize; j<size; ++j)
        .      {
   13,440        res[j] = cj.pmadd(lhs0[j], pfirst(ptmp0), res[j]);
   47,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
   13,440        res[j] = cj.pmadd(lhs1[j], pfirst(ptmp1), res[j]);
   47,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
   13,440        res[j] = cj.pmadd(lhs2[j], pfirst(ptmp2), res[j]);
   47,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
   13,440        res[j] = cj.pmadd(lhs3[j], pfirst(ptmp3), res[j]);
   47,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
        .      }
        .    }
        .  
        .    // process remaining first and last columns (at most columnsAtOnce-1)
    1,120    Index end = cols;
    1,120    Index start = columnBound;
        .    do
        .    {
   11,200      for (Index k=start; k<end; ++k)
        .      {
   21,840        RhsPacket ptmp0 = pset1<RhsPacket>(alpha*rhs[k*rhsIncr]);
   18,480  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1680x)
   10,080        const LhsScalar* lhs0 = lhs + k*lhsStride;
        .  
        .        if (Vectorizable)
        .        {
        .          /* explicit vectorization */
        .          // process first unaligned result's coeffs
    6,720          for (Index j=0; j<alignedStart; ++j)
        .            res[j] += cj.pmul(lhs0[j], pfirst(ptmp0));
        .          // process aligned result's coeffs
   11,760          if ((size_t(lhs0+alignedStart)%sizeof(LhsPacket))==0)
   22,400            for (Index i = alignedStart;i<alignedSize;i+=ResPacketSize)
   97,440              pstore(&res[i], pcj.pmadd(pload<LhsPacket>(&lhs0[i]), ptmp0, pload<ResPacket>(&res[i])));
  356,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (13440x)
        .          else
   11,200            for (Index i = alignedStart;i<alignedSize;i+=ResPacketSize)
   48,720              pstore(&res[i], pcj.pmadd(ploadu<LhsPacket>(&lhs0[i]), ptmp0, pload<ResPacket>(&res[i])));
  199,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6720x)
        .        }
        .  
        .        // process remaining scalars (or all if no explicit vectorization)
   16,800        for (Index i=alignedSize; i<size; ++i)
   45,360          res[i] += cj.pmul(lhs0[i], pfirst(ptmp0));
   75,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3360x)
        .      }
    1,680      if (skipColumns)
        .      {
        .        start = 0;
        .        end = skipColumns;
        .        skipColumns = 0;
        .      }
        .      else
      560        break;
        .    } while(Vectorizable);
        .    #undef _EIGEN_ACCUMULATE_PACKETS
    3,360  }
        .  
        .  /* Optimized row-major matrix * vector product:
        .   * This algorithm processes 4 rows at onces that allows to both reduce
        .   * the number of load/stores of the result by a factor 4 and to reduce
        .   * the instruction dependency. Moreover, we know that all bands have the
        .   * same alignment pattern.
        .   *
        .   * Mixing type logic:
-- line 289 ----------------------------------------
-- line 315 ----------------------------------------
        .    Index rows, Index cols,
        .    const LhsScalar* lhs, Index lhsStride,
        .    const RhsScalar* rhs, Index rhsIncr,
        .    ResScalar* res, Index resIncr,
        .    ResScalar alpha);
        .  };
        .  
        .  template<typename Index, typename LhsScalar, bool ConjugateLhs, typename RhsScalar, bool ConjugateRhs, int Version>
   48,300  EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,RowMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>::run(
        .    Index rows, Index cols,
        .    const LhsScalar* lhs, Index lhsStride,
        .    const RhsScalar* rhs, Index rhsIncr,
        .    ResScalar* res, Index resIncr,
        .    ResScalar alpha)
        .  {
   14,490    EIGEN_UNUSED_VARIABLE(rhsIncr);
   33,810  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4830x)
        .    eigen_internal_assert(rhsIncr==1);
        .    #ifdef _EIGEN_ACCUMULATE_PACKETS
        .    #error _EIGEN_ACCUMULATE_PACKETS has already been defined
        .    #endif
        .  
        .    #define _EIGEN_ACCUMULATE_PACKETS(A0,A13,A2) {\
        .      RhsPacket b = pload<RhsPacket>(&rhs[j]); \
        .      ptmp0 = pcj.pmadd(EIGEN_CAT(ploa,A0) <LhsPacket>(&lhs0[j]), b, ptmp0); \
-- line 338 ----------------------------------------
-- line 339 ----------------------------------------
        .      ptmp1 = pcj.pmadd(EIGEN_CAT(ploa,A13)<LhsPacket>(&lhs1[j]), b, ptmp1); \
        .      ptmp2 = pcj.pmadd(EIGEN_CAT(ploa,A2) <LhsPacket>(&lhs2[j]), b, ptmp2); \
        .      ptmp3 = pcj.pmadd(EIGEN_CAT(ploa,A13)<LhsPacket>(&lhs3[j]), b, ptmp3); }
        .  
        .    conj_helper<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> cj;
        .    conj_helper<LhsPacket,RhsPacket,ConjugateLhs,ConjugateRhs> pcj;
        .  
        .    enum { AllAligned=0, EvenAligned=1, FirstAligned=2, NoneAligned=3 };
    4,830    const Index rowsAtOnce = 4;
    4,830    const Index peels = 2;
    4,830    const Index RhsPacketAlignedMask = RhsPacketSize-1;
    4,830    const Index LhsPacketAlignedMask = LhsPacketSize-1;
        .  //   const Index PeelAlignedMask = RhsPacketSize*peels-1;
    9,660    const Index depth = cols;
        .  
        .    // How many coeffs of the result do we have to skip to be aligned.
        .    // Here we assume data are at least aligned on the base scalar type
        .    // if that's not the case then vectorization is discarded, see below.
   28,980    Index alignedStart = internal::first_aligned(rhs, depth);
  178,710  => /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:long Eigen::internal::first_aligned<double, long>(double const*, long) (4830x)
   33,810    Index alignedSize = RhsPacketSize>1 ? alignedStart + ((depth-alignedStart) & ~RhsPacketAlignedMask) : 0;
   14,490    const Index peeledSize = alignedSize - RhsPacketSize*peels - RhsPacketSize + 1;
        .  
   43,470    const Index alignmentStep = LhsPacketSize>1 ? (LhsPacketSize - lhsStride % LhsPacketSize) & LhsPacketAlignedMask : 0;
        .    Index alignmentPattern = alignmentStep==0 ? AllAligned
        .                           : alignmentStep==(LhsPacketSize/2) ? EvenAligned
   29,136                           : FirstAligned;
        .  
        .    // we cannot assume the first element is aligned because of sub-matrices
   28,980    const Index lhsAlignmentOffset = internal::first_aligned(lhs,depth);
  178,710  => /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h:long Eigen::internal::first_aligned<double, long>(double const*, long) (4830x)
        .  
        .    // find how many rows do we have to skip to be aligned with rhs (if possible)
    4,830    Index skipRows = 0;
        .    // if the data cannot be aligned (TODO add some compile time tests when possible, e.g. for floats)
   38,640    if( (sizeof(LhsScalar)!=sizeof(RhsScalar)) || (size_t(lhs)%sizeof(LhsScalar)) || (size_t(rhs)%sizeof(RhsScalar)) )
        .    {
        .      alignedSize = 0;
        .      alignedStart = 0;
        .    }
        .    else if (LhsPacketSize>1)
        .    {
        .      eigen_internal_assert(size_t(lhs+lhsAlignmentOffset)%sizeof(LhsPacket)==0  || depth<LhsPacketSize);
        .  
  107,382      while (skipRows<LhsPacketSize &&
        .             alignedStart != ((lhsAlignmentOffset + alignmentStep*skipRows)%LhsPacketSize))
    4,212        ++skipRows;
   14,490      if (skipRows==LhsPacketSize)
        .      {
        .        // nothing can be aligned, no need to skip any column
        .        alignmentPattern = NoneAligned;
        .        skipRows = 0;
        .      }
        .      else
        .      {
   43,470        skipRows = (std::min)(skipRows,Index(rows));
   67,620  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4830x)
        .        // note that the skiped columns are processed later.
        .      }
        .      eigen_internal_assert(  alignmentPattern==NoneAligned
        .                        || LhsPacketSize==1
        .                        || (skipRows + rowsAtOnce >= rows)
        .                        || LhsPacketSize > depth
        .                        || (size_t(lhs+alignedStart+lhsStride*skipRows)%sizeof(LhsPacket))==0);
        .    }
        .    else if(Vectorizable)
        .    {
        .      alignedStart = 0;
        .      alignedSize = depth;
        .      alignmentPattern = AllAligned;
        .    }
        .  
   22,592    Index offset1 = (FirstAligned && alignmentStep==1?3:1);
   22,592    Index offset3 = (FirstAligned && alignmentStep==1?1:3);
        .  
   57,960    Index rowBound = ((rows-skipRows)/rowsAtOnce)*rowsAtOnce + skipRows;
  137,346    for (Index i=skipRows; i<rowBound; i+=rowsAtOnce)
        .    {
   37,732      EIGEN_ALIGN16 ResScalar tmp0 = ResScalar(0);
  113,196      ResScalar tmp1 = ResScalar(0), tmp2 = ResScalar(0), tmp3 = ResScalar(0);
        .  
        .      // this helps the compiler generating good binary code
  264,124      const LhsScalar *lhs0 = lhs + i*lhsStride,     *lhs1 = lhs + (i+offset1)*lhsStride,
  282,990                      *lhs2 = lhs + (i+2)*lhsStride, *lhs3 = lhs + (i+offset3)*lhsStride;
        .  
        .      if (Vectorizable)
        .      {
        .        /* explicit vectorization */
  226,392        ResPacket ptmp0 = pset1<ResPacket>(ResScalar(0)), ptmp1 = pset1<ResPacket>(ResScalar(0)),
  415,052  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (37732x)
  226,392                  ptmp2 = pset1<ResPacket>(ResScalar(0)), ptmp3 = pset1<ResPacket>(ResScalar(0));
  415,052  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (37732x)
        .  
        .        // process initial unaligned coeffs
        .        // FIXME this loop get vectorized by the compiler !
  142,619        for (Index j=0; j<alignedStart; ++j)
        .        {
   80,586          RhsScalar b = rhs[j];
  376,068          tmp0 += cj.pmul(lhs0[j],b); tmp1 += cj.pmul(lhs1[j],b);
  805,860  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26862x)
  376,068          tmp2 += cj.pmul(lhs2[j],b); tmp3 += cj.pmul(lhs3[j],b);
  805,860  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26862x)
        .        }
        .  
   56,598        if (alignedSize>alignedStart)
        .        {
   88,290          switch(alignmentPattern)
        .          {
        .            case AllAligned:
  696,240              for (Index j = alignedStart; j<alignedSize; j+=RhsPacketSize)
8,264,214                _EIGEN_ACCUMULATE_PACKETS(d,d,d);
42,895,206  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1180602x)
   16,140              break;
        .            case EvenAligned:
  810,300              for (Index j = alignedStart; j<alignedSize; j+=RhsPacketSize)
9,541,980                _EIGEN_ACCUMULATE_PACKETS(d,du,d);
53,465,380  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1363140x)
   21,200              break;
        .            case FirstAligned:
        .            {
        .              Index j = alignedStart;
        .              if (peels>1)
        .              {
        .                /* Here we proccess 4 rows with with two peeled iterations to hide
        .                 * the overhead of unaligned loads. Moreover unaligned loads are handled
        .                 * using special shift/move operations between the two aligned packets
-- line 455 ----------------------------------------
-- line 487 ----------------------------------------
        .                _EIGEN_ACCUMULATE_PACKETS(d,du,du);
        .              break;
        .            }
        .            default:
        .              for (Index j = alignedStart; j<alignedSize; j+=RhsPacketSize)
        .                _EIGEN_ACCUMULATE_PACKETS(du,du,du);
        .              break;
        .          }
  149,360          tmp0 += predux(ptmp0);
  672,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18670x)
  149,360          tmp1 += predux(ptmp1);
  672,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18670x)
  149,360          tmp2 += predux(ptmp2);
  672,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18670x)
  149,360          tmp3 += predux(ptmp3);
  672,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18670x)
        .        }
        .      } // end explicit vectorization
        .  
        .      // process remaining coeffs (or all if no explicit vectorization)
        .      // FIXME this loop get vectorized by the compiler !
  124,670      for (Index j=alignedSize; j<depth; ++j)
        .      {
   36,408        RhsScalar b = rhs[j];
  169,904        tmp0 += cj.pmul(lhs0[j],b); tmp1 += cj.pmul(lhs1[j],b);
  364,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12136x)
  169,904        tmp2 += cj.pmul(lhs2[j],b); tmp3 += cj.pmul(lhs3[j],b);
  364,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12136x)
        .      }
  282,990      res[i*resIncr]            += alpha*tmp0;
  358,454      res[(i+offset1)*resIncr]  += alpha*tmp1;
  320,722      res[(i+2)*resIncr]        += alpha*tmp2;
  358,454      res[(i+offset3)*resIncr]  += alpha*tmp3;
        .    }
        .  
        .    // process remaining first and last rows (at most columnsAtOnce-1)
    9,660    Index end = rows;
    9,660    Index start = rowBound;
    1,404    do
        .    {
   82,185      for (Index i=start; i<end; ++i)
        .      {
   20,406        EIGEN_ALIGN16 ResScalar tmp0 = ResScalar(0);
   40,812        ResPacket ptmp0 = pset1<ResPacket>(tmp0);
  112,233  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10203x)
   61,218        const LhsScalar* lhs0 = lhs + i*lhsStride;
        .        // process first unaligned result's coeffs
        .        // FIXME this loop get vectorized by the compiler !
   67,077        for (Index j=0; j<alignedStart; ++j)
   89,301          tmp0 += cj.pmul(lhs0[j], rhs[j]);
  157,590  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5253x)
        .  
   30,609        if (alignedSize>alignedStart)
        .        {
        .          // process aligned rhs coeffs
   70,364          if ((size_t(lhs0+alignedStart)%sizeof(LhsPacket))==0)
  314,485            for (Index j = alignedStart;j<alignedSize;j+=RhsPacketSize)
1,185,555              ptmp0 = pcj.pmadd(pload<LhsPacket>(&lhs0[j]), pload<RhsPacket>(&rhs[j]), ptmp0);
5,080,950  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (169365x)
        .          else
  183,600            for (Index j = alignedStart;j<alignedSize;j+=RhsPacketSize)
  695,310              ptmp0 = pcj.pmadd(ploadu<LhsPacket>(&lhs0[j]), pload<RhsPacket>(&rhs[j]), ptmp0);
3,410,330  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99330x)
   80,416          tmp0 += predux(ptmp0);
  361,872  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10052x)
        .        }
        .  
        .        // process remaining scalars
        .        // FIXME this loop get vectorized by the compiler !
   83,415        for (Index j=alignedSize; j<depth; ++j)
  110,160          tmp0 += cj.pmul(lhs0[j], rhs[j]);
  194,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6480x)
  153,045        res[i*resIncr] += alpha*tmp0;
        .      }
   18,702      if (skipRows)
        .      {
    1,404        start = 0;
    2,808        end = skipRows;
    1,404        skipRows = 0;
        .      }
        .      else
    4,830        break;
        .    } while(Vectorizable);
        .  
        .    #undef _EIGEN_ACCUMULATE_PACKETS
   14,490  }
        .  
        .  } // end namespace internal
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_GENERAL_MATRIX_VECTOR_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Dot.h
--------------------------------------------------------------------------------
     Ir 

-- line 24 ----------------------------------------
      .                  && ((int(T::RowsAtCompileTime) == 1 && int(U::ColsAtCompileTime) == 1)
      .                        |  // FIXME | instead of || to please GCC 4.4.0 stupid warning "suggest parentheses around &&".
      .                           // revert to || as soon as not needed anymore.
      .                      (int(T::ColsAtCompileTime) == 1 && int(U::RowsAtCompileTime) == 1))
      .  >
      .  struct dot_nocheck
      .  {
      .    typedef typename scalar_product_traits<typename traits<T>::Scalar,typename traits<U>::Scalar>::ReturnType ResScalar;
143,995    static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)
      .    {
374,387      return a.template binaryExpr<scalar_conj_product_op<typename traits<T>::Scalar,typename traits<U>::Scalar> >(b).sum();
9,238,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10500x)
 86,397    }
      .  };
      .  
      .  template<typename T, typename U>
      .  struct dot_nocheck<T, U, true>
      .  {
      .    typedef typename scalar_product_traits<typename traits<T>::Scalar,typename traits<U>::Scalar>::ReturnType ResScalar;
      .    static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)
      .    {
-- line 43 ----------------------------------------
-- line 55 ----------------------------------------
      .    * (sesquilinear) dot product, conjugate-linear in the first variable and linear in the
      .    * second variable.
      .    *
      .    * \sa squaredNorm(), norm()
      .    */
      .  template<typename Derived>
      .  template<typename OtherDerived>
      .  typename internal::scalar_product_traits<typename internal::traits<Derived>::Scalar,typename internal::traits<OtherDerived>::Scalar>::ReturnType
172,794  MatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const
      .  {
      .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
      .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(OtherDerived)
      .    EIGEN_STATIC_ASSERT_SAME_VECTOR_SIZE(Derived,OtherDerived)
      .    typedef internal::scalar_conj_product_op<Scalar,typename OtherDerived::Scalar> func;
      .    EIGEN_CHECK_BINARY_COMPATIBILIY(func,Scalar,typename OtherDerived::Scalar);
      .  
345,588    eigen_assert(size() == other.size());
770,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7000x)
      .  
172,794    return internal::dot_nocheck<Derived,OtherDerived>::run(*this, other);
9,315,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3500x)
143,995  }
      .  
      .  #ifdef EIGEN2_SUPPORT
      .  /** \returns the dot product of *this with other, with the Eigen2 convention that the dot product is linear in the first variable
      .    * (conjugating the second variable). Of course this only makes a difference in the complex case.
      .    *
      .    * This method is only available in EIGEN2_SUPPORT mode.
      .    *
      .    * \only_for_vectors
-- line 82 ----------------------------------------
-- line 105 ----------------------------------------
      .  
      .  /** \returns, for vectors, the squared \em l2 norm of \c *this, and for matrices the Frobenius norm.
      .    * In both cases, it consists in the sum of the square of all the matrix entries.
      .    * For vectors, this is also equals to the dot product of \c *this with itself.
      .    *
      .    * \sa dot(), norm()
      .    */
      .  template<typename Derived>
 32,100  EIGEN_STRONG_INLINE typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::squaredNorm() const
      .  {
112,350    return numext::real((*this).cwiseAbs2().sum());
7,141,174  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
 24,075  }
      .  
      .  /** \returns, for vectors, the \em l2 norm of \c *this, and for matrices the Frobenius norm.
      .    * In both cases, it consists in the square root of the sum of the square of all the matrix entries.
      .    * For vectors, this is also equals to the square root of the dot product of \c *this with itself.
      .    *
      .    * \sa dot(), squaredNorm()
      .    */
      .  template<typename Derived>
 25,240  inline typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::norm() const
      .  {
      .    using std::sqrt;
 44,170    return sqrt(squaredNorm());
11,431,805  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
 18,930  }
      .  
      .  /** \returns an expression of the quotient of *this by its own norm.
      .    *
      .    * \only_for_vectors
      .    *
      .    * \sa norm(), normalize()
      .    */
      .  template<typename Derived>
-- line 137 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/MatrixCwiseUnaryOps.h
--------------------------------------------------------------------------------
     Ir 

-- line 13 ----------------------------------------
      .  /** \returns an expression of the coefficient-wise absolute value of \c *this
      .    *
      .    * Example: \include MatrixBase_cwiseAbs.cpp
      .    * Output: \verbinclude MatrixBase_cwiseAbs.out
      .    *
      .    * \sa cwiseAbs2()
      .    */
      .  EIGEN_STRONG_INLINE const CwiseUnaryOp<internal::scalar_abs_op<Scalar>, const Derived>
104,400  cwiseAbs() const { return derived(); }
218,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5244x)
      .  
      .  /** \returns an expression of the coefficient-wise squared absolute value of \c *this
      .    *
      .    * Example: \include MatrixBase_cwiseAbs2.cpp
      .    * Output: \verbinclude MatrixBase_cwiseAbs2.out
      .    *
      .    * \sa cwiseAbs()
      .    */
      .  EIGEN_STRONG_INLINE const CwiseUnaryOp<internal::scalar_abs2_op<Scalar>, const Derived>
160,500  cwiseAbs2() const { return derived(); }
687,715  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
      .  
      .  /** \returns an expression of the coefficient-wise square root of *this.
      .    *
      .    * Example: \include MatrixBase_cwiseSqrt.cpp
      .    * Output: \verbinclude MatrixBase_cwiseSqrt.out
      .    *
      .    * \sa cwisePow(), cwiseSquare()
      .    */
-- line 39 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/QuadraticMonomial.cpp
--------------------------------------------------------------------------------
       Ir 

-- line 6 ----------------------------------------
        .  // H_{1,2:n} = (c_{2n+1}, ..., c_{3n-1})
        .  // H_{2,3:n} = (c_{3n}, ..., c_{4n-2})
        .  // H_{3,4:n} = (c_{4n-1}, ..., c_{5n-3})
        .  // ...
        .  
        .  //--------------------------------------------------------------------------------
        .  double QuadraticMonomial::evaluate_monomial( 
        .    int basis_number, std::vector<double> const &x ) 
2,980,368  {
  993,456    if ( basis_number == 0 )
   27,596      return 1e0;
2,897,580    else if ( basis_number >= 1 && basis_number <= dim )
  869,274      return x.at( basis_number-1 );
5,795,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (96586x)
3,863,440    else if ( basis_number >= dim+1 && basis_number <= 2*dim )
2,124,892      return pow( x.at( basis_number-dim-1 ), 2e0 ) / 2e0;
17,840,714  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (193172x)
        .    else {
1,738,548      basis_number -= 2*dim;
5,119,058      for ( int j = 1; j <= dim-1; j++ ) {
3,863,440        if ( basis_number <= dim-j ) 
6,084,918          return x.at( j-1 ) * x.at( basis_number-1+j );
34,770,960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (579516x)
2,897,580        basis_number -= dim-j;
        .      }
        .    }
  496,728    assert ( false );
        .    return 0.0;
1,490,184  }
        .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MapBase.h
--------------------------------------------------------------------------------
        Ir 

-- line 19 ----------------------------------------
         .  
         .  /** \class MapBase
         .    * \ingroup Core_Module
         .    *
         .    * \brief Base class for Map and Block expression with direct access
         .    *
         .    * \sa class Map, class Block
         .    */
20,383,632  template<typename Derived> class MapBase<Derived, ReadOnlyAccessors>
    27,256  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3407x)
         .    : public internal::dense_xpr_base<Derived>::type
         .  {
         .    public:
         .  
         .      typedef typename internal::dense_xpr_base<Derived>::type Base;
         .      enum {
         .        RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,
         .        ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,
-- line 35 ----------------------------------------
-- line 71 ----------------------------------------
         .      using Base::rowStride;
         .      using Base::colStride;
         .  
         .      // bug 217 - compile error on ICC 11.1
         .      using Base::operator=;
         .  
         .      typedef typename Base::CoeffReturnType CoeffReturnType;
         .  
27,020,565      inline Index rows() const { return m_rows.value(); }
   164,640  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (27440x)
 8,018,213      inline Index cols() const { return m_cols.value(); }
   192,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (24010x)
         .  
         .      /** Returns a pointer to the first coefficient of the matrix or vector.
         .        *
         .        * \note When addressing this data, make sure to honor the strides returned by innerStride() and outerStride().
         .        *
         .        * \sa innerStride(), outerStride()
         .        */
    36,015      inline const Scalar* data() const { return m_data; }
         .  
14,244,192      inline const Scalar& coeff(Index rowId, Index colId) const
         .      {
24,927,336        return m_data[colId * colStride() + rowId * rowStride()];
 4,312,156  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (91748x)
 8,902,620      }
         .  
 3,458,424      inline const Scalar& coeff(Index index) const
         .      {
         .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
 4,611,232        return m_data[index * innerStride()];
   156,586  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2654x)
 2,305,616      }
         .  
   830,888      inline const Scalar& coeffRef(Index rowId, Index colId) const
         .      {
 1,454,054        return this->m_data[colId * colStride() + rowId * rowStride()];
   166,060  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
   519,305      }
         .  
         .      inline const Scalar& coeffRef(Index index) const
         .      {
         .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
         .        return this->m_data[index * innerStride()];
         .      }
         .  
         .      template<int LoadMode>
   392,960      inline PacketScalar packet(Index rowId, Index colId) const
         .      {
         .        return internal::ploadt<PacketScalar, LoadMode>
   785,920                 (m_data + (colId * colStride() + rowId * rowStride()));
 5,796,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (147360x)
   245,600      }
         .  
         .      template<int LoadMode>
16,463,022      inline PacketScalar packet(Index index) const
         .      {
         .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
27,438,370        return internal::ploadt<PacketScalar, LoadMode>(m_data + index * innerStride());
   826,560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20160x)
10,975,348      }
         .  
         .      inline MapBase(PointerType dataPtr) : m_data(dataPtr), m_rows(RowsAtCompileTime), m_cols(ColsAtCompileTime)
         .      {
         .        EIGEN_STATIC_ASSERT_FIXED_SIZE(Derived)
         .        checkSanity();
         .      }
         .  
   256,476      inline MapBase(PointerType dataPtr, Index vecSize)
         .              : m_data(dataPtr),
         .                m_rows(RowsAtCompileTime == Dynamic ? vecSize : Index(RowsAtCompileTime)),
   726,682                m_cols(ColsAtCompileTime == Dynamic ? vecSize : Index(ColsAtCompileTime))
 3,852,968  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (117948x)
         .      {
         .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
   213,730        eigen_assert(vecSize >= 0);
         .        eigen_assert(dataPtr == 0 || SizeAtCompileTime == Dynamic || SizeAtCompileTime == vecSize);
   128,238        checkSanity();
   275,212  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39316x)
   128,238      }
         .  
 2,533,559      inline MapBase(PointerType dataPtr, Index nbRows, Index nbCols)
 6,514,866              : m_data(dataPtr), m_rows(nbRows), m_cols(nbCols)
   325,850  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10290x)
         .      {
 9,988,283        eigen_assert( (dataPtr == 0)
         .                || (   nbRows >= 0 && (RowsAtCompileTime == Dynamic || RowsAtCompileTime == nbRows)
         .                    && nbCols >= 0 && (ColsAtCompileTime == Dynamic || ColsAtCompileTime == nbCols)));
 1,085,811        checkSanity();
    24,010  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
 1,085,811      }
         .  
         .    protected:
         .  
 1,214,049      void checkSanity() const
         .      {
         .        EIGEN_STATIC_ASSERT(EIGEN_IMPLIES(internal::traits<Derived>::Flags&PacketAccessBit,
         .                                          internal::inner_stride_at_compile_time<Derived>::ret==1),
         .                            PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1);
         .        eigen_assert(EIGEN_IMPLIES(internal::traits<Derived>::Flags&AlignedBit, (size_t(m_data) % 16) == 0)
         .                     && "data is not aligned");
 1,214,049      }
         .  
         .      PointerType m_data;
         .      const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;
         .      const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;
         .  };
         .  
 4,864,327  template<typename Derived> class MapBase<Derived, WriteAccessors>
 3,823,281  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (115857x)
         .    : public MapBase<Derived, ReadOnlyAccessors>
         .  {
         .    public:
         .  
         .      typedef MapBase<Derived, ReadOnlyAccessors> Base;
         .  
         .      typedef typename Base::Scalar Scalar;
         .      typedef typename Base::PacketScalar PacketScalar;
-- line 176 ----------------------------------------
-- line 190 ----------------------------------------
         .      using Base::colStride;
         .  
         .      typedef typename internal::conditional<
         .                      internal::is_lvalue<Derived>::value,
         .                      Scalar,
         .                      const Scalar
         .                    >::type ScalarWithConstIfNotLvalue;
         .  
   184,884      inline const Scalar* data() const { return this->m_data; }
    24,283      inline ScalarWithConstIfNotLvalue* data() { return this->m_data; } // no const-cast here so non-const-correct code will give a compile error
         .  
   940,408      inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)
         .      {
 1,645,714        return this->m_data[col * colStride() + row * rowStride()];
   293,664  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6992x)
   587,755      }
         .  
 3,916,152      inline ScalarWithConstIfNotLvalue& coeffRef(Index index)
         .      {
         .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
 5,221,536        return this->m_data[index * innerStride()];
   124,172  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3356x)
 2,610,768      }
         .  
         .      template<int StoreMode>
   442,080      inline void writePacket(Index row, Index col, const PacketScalar& val)
         .      {
   196,480        internal::pstoret<Scalar, PacketScalar, StoreMode>
 1,473,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (49120x)
   687,680                 (this->m_data + (col * colStride() + row * rowStride()), val);
 4,126,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (98240x)
   294,720      }
         .  
         .      template<int StoreMode>
 9,864,302      inline void writePacket(Index index, const PacketScalar& val)
         .      {
         .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
 5,636,744        internal::pstoret<Scalar, PacketScalar, StoreMode>
36,028,770  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1200959x)
11,273,488                  (this->m_data + index * innerStride(), val);
70,856,581  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1200959x)
 7,045,930      }
         .  
         .      explicit inline MapBase(PointerType dataPtr) : Base(dataPtr) {}
   641,190      inline MapBase(PointerType dataPtr, Index vecSize) : Base(dataPtr, vecSize) {}
   480,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
 3,593,568      inline MapBase(PointerType dataPtr, Index nbRows, Index nbCols) : Base(dataPtr, nbRows, nbCols) {}
    92,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
         .  
     9,540      Derived& operator=(const MapBase& other)
         .      {
     9,540        Base::Base::operator=(other);
 8,957,758  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
     5,724        return derived();
    12,236  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
     3,816      }
         .  
         .      using Base::Base::operator=;
         .  };
         .  
         .  #undef EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS
         .  
         .  } // end namespace Eigen
         .  
-- line 243 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/MinimumFrobeniusNormModel.cpp
--------------------------------------------------------------------------------
       Ir 

        .  #include "MinimumFrobeniusNormModel.hpp"
        .  #include <iostream>
        .  
        .  //--------------------------------------------------------------------------------
        6  MinimumFrobeniusNormModel::MinimumFrobeniusNormModel ( 
        .                             BasisForMinimumFrobeniusNormModel &basis_input) :
       12                             SurrogateModelBaseClass ( basis_input )
      145  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        .  {
        9    model_gradient.resize( basis_input.dimension ( ) );
    1,439  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        5  }
        .  //--------------------------------------------------------------------------------
        .  
        .  //--------------------------------------------------------------------------------
        .  std::vector<double> &MinimumFrobeniusNormModel::gradient (
        .    std::vector<double> const &x ) 
   24,682  {
        .   // basis->compute_basis_gradients ( x );
   95,202    scale( function_values.at(0), basis->gradient(x,0), model_gradient );
  211,560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3526x)
277,021,164  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::gradient(std::vector<double, std::allocator<double> > const&, int) (3526x)
3,638,832  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::scale(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (3526x)
  365,774    for (int i = 1; i < size; i++)
1,682,696      add( function_values.at(i), basis->gradient(x,i), model_gradient );
60,519,032  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::add(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (58024x)
94,985,288  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::gradient(std::vector<double, std::allocator<double> > const&, int) (58024x)
3,481,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (58024x)
    7,052    return model_gradient;
   17,630  }
        .  //--------------------------------------------------------------------------------
        .  
        .  //--------------------------------------------------------------------------------
        .  double MinimumFrobeniusNormModel::evaluate (
        .    std::vector<double> const &x ) 
   18,140  {
   72,560    return dot_product( function_values, basis->evaluate( x ) );
9,437,725  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::dot_product(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (3628x)
213,407,179  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&) (3628x)
   10,884  }
        .  //--------------------------------------------------------------------------------
        .  
        .  //--------------------------------------------------------------------------------
        .  void MinimumFrobeniusNormModel::set_function_values( 
        .    std::vector<double> const &values, std::vector<double> const &noise,
        .    std::vector<int> const &surrogate_nodes_index )
    1,320  { 
      990    size = surrogate_nodes_index.size();
    2,310  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (165x)
    1,320    function_values.resize( size );
   46,088  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (165x)
   17,625    for (int i = 0; i < size; i++)
   61,600      function_values.at(i) = values.at( surrogate_nodes_index[i] );
  369,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
      165    return;
      679  }
      134  => ../src/MinimumFrobeniusNormModel.cpp:__static_initialization_and_destruction_0(int, int) (1x)
        .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/MyBlackBoxFunction.cpp
--------------------------------------------------------------------------------
       Ir 

        .  #include "BlackBoxBaseClass.hpp"
        .  #include <math.h>
        .  #include <iostream>
        .  #include <random>
        .  
        .  //      std::random_device rd;
        .        int randSeed = 25041981;//rd();
        3        std::mt19937 gen (randSeed);  
   46,780  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) (1x)
        4        std::uniform_real_distribution<double> dis(-1,1);
       32  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long) (1x)
        .  
        .  
       19  class MyBlackBoxFunction : public BlackBoxBaseClass {
       11  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        .      int nbs = 1000;
        .      double sample;
        .      double noise_loc = 0e0;
        .    public:
      400      void evaluate( std::vector<double> const &x, std::vector<double> &vals, 
        .                     std::vector<double> &noise, void *data) override {
        .  
      280        if ( x.size() == 4 ) {
      560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
        .          vals.at(0) = pow(x.at(0),2e0)+pow(x.at(1),2e0)+2e0* pow(x.at(2),2e0)+
        .                       pow(x.at(3),2e0)-5e0*x.at(0)-5e0*x.at(1)-21e0
        .                       *x.at(2)+7e0*x.at(3);
        .          vals.at(1) = -(-pow(x.at(0),2e0)-pow(x.at(1),2e0)-pow(x.at(2),2e0)-
        .                        pow(x.at(3),2e0)-x.at(0)+x.at(1)-x.at(2)+x.at(3)+8e0);
        .          vals.at(2) = -(-pow(x.at(0),2e0)-2e0*pow(x.at(1),2e0)-pow(x.at(2),2e0)-
        .                        2e0*pow(x.at(3),2e0) +x.at(0)+x.at(3)+10e0);
        .          vals.at(3) = -(-2e0*pow(x.at(0),2e0) -pow(x.at(1),2e0)-pow(x.at(2),2e0)-
        .                        2e0*x.at(0)+x.at(1)+x.at(3)+5e0);
        .        }
        .  
      280        if ( vals.size() == 3) {
      560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
        .          vals.at(0) = pow(x.at(0)-2e0,2e0)+pow(x.at(1)-1e0,2e0);
        .          vals.at(1) = -(-pow(x.at(0),2e0)+x.at(1));
        .          vals.at(2) = -(x.at(0)-pow(x.at(1),2e0));
        .        }
        .  
      280        if ( vals.size() == 1 )
      560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
        .          vals.at(0) = pow( 1e0 - x.at(0), 2e0 ) + 1e0*pow( x.at(1) - x.at(0)*x.at(0), 2e0 );
        .  
      280        if ( x.size() == 7 ) {
      560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
      440          double V1 = 2e0*pow(x.at(0),2e0);   
   29,263  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (80x)
      440          double V2 = pow(x.at(1),2e0);
    6,723  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (80x)
    2,040          vals.at(0) = pow((x.at(0)-10e0), 2e0) + 5e0*pow((x.at(1)-12e0),2e0)+pow(x.at(2),4e0)
   27,270  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (280x)
    2,080               +3e0*pow((x.at(3)-11e0),2e0)+10e0*pow(x.at(4),6e0)+7e0*pow(x.at(5),2e0)
   23,066  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (240x)
    2,040               +pow(x.at(6),4e0)-4e0*x.at(5)*x.at(6)-10e0*x.at(5)-8e0*x.at(6) ;
   16,013  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (240x)
    2,480          vals.at(1) = -(-V1-3e0*pow(V2,2e0)-x.at(2)-4e0*pow(x.at(3),2e0)-5e0*x.at(4)+127e0);
   18,246  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (240x)
    2,360          vals.at(2) = -(-7e0*x.at(0)-3e0*x.at(1)-10e0*pow(x.at(2),2e0)- x.at(3)+x.at(4)+282e0);
   19,241  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (280x)
    1,760          vals.at(3) = -(-23e0*x.at(0)-V2-6e0*pow(x.at(5),2e0) +8e0*x.at(6)+196e0);
   13,613  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200x)
    2,400          vals.at(4) = -(-2e0*V1-V2+3e0*x.at(0)*x.at(1) -2e0*pow(x.at(2),2e0)-5e0*x.at(5)+11e0*x.at(6));
   19,241  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (280x)
        .        } 
        .  
        .  
    2,600        for (int j = 0; j < vals.size(); j++ ) {
    3,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (240x)
      600          noise_loc = 0e0;
    1,600          noise.at(j) = 0e0;
   12,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200x)
1,201,000          for ( int i = 0; i < nbs; i++ ) {
1,200,000            sample = dis(gen);
94,648,341  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200000x)
2,800,000            noise.at( j ) += sample*sample;
12,000,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200000x)
1,400,000            noise_loc += sample;
        .          }
    3,400          vals.at( j ) += noise_loc / ((double)nbs);
   12,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200x)
    8,000          noise.at( j ) = 2e0*sqrt( noise.at(j) / ((double) nbs-1)) / sqrt((double) nbs);
   47,095  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (800x)
        .        }
        .  
        .  //    std::cout << vals << std::endl;
        .  //    std::cout << noise << std::endl << std::endl;
        .  
       40      return;
      200    }
        .  
        .  
        .    void evaluate( std::vector<double> const &x, std::vector<double> &vals, 
        .                     void *data) override {
        .  
        .        if ( vals.size() == 3) {
        .          vals.at(0) = pow(x.at(0)-2e0,2e0)+pow(x.at(1)-1e0,2e0);
        .          vals.at(1) = -(-pow(x.at(0),2e0)+x.at(1));
-- line 78 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h
--------------------------------------------------------------------------------
        Ir 

-- line 47 ----------------------------------------
         .  {
         .    public:
         .  
         .      typedef typename internal::dense_xpr_base<SelfCwiseBinaryOp>::type Base;
         .      EIGEN_DENSE_PUBLIC_INTERFACE(SelfCwiseBinaryOp)
         .  
         .      typedef typename internal::packet_traits<Scalar>::type Packet;
         .  
 2,197,962      inline SelfCwiseBinaryOp(Lhs& xpr, const BinaryOp& func = BinaryOp()) : m_matrix(xpr), m_functor(func) {}
   250,390  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
         .  
 2,442,180      inline Index rows() const { return m_matrix.rows(); }
    96,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
 2,442,180      inline Index cols() const { return m_matrix.cols(); }
 1,284,332  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (91738x)
       660      inline Index outerStride() const { return m_matrix.outerStride(); }
       528  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
         .      inline Index innerStride() const { return m_matrix.innerStride(); }
         .      inline const Scalar* data() const { return m_matrix.data(); }
         .  
         .      // note that this function is needed by assign to correctly align loads/stores
         .      // TODO make Assign use .data()
       396      inline Scalar& coeffRef(Index row, Index col)
         .      {
         .        EIGEN_STATIC_ASSERT_LVALUE(Lhs)
       660        return m_matrix.const_cast_derived().coeffRef(row, col);
     7,854  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (132x)
       132      }
         .      inline const Scalar& coeffRef(Index row, Index col) const
         .      {
         .        return m_matrix.coeffRef(row, col);
         .      }
         .  
         .      // note that this function is needed by assign to correctly align loads/stores
         .      // TODO make Assign use .data()
   575,915      inline Scalar& coeffRef(Index index)
         .      {
         .        EIGEN_STATIC_ASSERT_LVALUE(Lhs)
 1,036,647        return m_matrix.const_cast_derived().coeffRef(index);
 3,898,865  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (91738x)
   230,366      }
         .      inline const Scalar& coeffRef(Index index) const
         .      {
         .        return m_matrix.const_cast_derived().coeffRef(index);
         .      }
         .  
         .      template<typename OtherDerived>
     3,920      void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)
         .      {
     2,240        OtherDerived& _other = other.const_cast_derived();
     3,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
         .        eigen_internal_assert(row >= 0 && row < rows()
         .                           && col >= 0 && col < cols());
     5,040        Scalar& tmp = m_matrix.coeffRef(row,col);
    62,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
    10,080        tmp = m_functor(tmp, _other.coeff(row,col));
    25,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
     1,680      }
         .  
         .      template<typename OtherDerived>
 1,518,786      void copyCoeff(Index index, const DenseBase<OtherDerived>& other)
         .      {
 1,012,524        OtherDerived& _other = other.const_cast_derived();
   166,530  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (23790x)
         .        eigen_internal_assert(index >= 0 && index < m_matrix.size());
 2,025,048        Scalar& tmp = m_matrix.coeffRef(index);
 1,855,620  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (23790x)
 4,151,493        tmp = m_functor(tmp, _other.coeff(index));
 5,543,070  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (47580x)
   759,393      }
         .  
         .      template<typename OtherDerived, int StoreMode, int LoadMode>
         .      void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)
         .      {
         .        OtherDerived& _other = other.const_cast_derived();
         .        eigen_internal_assert(row >= 0 && row < rows()
         .                          && col >= 0 && col < cols());
         .        m_matrix.template writePacket<StoreMode>(row, col,
         .          m_functor.packetOp(m_matrix.template packet<StoreMode>(row, col),_other.template packet<LoadMode>(row, col)) );
         .      }
         .  
         .      template<typename OtherDerived, int StoreMode, int LoadMode>
 7,492,512      void copyPacket(Index index, const DenseBase<OtherDerived>& other)
         .      {
 4,995,008        OtherDerived& _other = other.const_cast_derived();
 2,805,908  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (400844x)
         .        eigen_internal_assert(index >= 0 && index < m_matrix.size());
37,462,560        m_matrix.template writePacket<StoreMode>(index,
221,666,732  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1603376x)
         .          m_functor.packetOp(m_matrix.template packet<StoreMode>(index),_other.template packet<LoadMode>(index)) );
 3,746,256      }
         .  
         .      // reimplement lazyAssign to handle complex *= real
         .      // see CwiseBinaryOp ctor for details
         .      template<typename RhsDerived>
   732,654      EIGEN_STRONG_INLINE SelfCwiseBinaryOp& lazyAssign(const DenseBase<RhsDerived>& rhs)
         .      {
         .        EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Lhs,RhsDerived)
         .        EIGEN_CHECK_BINARY_COMPATIBILIY(BinaryOp,typename Lhs::Scalar,typename RhsDerived::Scalar);
         .        
         .      #ifdef EIGEN_DEBUG_ASSIGN
         .        internal::assign_traits<SelfCwiseBinaryOp, RhsDerived>::debug();
         .      #endif
 2,930,616        eigen_assert(rows() == rhs.rows() && cols() == rhs.cols());
   500,780  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (13720x)
   976,872        internal::assign_impl<SelfCwiseBinaryOp, RhsDerived>::run(*this,rhs.derived());
19,353,933  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
         .      #ifndef EIGEN_NO_DEBUG
   976,872        this->checkTransposeAliasing(rhs.derived());
   133,770  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
         .      #endif
   122,109        return *this;
   488,436      }
         .      
         .      // overloaded to honor evaluation of special matrices
         .      // maybe another solution would be to not use SelfCwiseBinaryOp
         .      // at first...
   610,545      SelfCwiseBinaryOp& operator=(const Rhs& _rhs)
         .      {
   610,545        typename internal::nested<Rhs>::type rhs(_rhs);
   627,690  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
   610,545        return Base::operator=(rhs);
20,365,783  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
   244,218      }
         .  
         .      Lhs& expression() const 
         .      { 
         .        return m_matrix;
         .      }
         .  
         .      const BinaryOp& functor() const 
         .      { 
-- line 159 ----------------------------------------
-- line 164 ----------------------------------------
         .      Lhs& m_matrix;
         .      const BinaryOp& m_functor;
         .  
         .    private:
         .      SelfCwiseBinaryOp& operator=(const SelfCwiseBinaryOp&);
         .  };
         .  
         .  template<typename Derived>
       396  inline Derived& DenseBase<Derived>::operator*=(const Scalar& other)
         .  {
         .    typedef typename Derived::PlainObject PlainObject;
       792    SelfCwiseBinaryOp<internal::scalar_product_op<Scalar>, Derived, typename PlainObject::ConstantReturnType> tmp(derived());
     6,996  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (198x)
     1,254    tmp = PlainObject::Constant(rows(),cols(),other);
   251,060  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (264x)
       198    return derived();
       462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
       264  }
         .  
         .  template<typename Derived>
         .  inline Derived& DenseBase<Derived>::operator/=(const Scalar& other)
         .  {
         .    typedef typename internal::conditional<NumTraits<Scalar>::IsInteger,
         .                                          internal::scalar_quotient_op<Scalar>,
         .                                          internal::scalar_product_op<Scalar> >::type BinOp;
         .    typedef typename Derived::PlainObject PlainObject;
-- line 186 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/TriangularSolverVector.h
--------------------------------------------------------------------------------
       Ir 

-- line 82 ----------------------------------------
        .  
        .  // forward and backward substitution, column-major, rhs is a vector
        .  template<typename LhsScalar, typename RhsScalar, typename Index, int Mode, bool Conjugate>
        .  struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, ColMajor>
        .  {
        .    enum {
        .      IsLower = ((Mode&Lower)==Lower)
        .    };
   59,022    static void run(Index size, const LhsScalar* _lhs, Index lhsStride, RhsScalar* rhs)
        .    {
        .      typedef Map<const Matrix<LhsScalar,Dynamic,Dynamic,ColMajor>, 0, OuterStride<> > LhsMap;
   85,254      const LhsMap lhs(_lhs,size,size,OuterStride<>(lhsStride));
1,314,756  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7428x)
        .      typename internal::conditional<Conjugate,
        .                                     const CwiseUnaryOp<typename internal::scalar_conjugate_op<LhsScalar>,LhsMap>,
        .                                     const LhsMap&
   13,116                                    >::type cjLhs(lhs);
        .      static const Index PanelWidth = EIGEN_TUNE_TRIANGULAR_PANEL_WIDTH;
        .  
   62,736      for(Index pi=IsLower ? 0 : size;
        .          IsLower ? pi<size : pi>0;
        .          IsLower ? pi+=PanelWidth : pi-=PanelWidth)
        .      {
   62,736        Index actualPanelWidth = (std::min)(IsLower ? size - pi : pi, PanelWidth);
   51,996  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3714x)
   15,960        Index startBlock = IsLower ? pi : pi-actualPanelWidth;
   17,700        Index endBlock = IsLower ? pi + actualPanelWidth : 0;
        .  
  255,602        for(Index k=0; k<actualPanelWidth; ++k)
        .        {
  183,496          Index i = IsLower ? pi+k : pi-k-1;
        .          if(!(Mode & UnitDiag))
  825,732            rhs[i] /= cjLhs.coeff(i,i);
3,171,756  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (25998x)
        .  
  183,496          Index r = actualPanelWidth - k - 1; // remaining size
  137,622          Index s = IsLower ? i+1 : i-r;
   91,748          if (r>0)
1,494,008            Map<Matrix<RhsScalar,Dynamic,1> >(rhs+s,r) -= rhs[i] * cjLhs.col(i).segment(s,r);
89,971,650  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (133704x)
        .        }
   16,830        Index r = IsLower ? size - endBlock : startBlock; // remaining size
   13,116        if (r > 0)
        .        {
        .          // let's directly call the low level product function because:
        .          // 1 - it is faster to compile
        .          // 2 - it is slighlty faster at runtime
        .          general_matrix_vector_product<Index,LhsScalar,ColMajor,Conjugate,RhsScalar,false>::run(
        .              r, actualPanelWidth,
        .              &lhs.coeffRef(endBlock,startBlock), lhsStride,
        .              rhs+startBlock, 1,
        .              rhs+endBlock, 1, RhsScalar(-1));
        .        }
        .      }
   39,348    }
        .  };
        .  
        .  } // end namespace internal
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_TRIANGULAR_SOLVER_VECTOR_H

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/ImprovePoisedness.cpp
--------------------------------------------------------------------------------
    Ir 

     .  #include "ImprovePoisedness.hpp"
     .  #include <fstream>
     .  
     .  //--------------------------------------------------------------------------------
    10  ImprovePoisedness::ImprovePoisedness ( BasisForSurrogateModelBaseClass &B,
     .                                         double poisedness_threshold,
     .                                         int m, double &rad, int verbose ) :
     .                                         ImprovePoisednessBaseClass (
     .                                         poisedness_threshold, B ),
     .                                         QuadraticMinimization ( B.dimension() ),
    59                                         max_nb_nodes ( m )
49,379  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/QuadraticMinimization.cpp:QuadraticMinimization::QuadraticMinimization(int) (1x)
 1,042  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11x)
     .  { 
     6      dim = B.dimension ( );
     8  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     3      delta = &rad;
     .     
     .      //allocate memory for auxiliary variables in compute_poisedness_constant
     8      q1.resize ( dim );
   585  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     8      q2.resize ( dim );
   421  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     8      q1vec.resize ( dim );
 1,267  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     8      q2vec.resize ( dim );
 1,273  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     8      q.resize ( dim );
   421  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     8      basis_gradient.resize ( dim );
   421  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
    11      basis_hessian.resize ( dim, dim );
   484  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     .  
     8      tmp_node.resize ( dim );  
   421  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     .  
     4      if ( verbose > 2 ) print_output = true;
     .      else print_output = false;
     .  
     5  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  int ImprovePoisedness::replace_node ( int reference_node, 
     .                                        BlackboxData const &evaluations,
     .                                        std::vector<double> const &new_node ) 
   144  {
   126    nb_nodes = evaluations.surrogate_nodes_index.size( );
   252  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
    54    maxvalue = -1e0;  
   306    basis_values = basis->evaluate ( new_node );
28,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
27,918  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&) (18x)
     .  
 1,872    for (int i = 0; i < nb_nodes; i++) {
 8,019      if ( diff_norm( evaluations.nodes[ evaluations.surrogate_nodes_index[i]], 
 8,019  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (594x)
627,077  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (297x)
 1,782                      new_node) / (*delta) < 1e-6 ) {
     .        change_index = i;
     .        return change_index;
     .      }
 3,564      if ( evaluations.surrogate_nodes_index[ i ] != reference_node ) {
 3,564  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (297x)
 3,348        LK = fabs( basis_values.at(i) );
16,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (279x)
 6,138        norm = diff_norm( evaluations.nodes[ evaluations.surrogate_nodes_index[i]],
 7,533  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (558x)
576,283  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (279x)
 4,743                 evaluations.nodes[ evaluations.best_index ] ) / (*delta);
 4,185  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (279x)
 1,591        if ( norm <= 1e0 ) norm = 1e0;
 3,220        else               norm /= sqrt( (double) dim );
   690  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (230x)
 2,511        norm = pow( norm, 3e0 );
28,331  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (279x)
     .        //if (norm > 1e0) LK = LK * norm;
 1,953        LK *= norm;
 1,674        if ( LK > maxvalue ) {
   198          change_index = i;
   264          maxvalue = LK;
     .        }
     .      }
     .    }
     .  
    36    return change_index;
    72  }
     .  //--------------------------------------------------------------------------------
     .  
     .  
     .  //--------------------------------------------------------------------------------
     .  void ImprovePoisedness::improve_poisedness ( int reference_node, 
     .                                               BlackboxData &evaluations ) 
   105  {
     .    
   105    nb_nodes = evaluations.surrogate_nodes_index.size( );
   210  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
     .    //check quality of the geometrical distribution of the interpolation nodes
   255    std::vector<double> new_node( dim );
18,855  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (60x)
     .    
     .    //initialize all nodes to be not changed (changed_nodes_index = false)
    60    index_of_changed_nodes.clear( );
   795  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
     .  
    90    compute_poisedness_constant ( reference_node, new_node, evaluations );
641,229,299  => ../src/ImprovePoisedness.cpp:ImprovePoisedness::compute_poisedness_constant(int, std::vector<double, std::allocator<double> >&, BlackboxData&) (15x)
     .  	
   150    if ( print_output && poisedness_constant > threshold_for_poisedness_constant )
     .      std::cout << "  Performing model improvement:" << std::endl;
     .  
    15    int counter_max_improvement_steps = 0;
     .    int max_improvement_steps;
   180    max_improvement_steps = (int) ceil( sqrt( dim ) );
22,278  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30x)
    30    if ( max_improvement_steps < 2 ) max_improvement_steps = 2;
     .  
     .    //XXX
     .    //double tmpdelete; 
     .    //int intdelete;
     .  
    30    model_has_been_improved = false;
   105    while (poisedness_constant > threshold_for_poisedness_constant 
    30           && counter_max_improvement_steps < max_improvement_steps) {
     .  
     .      counter_max_improvement_steps++;
     .          
     .      if ( print_output )
     .        std::cout << "   Current poisedness value: " << poisedness_constant << std::endl; 
     .  		
     .    //  intdelete = evaluations.surrogate_nodes_index[ change_index ];
     .    //  tmpdelete = poisedness_constant;
-- line 105 ----------------------------------------
-- line 142 ----------------------------------------
     .  
     .  
     .      }
     .  */
     .  
     .    }
     .  
     .    //compute new basis for models of objective function and constraints
    60    if (model_has_been_improved && print_output )
     .      std::cout << "   Final poisedness value  : " <<  poisedness_constant << std::endl; 
     .  
    30    return;
    60  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  void ImprovePoisedness::compute_poisedness_constant ( int reference_node,
     .    std::vector<double> &new_node, BlackboxData &evaluations ) 
   135  {
     .    //initialize geometry value
    45    poisedness_constant     = -1e0;
     .  	
   105    nb_nodes = evaluations.surrogate_nodes_index.size ( );
   210  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
     .  
 1,653    for (int i = 0; i < nb_nodes; i++) {		
 3,171      if ( evaluations.surrogate_nodes_index[ i ] == reference_node ) continue; 
 3,156  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (263x)
     .      //compute norm-scaling of node i
     .      node_norm_scaling = 
 5,456        diff_norm( evaluations.nodes[ evaluations.surrogate_nodes_index[i] ],
515,514  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (248x)
 6,696  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
 4,216                   evaluations.nodes[ evaluations.best_index ] ) / (*delta);
 3,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (248x)
 1,312      if (node_norm_scaling <= 1e0) node_norm_scaling = 1e0;
     .      else {
 3,220        node_norm_scaling /= sqrt((double) dim);
   690  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (230x)
 2,070        node_norm_scaling = pow(node_norm_scaling, 3e0);
26,910  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (230x)
     .      }
     .          
     .      //compute gradient and hessian of the i-th basis function
 3,224      basis->get_mat_vec_representation( i, basis_gradient, basis_hessian );
1,543,304  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::get_mat_vec_representation(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) (248x)
     .  
     .      //compute candidate for argmax -l_i(x)
 2,480      minimize( q1, basis_gradient, basis_hessian );
322,924,070  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/QuadraticMinimization.cpp:QuadraticMinimization::minimize(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) (248x)
11,656      for ( int k = 0; k < dim; ++k )
64,232        q1vec.at(k) = q1(k)*(*delta) + evaluations.nodes[ evaluations.best_index ].at(k);
489,552  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6944x)
     .  		
 5,456      poisedness_constant_tmp1 = fabs( basis->evaluate ( q1vec, i ) ) * node_norm_scaling;			
3,931,072  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&, int) (248x)
     .  				
     .      //compute candidate for argmax l_i(x)
 2,976      basis_gradient = -basis_gradient;
508,152  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
 2,976      basis_hessian  = -basis_hessian;
1,912,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
 2,480      minimize ( q2, basis_gradient, basis_hessian ); 
304,701,744  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/QuadraticMinimization.cpp:QuadraticMinimization::minimize(Eigen::Matrix<double, -1, 1, 0, -1, 1>&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) (248x)
     .  
11,656      for ( int k=0; k< dim; ++k)
64,232        q2vec.at(k) = q2(k)*(*delta) +  evaluations.nodes[ evaluations.best_index ].at(k);
489,552  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6944x)
 5,456      poisedness_constant_tmp2 = fabs ( basis->evaluate ( q2vec, i ) ) * node_norm_scaling;
3,932,656  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&, int) (248x)
     .  
 1,606      if (poisedness_constant_tmp1 >= poisedness_constant_tmp2 && 
   236          poisedness_constant_tmp1 > poisedness_constant) {
    78        new_node = q1vec;
 7,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (13x)
    52        poisedness_constant = poisedness_constant_tmp1;
    52        change_index = i;
 1,788      } else if (poisedness_constant_tmp2 > poisedness_constant_tmp1 && 
   756                 poisedness_constant_tmp2 > poisedness_constant) {
   324        new_node = q2vec;
29,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (54x)
   216        poisedness_constant = poisedness_constant_tmp2;
   216        change_index = i;
     .      }
     .    }
     .  
   240    assert ( evaluations.best_index != evaluations.surrogate_nodes_index[change_index] );
   180  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
     .  
     .      	
    15    return;
    94  }
   134  => ../src/ImprovePoisedness.cpp:__static_initialization_and_destruction_0(int, int) (1x)
     .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/vector.tcc
--------------------------------------------------------------------------------
     Ir 

-- line 57 ----------------------------------------
      .  #define _VECTOR_TCC 1
      .  
      .  namespace std _GLIBCXX_VISIBILITY(default)
      .  {
      .  _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
      .  
      .    template<typename _Tp, typename _Alloc>
      .      void
     18      vector<_Tp, _Alloc>::
      .      reserve(size_type __n)
      .      {
     21        if (__n > this->max_size())
    144  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
      .  	__throw_length_error(__N("vector::reserve"));
     21        if (this->capacity() < __n)
     42  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
      .  	{
     12  	  const size_type __old_size = size();
     42  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     30  	  pointer __tmp = _M_allocate_and_copy(__n,
    144  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
      .  	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
     18  	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  1,848  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     21  	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    111  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     12  			_M_get_Tp_allocator());
     21  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     33  	  _M_deallocate(this->_M_impl._M_start,
     36  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
      .  			this->_M_impl._M_end_of_storage
     12  			- this->_M_impl._M_start);
      9  	  this->_M_impl._M_start = __tmp;
     18  	  this->_M_impl._M_finish = __tmp + __old_size;
     21  	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
      .  	}
     15      }
      .  
      .  #if __cplusplus >= 201103L
      .    template<typename _Tp, typename _Alloc>
      .      template<typename... _Args>
      .        void
    910        vector<_Tp, _Alloc>::
      .        emplace_back(_Args&&... __args)
      .        {
  1,092  	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
      .  	  {
    846  	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
  4,550  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (50x)
    564  				     std::forward<_Args>(__args)...);
    350  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (50x)
    705  	    ++this->_M_impl._M_finish;
      .  	  }
      .  	else
    328  	  _M_emplace_back_aux(std::forward<_Args>(__args)...);
 19,678  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (24x)
    687        }
      .  #endif
      .  
      .    template<typename _Tp, typename _Alloc>
      .      typename vector<_Tp, _Alloc>::iterator
      .      vector<_Tp, _Alloc>::
      .  #if __cplusplus >= 201103L
      .      insert(const_iterator __position, const value_type& __x)
      .  #else
-- line 110 ----------------------------------------
-- line 159 ----------------------------------------
      .  	    _GLIBCXX_MOVE3(__last, end(), __first);
      .  	  _M_erase_at_end(__first.base() + (end() - __last));
      .  	}
      .        return __first;
      .      }
      .  
      .    template<typename _Tp, typename _Alloc>
      .      vector<_Tp, _Alloc>&
 46,026      vector<_Tp, _Alloc>::
      .      operator=(const vector<_Tp, _Alloc>& __x)
      .      {
 15,342        if (&__x != this)
      .  	{
      .  #if __cplusplus >= 201103L
 15,342  	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 30,684  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5114x)
      .  	    {
      .  	      if (!_Alloc_traits::_S_always_equal()
      .  	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
      .  	        {
      .  		  // replacement allocator cannot free existing storage
      .  		  this->clear();
      .  		  _M_deallocate(this->_M_impl._M_start,
      .  				this->_M_impl._M_end_of_storage
-- line 181 ----------------------------------------
-- line 183 ----------------------------------------
      .  		  this->_M_impl._M_start = nullptr;
      .  		  this->_M_impl._M_finish = nullptr;
      .  		  this->_M_impl._M_end_of_storage = nullptr;
      .  		}
      .  	      std::__alloc_on_copy(_M_get_Tp_allocator(),
      .  				   __x._M_get_Tp_allocator());
      .  	    }
      .  #endif
 20,456  	  const size_type __xlen = __x.size();
 71,596  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5114x)
 35,798  	  if (__xlen > capacity())
 71,596  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5114x)
      .  	    {
    160  	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
  1,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
    120  						   __x.end());
 15,201  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
    140  	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
     80  			    _M_get_Tp_allocator());
    140  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
    220  	      _M_deallocate(this->_M_impl._M_start,
 10,197  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
      .  			    this->_M_impl._M_end_of_storage
     80  			    - this->_M_impl._M_start);
     60  	      this->_M_impl._M_start = __tmp;
    160  	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
      .  	    }
 35,658  	  else if (size() >= __xlen)
 71,316  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5094x)
      .  	    {
122,256  	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
2,078,352  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30564x)
 20,376  			    end(), _M_get_Tp_allocator());
 35,658  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5094x)
      .  	    }
      .  	  else
      .  	    {
      .  	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
      .  			this->_M_impl._M_start);
      .  	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
      .  					  __x._M_impl._M_finish,
      .  					  this->_M_impl._M_finish,
      .  					  _M_get_Tp_allocator());
      .  	    }
 35,798  	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
      .  	}
  5,114        return *this;
 35,798      }
      .  
      .    template<typename _Tp, typename _Alloc>
      .      void
      .      vector<_Tp, _Alloc>::
      .      _M_fill_assign(size_t __n, const value_type& __val)
      .      {
      .        if (__n > capacity())
      .  	{
-- line 229 ----------------------------------------
-- line 399 ----------------------------------------
      .  	  this->_M_impl._M_end_of_storage = __new_start + __len;
      .  	}
      .      }
      .  
      .  #if __cplusplus >= 201103L
      .    template<typename _Tp, typename _Alloc>
      .      template<typename... _Args>
      .        void
  1,452        vector<_Tp, _Alloc>::
      .        _M_emplace_back_aux(_Args&&... __args)
      .        {
      .  	const size_type __len =
  1,452  	  _M_check_len(size_type(1), "vector::_M_emplace_back_aux");
    925  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
  1,452  	pointer __new_start(this->_M_allocate(__len));
  1,776  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
    484  	pointer __new_finish(__new_start);
      .  	__try
      .  	  {
  2,969  	    _Alloc_traits::construct(this->_M_impl, __new_start + size(),
110,896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
    968  				     std::forward<_Args>(__args)...);
     28  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
    242  	    __new_finish = pointer();
      .  
    968  	    __new_finish
189,407  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
      .  	      = std::__uninitialized_move_if_noexcept_a
    968  	      (this->_M_impl._M_start, this->_M_impl._M_finish,
    968  	       __new_start, _M_get_Tp_allocator());
     28  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
      .  
    242  	    ++__new_finish;
      .  	  }
      .  	__catch(...)
      .  	  {
      .  	    if (!__new_finish)
      .  	      _Alloc_traits::destroy(this->_M_impl, __new_start + size());
      .  	    else
      .  	      std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
      .  	    _M_deallocate(__new_start, __len);
      .  	    __throw_exception_again;
      .  	  }
  1,694  	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 96,966  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
    968  		      _M_get_Tp_allocator());
     28  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
  2,851  	_M_deallocate(this->_M_impl._M_start,
  1,324  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
      .  		      this->_M_impl._M_end_of_storage
    968  		      - this->_M_impl._M_start);
    726  	this->_M_impl._M_start = __new_start;
    726  	this->_M_impl._M_finish = __new_finish;
  1,700  	this->_M_impl._M_end_of_storage = __new_start + __len;
  1,210        }
      .  #endif
      .  
      .    template<typename _Tp, typename _Alloc>
      .      void
      .      vector<_Tp, _Alloc>::
      .      _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
      .      {
      .        if (__n != 0)
-- line 452 ----------------------------------------
-- line 532 ----------------------------------------
      .  	      this->_M_impl._M_end_of_storage = __new_start + __len;
      .  	    }
      .  	}
      .      }
      .  
      .  #if __cplusplus >= 201103L
      .    template<typename _Tp, typename _Alloc>
      .      void
  1,056      vector<_Tp, _Alloc>::
      .      _M_default_append(size_type __n)
      .      {
    352        if (__n != 0)
      .  	{
  1,125  	  if (size_type(this->_M_impl._M_end_of_storage
    704  			- this->_M_impl._M_finish) >= __n)
      .  	    {
    224  	      this->_M_impl._M_finish =
    784  		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
  9,888  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (96x)
    448  						 __n, _M_get_Tp_allocator());
    672  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (96x)
      .  	    }
      .  	  else
      .  	    {
      .  	      const size_type __len =
    448  		_M_check_len(__n, "vector::_M_default_append");
 12,528  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
    256  	      const size_type __old_size = this->size();
    798  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
    384  	      pointer __new_start(this->_M_allocate(__len));
 22,725  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
    128  	      pointer __new_finish(__new_start);
      .  	      __try
      .  		{
    256  		  __new_finish
 18,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
      .  		    = std::__uninitialized_move_if_noexcept_a
    256  		    (this->_M_impl._M_start, this->_M_impl._M_finish,
    256  		     __new_start, _M_get_Tp_allocator());
    399  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
    384  		  __new_finish =
  8,023  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
      .  		    std::__uninitialized_default_n_a(__new_finish, __n,
    256  						     _M_get_Tp_allocator());
    399  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
      .  		}
      .  	      __catch(...)
      .  		{
      .  		  std::_Destroy(__new_start, __new_finish,
      .  				_M_get_Tp_allocator());
      .  		  _M_deallocate(__new_start, __len);
      .  		  __throw_exception_again;
      .  		}
    448  	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  2,109  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
    256  			    _M_get_Tp_allocator());
    399  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
    725  	      _M_deallocate(this->_M_impl._M_start,
  8,234  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (57x)
      .  			    this->_M_impl._M_end_of_storage
    256  			    - this->_M_impl._M_start);
    192  	      this->_M_impl._M_start = __new_start;
    192  	      this->_M_impl._M_finish = __new_finish;
    412  	      this->_M_impl._M_end_of_storage = __new_start + __len;
      .  	    }
      .  	}
  1,056      }
      .  
      .    template<typename _Tp, typename _Alloc>
      .      bool
      .      vector<_Tp, _Alloc>::
      .      _M_shrink_to_fit()
      .      {
      .        if (capacity() == size())
      .  	return false;
-- line 594 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/BasisForMinimumFrobeniusNormModel.cpp
--------------------------------------------------------------------------------
        Ir 

         .  #include "BasisForMinimumFrobeniusNormModel.hpp"
         .  #include <iostream>
         .  #include <iomanip>
         .  
         .  //--------------------------------------------------------------------------------
         7  BasisForMinimumFrobeniusNormModel::BasisForMinimumFrobeniusNormModel ( int dim_input,
         .                                                                         double &delta_input ) : 
         .                                     BasisForSurrogateModelBaseClass ( dim_input ),
        62                                     QuadraticMonomial ( dim_input ) 
       964  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14x)
         .  {
         2    clear_cache_values = true;
         2    clear_cache_gradients = true;
         5    cache_point_basis_values.resize( 0 );
        51  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         5    cache_point_basis_gradients.resize( 0 );
        51  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         7    scaled_node.resize( dim_input );
     1,267  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        11    nb_basis_functions = ( dim_input * ( dim_input + 3 ) + 2 ) / 2;
         2    nb_nodes = 0;
         3    delta = &delta_input;
         5  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
       198  void BasisForMinimumFrobeniusNormModel::set_nb_nodes( int nb_nodes_input ) {
       160    if ( nb_nodes == nb_nodes_input ) return;
        57    nb_nodes = nb_nodes_input;
       152    basis_values.resize ( nb_nodes );
     8,806  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19x)
       247    A_sysmat = Eigen::MatrixXd::Zero(nb_basis_functions + nb_nodes, 
     3,895  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19x)
       171                                     nb_basis_functions + nb_nodes);
 4,079,175  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19x)
     4,199    for (int i = 0; i < nb_basis_functions; i++)
     8,588      if (i > BasisForSurrogateModelBaseClass::dim) A_sysmat(i, i) = 1e0;
    92,568  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (532x)
       361    F_rhsmat = Eigen::MatrixXd::Zero(nb_basis_functions + nb_nodes, nb_nodes);
 1,364,555  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (38x)
     6,555    for (int i = 0; i < nb_nodes; i++) F_rhsmat(nb_basis_functions + i, i) = 1e0;
    56,202  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (323x)
       209    if ( nb_nodes > basis_coefficients.size ( ) ) {
       266  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19x)
       152      basis_gradients.resize( nb_nodes );
    23,750  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19x)
       327      for (int i = basis_coefficients.size ( ); i < nb_nodes; i++) {
       266  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19x)
       338        basis_gradients[i].resize( BasisForSurrogateModelBaseClass::dim );
    34,937  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (52x)
       546        basis_coefficients.push_back( Eigen::VectorXd::Zero( nb_basis_functions ) );
   404,355  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (104x)
       260        scaled_gradients.push_back ( 
    68,366  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (52x)
       286          Eigen::VectorXd::Zero ( BasisForSurrogateModelBaseClass::dim ) );
   155,724  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (52x)
       260        scaled_Hessians.push_back ( 
   151,384  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (52x)
       208          Eigen::MatrixXd::Zero ( BasisForSurrogateModelBaseClass::dim,
     5,330  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26x)
       156                                  BasisForSurrogateModelBaseClass::dim ) );
   338,432  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26x)
         .      }
         .    } else if ( nb_nodes < basis_coefficients.size ( ) ) {
         .      basis_coefficients.resize ( nb_nodes ); 
         .      basis_gradients.resize ( nb_nodes );
         .      scaled_gradients.resize ( nb_nodes );
         .      scaled_Hessians.resize ( nb_nodes );
         .    }
         .    //basis_values = Eigen::VectorXd::Zero( nb_nodes ); 
         .  
        19    return;
       132  }
         .  //--------------------------------------------------------------------------------
         .  
         .  
         .  //--------------------------------------------------------------------------------
         .  void BasisForMinimumFrobeniusNormModel::compute_basis_coefficients ( 
         .    BlackboxData const &evaluations ) 
       231  {
       297    set_nb_nodes ( evaluations.surrogate_nodes_index.size( ) );
 6,811,592  => ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::set_nb_nodes(int) (33x)
       462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
         .  
         .    // system matrix for computing coeffs of Lagrange interpolation models
     7,293    for (int i = 0; i < nb_basis_functions; i++) {    
   126,900      for (int j = 0; j < nb_nodes; j++) {
   201,600        rescale( 1e0 / (*delta), 
   302,400                 evaluations.nodes[ evaluations.surrogate_nodes_index[j] ], 
   544,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40320x)
   181,440                 evaluations.nodes[ evaluations.best_index ],
   302,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20160x)
    80,640                 scaled_node );
31,651,200  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::rescale(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (20160x)
   262,080        A_sysmat(i, j+nb_basis_functions) = 
 3,507,840  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20160x)
   201,600          evaluate_monomial( i, scaled_node );
 3,823,604  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/QuadraticMonomial.cpp:QuadraticMonomial::evaluate_monomial(int, std::vector<double, std::allocator<double> > const&) (20160x)
   544,320         A_sysmat(j+nb_basis_functions, i) = A_sysmat(i, j+nb_basis_functions);
 7,015,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40320x)
         .      }
         .    }    
         .  
         .    // solve for coefficients
       330    Eigen::VectorXd bestnode(BasisForSurrogateModelBaseClass::dim);
    36,528  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
     1,551    for(int k =0; k < BasisForSurrogateModelBaseClass::dim; ++k)
     5,082      bestnode(k) = evaluations.nodes[evaluations.best_index].at(k);
    51,282  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (693x)
       759    S_coeffsolve = A_sysmat.fullPivHouseholderQr().solve(F_rhsmat);
1,801,468,596  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (132x)
     3,525    for ( int i = 0; i < nb_nodes; i++ ) {
    19,600      basis_coefficients[i] = S_coeffsolve.block(0,0,nb_basis_functions, nb_nodes).col(i);  
 3,190,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2240x)
     2,800      compute_mat_vec_representation ( i );
12,076,960  => ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::compute_mat_vec_representation(int) (560x)
    14,000      tmp_vec = (scaled_Hessians[ i ] * bestnode ) / 
 4,194,838  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2240x)
     6,720                pow( *delta, 2e0 );   
 1,121,934  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
    14,560      basis_coefficients[i](0) = basis_coefficients[i](0) - 
   178,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2240x)
    11,200        (scaled_gradients[i].dot( bestnode )) / (*delta) +
 1,056,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
     6,720        5e-1*tmp_vec.dot(bestnode);
 1,049,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
    26,320      for ( int j = 0; j < BasisForSurrogateModelBaseClass::dim; j++ )
   172,480        basis_coefficients[i]( j+1 ) = scaled_gradients[i]( j ) / ( *delta ) - tmp_vec( j );
 1,822,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19600x)
     5,600      tmp_dbl = pow( *delta, 2e0 );
    63,565  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
    98,560      for ( int j = BasisForSurrogateModelBaseClass::dim+1; 
   178,640            j < basis_coefficients[i].size(); j++ )
 1,624,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (32480x)
   266,560        basis_coefficients[i](j) /= tmp_dbl;
 2,493,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (31360x)
         .    } 
         .    
        66    clear_cache_values = true;
        66    clear_cache_gradients = true;
         .  
        66    return;
       165  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void BasisForMinimumFrobeniusNormModel::compute_gradients ( 
         .   std::vector<double> const &x )
   430,850  {
         .  
   492,400    if ( cache_point_basis_gradients.size() > 0 ) {
   861,700  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (61550x)
 1,167,284      if ( diff_norm( cache_point_basis_gradients, x ) < 1e-20 &&
92,388,035  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (61549x)
   182,502           !clear_cache_gradients ) 
    60,832        return;
         .    }
         .  
    78,638    for (int m = 0; m < nb_nodes; m++) {
   587,876      for (int i = 0; i < BasisForSurrogateModelBaseClass::dim; i++) {
 2,451,568        basis_gradients[m].at(i) = basis_coefficients[m](i+1);
20,488,104  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (350224x)
 1,838,676        basis_gradients[m].at(i) += basis_coefficients[m](
 7,617,372  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (262668x)
   875,560                                 BasisForSurrogateModelBaseClass::dim+1+i) *
12,870,732  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (87556x)
   963,116                                 x.at(i);
 5,253,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (87556x)
   175,112        counter = 0;
 4,115,132        for (int j = 0; j < BasisForSurrogateModelBaseClass::dim; j++) {
15,322,300          for (int k = j+1; k < BasisForSurrogateModelBaseClass::dim; k++) {
 5,516,028            if (j == i) 
 5,516,028              basis_gradients[m].at(i) += basis_coefficients[m](
22,852,116  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (788004x)
 1,050,672                                       2*BasisForSurrogateModelBaseClass::dim+
 4,990,692                                       1+counter) * x.at(k);
54,372,276  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (525336x)
 5,516,028            if (k == i) 
 5,516,028              basis_gradients[m].at(i) += basis_coefficients[m](
22,852,116  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (788004x)
 1,050,672                                       2*BasisForSurrogateModelBaseClass::dim+
 4,990,692                                       1+counter) * x.at(j);
54,372,276  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (525336x)
 9,193,380            counter++;
         .          }
         .        }
         .      }
         .    }
         .  
     1,436    clear_cache_gradients = false;
     4,308    cache_point_basis_gradients = x;
   388,069  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
         .  
     1,436    return;
   307,750  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void BasisForMinimumFrobeniusNormModel::compute_mat_vec_representation ( int basis_number )
         .  // computes the representation m(x) = c + g.dot(x) + 0.5*x.dot(H*x) in scaled form
         .  // x_best = 0 and delta = 1;
     3,920  {
     1,120    counter = 0;
    26,320    for (int j = 0; j < BasisForSurrogateModelBaseClass::dim; j++) {
   109,760      scaled_gradients[basis_number](j) = basis_coefficients[ basis_number ]( j + 1 );
 1,246,560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15680x)
    90,160      scaled_Hessians[basis_number](j,j) = basis_coefficients[ basis_number ]
   787,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11760x)
    43,120                                           (j+1+BasisForSurrogateModelBaseClass::dim);
   576,240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3920x)
    98,000      for (int k = j+1; k < BasisForSurrogateModelBaseClass::dim; k++) {
   270,480        scaled_Hessians[basis_number](j,k) = basis_coefficients[ basis_number ]
 2,363,760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35280x)
   152,880                                             (2*BasisForSurrogateModelBaseClass::dim+1+counter);
 1,728,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11760x)
   270,480        scaled_Hessians[basis_number](k,j) = basis_coefficients[ basis_number ]
 2,363,760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35280x)
   152,880                                             (2*BasisForSurrogateModelBaseClass::dim+1+counter);
 1,728,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11760x)
    58,800        counter++;
         .      }
         .    }
         .    
       560    return;
     2,800  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void BasisForMinimumFrobeniusNormModel::get_mat_vec_representation ( int basis_number,
         .                                           Eigen::VectorXd &g, Eigen::MatrixXd &H )
         .  // returns the representation m(x) = c + g.dot(x) + 0.5*x.dot(H*x) in scaled form
         .  // x_best = 0 and delta = 1;
     1,736  {
     2,976    g = scaled_gradients [ basis_number ];
   354,144  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
     2,976    H = scaled_Hessians [ basis_number ];
 1,180,728  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
       248    return;
       496  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  std::vector<double> &BasisForMinimumFrobeniusNormModel::evaluate ( 
         .    std::vector<double> const &x ) 
    21,876  {  
    29,168    if ( cache_point_basis_values.size() > 0 ) {
    51,044  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3646x)
    67,065      if ( diff_norm ( cache_point_basis_values, x ) < 1e-20 &&
 5,887,897  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (3645x)
     8,748            !clear_cache_values ) 
     8,739        return basis_values;
         .    }
         .  
    80,117    for ( int i = 0; i < nb_nodes; i++ ) {
   114,678      basis_values.at( i ) = 0e0;
   764,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12742x)
 2,815,982      for ( int j = 0; j < nb_basis_functions; j++ ) {
16,054,920        basis_values.at( i ) += basis_coefficients[ i ]( j ) * evaluate_monomial ( j, x );
86,654,332  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/QuadraticMonomial.cpp:QuadraticMonomial::evaluate_monomial(int, std::vector<double, std::allocator<double> > const&) (458712x)
100,457,928  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1376136x)
         .      }
         .    }
         .  
     1,466    clear_cache_values = false;
     4,398    cache_point_basis_values = x;
   396,169  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (733x)
         .  
     1,466    return basis_values;
    14,584  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  double BasisForMinimumFrobeniusNormModel::evaluate (
         .    std::vector<double> const &x, int basis_number)
     3,472  { 
     3,968    if ( cache_point_basis_values.size() > 0 ) {
     6,944  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
     7,936      if ( diff_norm( cache_point_basis_values, x ) < 1e-20 &&
 1,030,152  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (496x)
         .           !clear_cache_values ) 
         .        return basis_values.at ( basis_number );
         .    }
       992    double basis_value = 0e0;
   109,616    for ( int j = 0; j < nb_basis_functions; j++ ) {
   249,984      basis_value += basis_coefficients[ basis_number ]( j ) * 
 2,839,104  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35712x)
   232,128                     evaluate_monomial ( j, x );
 3,375,960  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/QuadraticMonomial.cpp:QuadraticMonomial::evaluate_monomial(int, std::vector<double, std::allocator<double> > const&) (17856x)
         .    }
         .  
       992    return basis_value;
     2,480  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  std::vector<double> &BasisForMinimumFrobeniusNormModel::gradient (
         .    std::vector<double> const &x, int basis_number)
   369,300  { 
   307,750    compute_gradients ( x );
366,713,152  => ../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::compute_gradients(std::vector<double, std::allocator<double> > const&) (61550x)
         .  
   430,850    return basis_gradients.at( basis_number );
 4,062,300  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (61550x)
   123,119  }
       134  => ../src/BasisForMinimumFrobeniusNormModel.cpp:__static_initialization_and_destruction_0(int, int) (1x)
         .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_vector.h
--------------------------------------------------------------------------------
        Ir 

-- line 71 ----------------------------------------
         .    template<typename _Tp, typename _Alloc>
         .      struct _Vector_base
         .      {
         .        typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
         .          rebind<_Tp>::other _Tp_alloc_type;
         .        typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
         .         	pointer;
         .  
     9,400        struct _Vector_impl 
    16,380  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (910x)
         .        : public _Tp_alloc_type
         .        {
         .  	pointer _M_start;
         .  	pointer _M_finish;
         .  	pointer _M_end_of_storage;
         .  
       364  	_Vector_impl()
       819  	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
        54  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
       273  	{ }
         .  
     2,115  	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
     4,653  	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
        22  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     1,269  	{ }
         .  
         .  #if __cplusplus >= 201103L
     2,130  	_Vector_impl(_Tp_alloc_type&& __a) noexcept
     1,704  	: _Tp_alloc_type(std::move(__a)),
     2,982  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (426x)
     4,260  	  _M_start(), _M_finish(), _M_end_of_storage()
     9,372  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (426x)
     1,278  	{ }
         .  #endif
         .  
     2,290  	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
         .  	{
     2,290  	  std::swap(_M_start, __x._M_start);
    21,526  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (458x)
     3,206  	  std::swap(_M_finish, __x._M_finish);
    21,526  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (458x)
     3,206  	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
    21,526  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (458x)
     1,374  	}
         .        };
         .        
         .      public:
         .        typedef _Alloc allocator_type;
         .  
         .        _Tp_alloc_type&
    23,235        _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    23,235        { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
         .  
         .        const _Tp_alloc_type&
     2,946        _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
     2,946        { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
         .  
         .        allocator_type
        80        get_allocator() const _GLIBCXX_NOEXCEPT
       176        { return allocator_type(_M_get_Tp_allocator()); }
       464  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (32x)
         .  
       364        _Vector_base()
       546        : _M_impl() { }
        70  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
         .  
        80        _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
       128        : _M_impl(__a) { }
       672  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16x)
         .  
         .        _Vector_base(size_t __n)
         .        : _M_impl()
         .        { _M_create_storage(__n); }
         .  
     2,849        _Vector_base(size_t __n, const allocator_type& __a)
     2,035        : _M_impl(__a)
       504  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
     4,070        { _M_create_storage(__n); }
       504  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
         .  
         .  #if __cplusplus >= 201103L
         .        _Vector_base(_Tp_alloc_type&& __a) noexcept
         .        : _M_impl(std::move(__a)) { }
         .  
     2,130        _Vector_base(_Vector_base&& __x) noexcept
     4,260        : _M_impl(std::move(__x._M_get_Tp_allocator()))
    28,116  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1278x)
     3,408        { this->_M_impl._M_swap_data(__x._M_impl); }
    71,994  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (426x)
         .  
         .        _Vector_base(_Vector_base&& __x, const allocator_type& __a)
         .        : _M_impl(__a)
         .        {
         .  	if (__x.get_allocator() == __a)
         .  	  this->_M_impl._M_swap_data(__x._M_impl);
         .  	else
         .  	  {
         .  	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
         .  	    _M_create_storage(__n);
         .  	  }
         .        }
         .  #endif
         .  
     3,760        ~_Vector_base() _GLIBCXX_NOEXCEPT
    10,412        { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
       647  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     9,400  		      - this->_M_impl._M_start); }
        29  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         .  
         .      public:
         .        _Vector_impl _M_impl;
         .  
         .        pointer
     3,680        _M_allocate(size_t __n)
         .        {
         .  	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
     5,683  	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   225,837  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (596x)
     1,472        }
         .  
         .        void
     7,614        _M_deallocate(pointer __p, size_t __n)
         .        {
         .  	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
     2,538  	if (__p)
     4,170  	  _Tr::deallocate(_M_impl, __p, __n);
     3,964  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     3,807        }
         .  
         .      private:
         .        void
     2,035        _M_create_storage(size_t __n)
         .        {
     3,256  	this->_M_impl._M_start = this->_M_allocate(__n);
       686  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     1,628  	this->_M_impl._M_finish = this->_M_impl._M_start;
     2,885  	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
     1,221        }
         .      };
         .  
         .  
         .    /**
         .     *  @brief A standard container which offers fixed time access to
         .     *  individual elements in any order.
         .     *
         .     *  @ingroup sequences
-- line 196 ----------------------------------------
-- line 245 ----------------------------------------
         .  
         .      public:
         .        // [23.2.4.1] construct/copy/destroy
         .        // (assign() and get_allocator() are also listed in this section)
         .  
         .        /**
         .         *  @brief  Creates a %vector with no elements.
         .         */
       364        vector()
         .  #if __cplusplus >= 201103L
         .        noexcept(is_nothrow_default_constructible<_Alloc>::value)
         .  #endif
       546        : _Base() { }
        46  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         .  
         .        /**
         .         *  @brief  Creates a %vector with no elements.
         .         *  @param  __a  An allocator object.
         .         */
         .        explicit
        80        vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
       128        : _Base(__a) { }
       896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16x)
         .  
         .  #if __cplusplus >= 201103L
         .        /**
         .         *  @brief  Creates a %vector with default constructed elements.
         .         *  @param  __n  The number of elements to initially create.
         .         *  @param  __a  An allocator.
         .         *
         .         *  This constructor fills the %vector with @a __n default
         .         *  constructed elements.
         .         */
         .        explicit
       392        vector(size_type __n, const allocator_type& __a = allocator_type())
       336        : _Base(__n, __a)
       779  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
       560        { _M_default_initialize(__n); }
       155  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         .  
         .        /**
         .         *  @brief  Creates a %vector with copies of an exemplar element.
         .         *  @param  __n  The number of elements to initially create.
         .         *  @param  __value  An element to copy.
         .         *  @param  __a  An allocator.
         .         *
         .         *  This constructor fills the %vector with @a __n copies of @a __value.
-- line 287 ----------------------------------------
-- line 310 ----------------------------------------
         .         *  @brief  %Vector copy constructor.
         .         *  @param  __x  A %vector of identical element and allocator types.
         .         *
         .         *  The newly-created %vector uses a copy of the allocation
         .         *  object used by @a __x.  All the elements of @a __x are copied,
         .         *  but any extra memory in
         .         *  @a __x (for fast expansion) will not be copied.
         .         */
     2,808        vector(const vector& __x)
         .        : _Base(__x.size(),
     7,020          _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
     2,652  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (60x)
       702        { this->_M_impl._M_finish =
     5,265  	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
     1,752  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36x)
         .  				      this->_M_impl._M_start,
     1,404  				      _M_get_Tp_allocator());
        84  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
     2,457        }
         .  
         .  #if __cplusplus >= 201103L
         .        /**
         .         *  @brief  %Vector move constructor.
         .         *  @param  __x  A %vector of identical element and allocator types.
         .         *
         .         *  The newly-created %vector contains the exact contents of @a __x.
         .         *  The contents of @a __x are a valid, but unspecified %vector.
         .         */
     2,130        vector(vector&& __x) noexcept
     4,686        : _Base(std::move(__x)) { }
   113,316  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (852x)
         .  
         .        /// Copy constructor with alternative allocator
         .        vector(const vector& __x, const allocator_type& __a)
         .        : _Base(__x.size(), __a)
         .        { this->_M_impl._M_finish =
         .  	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
         .  				      this->_M_impl._M_start,
         .  				      _M_get_Tp_allocator());
-- line 344 ----------------------------------------
-- line 415 ----------------------------------------
         .  #endif
         .  
         .        /**
         .         *  The dtor only erases the elements, and note that if the
         .         *  elements themselves are pointers, the pointed-to memory is
         .         *  not touched in any way.  Managing the pointer is the user's
         .         *  responsibility.
         .         */
     3,760        ~vector() _GLIBCXX_NOEXCEPT
     6,580        { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   247,788  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     9,400  		      _M_get_Tp_allocator()); }
       718  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
         .  
         .        /**
         .         *  @brief  %Vector assignment operator.
         .         *  @param  __x  A %vector of identical element and allocator types.
         .         *
         .         *  All the elements of @a __x are copied, but any extra memory in
         .         *  @a __x (for fast expansion) will not be copied.  Unlike the
         .         *  copy constructor, the allocator object is not copied.
-- line 433 ----------------------------------------
-- line 440 ----------------------------------------
         .         *  @brief  %Vector move assignment operator.
         .         *  @param  __x  A %vector of identical element and allocator types.
         .         *
         .         *  The contents of @a __x are moved into this %vector (without copying,
         .         *  if the allocators permit it).
         .         *  @a __x is a valid, but unspecified %vector.
         .         */
         .        vector&
        96        operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
         .        {
         .          constexpr bool __move_storage =
         .            _Alloc_traits::_S_propagate_on_move_assign()
        16            || _Alloc_traits::_S_always_equal();
       176          _M_move_assign(std::move(__x),
    11,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (32x)
         .                         integral_constant<bool, __move_storage>());
        16  	return *this;
        48        }
         .  
         .        /**
         .         *  @brief  %Vector list assignment operator.
         .         *  @param  __l  An initializer_list.
         .         *
         .         *  This function fills a %vector with copies of the elements in the
         .         *  initializer list @a __l.
         .         *
-- line 464 ----------------------------------------
-- line 539 ----------------------------------------
         .  
         .        // iterators
         .        /**
         .         *  Returns a read/write iterator that points to the first
         .         *  element in the %vector.  Iteration is done in ordinary
         .         *  element order.
         .         */
         .        iterator
    20,376        begin() _GLIBCXX_NOEXCEPT
    40,752        { return iterator(this->_M_impl._M_start); }
    61,128  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5094x)
         .  
         .        /**
         .         *  Returns a read-only (constant) iterator that points to the
         .         *  first element in the %vector.  Iteration is done in ordinary
         .         *  element order.
         .         */
         .        const_iterator
    51,188        begin() const _GLIBCXX_NOEXCEPT
   140,767        { return const_iterator(this->_M_impl._M_start); }
       144  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
         .  
         .        /**
         .         *  Returns a read/write iterator that points one past the last
         .         *  element in the %vector.  Iteration is done in ordinary
         .         *  element order.
         .         */
         .        iterator
    20,512        end() _GLIBCXX_NOEXCEPT
    46,152        { return iterator(this->_M_impl._M_finish); }
    61,536  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5128x)
         .  
         .        /**
         .         *  Returns a read-only (constant) iterator that points one past
         .         *  the last element in the %vector.  Iteration is done in
         .         *  ordinary element order.
         .         */
         .        const_iterator
    51,188        end() const _GLIBCXX_NOEXCEPT
   140,767        { return const_iterator(this->_M_impl._M_finish); }
       144  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
         .  
         .        /**
         .         *  Returns a read/write reverse iterator that points to the
         .         *  last element in the %vector.  Iteration is done in reverse
         .         *  element order.
         .         */
         .        reverse_iterator
         .        rbegin() _GLIBCXX_NOEXCEPT
-- line 583 ----------------------------------------
-- line 646 ----------------------------------------
         .        const_reverse_iterator
         .        crend() const noexcept
         .        { return const_reverse_iterator(begin()); }
         .  #endif
         .  
         .        // [23.2.4.2] capacity
         .        /**  Returns the number of elements in the %vector.  */
         .        size_type
27,294,774        size() const _GLIBCXX_NOEXCEPT
91,171,358        { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
         .  
         .        /**  Returns the size() of the largest possible %vector.  */
         .        size_type
     2,460        max_size() const _GLIBCXX_NOEXCEPT
     4,305        { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
       864  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (48x)
         .  
         .  #if __cplusplus >= 201103L
         .        /**
         .         *  @brief  Resizes the %vector to the specified number of elements.
         .         *  @param  __new_size  Number of elements the %vector should contain.
         .         *
         .         *  This function will %resize the %vector to the specified
         .         *  number of elements.  If the number is smaller than the
         .         *  %vector's current size the %vector is truncated, otherwise
         .         *  default constructed elements are appended.
         .         */
         .        void
     1,245        resize(size_type __new_size)
         .        {
     1,743  	if (__new_size > size())
       408  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (24x)
     1,936  	  _M_default_append(__new_size - size());
    29,041  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (46x)
       511  	else if (__new_size < size())
        17  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         .  	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
       923        }
         .  
         .        /**
         .         *  @brief  Resizes the %vector to the specified number of elements.
         .         *  @param  __new_size  Number of elements the %vector should contain.
         .         *  @param  __x  Data with which new elements should be populated.
         .         *
         .         *  This function will %resize the %vector to the specified
         .         *  number of elements.  If the number is smaller than the
-- line 687 ----------------------------------------
-- line 726 ----------------------------------------
         .        { _M_shrink_to_fit(); }
         .  #endif
         .  
         .        /**
         .         *  Returns the total number of elements that the %vector can
         .         *  hold before needing to allocate more memory.
         .         */
         .        size_type
    15,351        capacity() const _GLIBCXX_NOEXCEPT
         .        { return size_type(this->_M_impl._M_end_of_storage
    51,170  			 - this->_M_impl._M_start); }
         .  
         .        /**
         .         *  Returns true if the %vector is empty.  (Thus begin() would
         .         *  equal end().)
         .         */
         .        bool
    29,328        empty() const _GLIBCXX_NOEXCEPT
   109,980        { return begin() == end(); }
   667,212  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (21996x)
         .  
         .        /**
         .         *  @brief  Attempt to preallocate enough memory for specified number of
         .         *          elements.
         .         *  @param  __n  Number of elements required.
         .         *  @throw  std::length_error  If @a n exceeds @c max_size().
         .         *
         .         *  This function attempts to reserve enough memory for the
-- line 752 ----------------------------------------
-- line 771 ----------------------------------------
         .         *  @return  Read/write reference to data.
         .         *
         .         *  This operator allows for easy, array-style, data access.
         .         *  Note that data access with this operator is unchecked and
         .         *  out_of_range lookups are not defined. (For checked lookups
         .         *  see at().)
         .         */
         .        reference
21,655,192        operator[](size_type __n) _GLIBCXX_NOEXCEPT
40,892,302        { return *(this->_M_impl._M_start + __n); }
         .  
         .        /**
         .         *  @brief  Subscript access to the data contained in the %vector.
         .         *  @param __n The index of the element for which data should be
         .         *  accessed.
         .         *  @return  Read-only (constant) reference to data.
         .         *
         .         *  This operator allows for easy, array-style, data access.
         .         *  Note that data access with this operator is unchecked and
         .         *  out_of_range lookups are not defined. (For checked lookups
         .         *  see at().)
         .         */
         .        const_reference
22,665,100        operator[](size_type __n) const _GLIBCXX_NOEXCEPT
39,788,383        { return *(this->_M_impl._M_start + __n); }
         .  
         .      protected:
         .        /// Safety check used only from at().
         .        void
43,781,655        _M_range_check(size_type __n) const
         .        {
61,294,317  	if (__n >= this->size())
        56  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
         .  	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
         .  				       "(which is %zu) >= this->size() "
         .  				       "(which is %zu)"),
         .  				   __n, this->size());
26,268,993        }
         .  
         .      public:
         .        /**
         .         *  @brief  Provides access to the data contained in the %vector.
         .         *  @param __n The index of the element for which data should be
         .         *  accessed.
         .         *  @return  Read/write reference to data.
         .         *  @throw  std::out_of_range  If @a __n is an invalid index.
         .         *
         .         *  This function provides for safer data access.  The parameter
         .         *  is first checked that it is in the range of the vector.  The
         .         *  function throws out_of_range if the check fails.
         .         */
         .        reference
15,776,540        at(size_type __n)
         .        {
15,776,540  	_M_range_check(__n);
 2,031,150  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (61550x)
15,776,540  	return (*this)[__n]; 
   923,250  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (61550x)
 6,310,616        }
         .  
         .        /**
         .         *  @brief  Provides access to the data contained in the %vector.
         .         *  @param __n The index of the element for which data should be
         .         *  accessed.
         .         *  @return  Read-only (constant) reference to data.
         .         *  @throw  std::out_of_range  If @a __n is an invalid index.
         .         *
         .         *  This function provides for safer data access.  The parameter
         .         *  is first checked that it is in the range of the vector.  The
         .         *  function throws out_of_range if the check fails.
         .         */
         .        const_reference
28,005,115        at(size_type __n) const
         .        {
28,005,115  	_M_range_check(__n);
168,028,170  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5600939x)
28,005,115  	return (*this)[__n];
67,211,268  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5600939x)
11,202,046        }
         .  
         .        /**
         .         *  Returns a read/write reference to the data at the first
         .         *  element of the %vector.
         .         */
         .        reference
         .        front() _GLIBCXX_NOEXCEPT
         .        { return *begin(); }
-- line 852 ----------------------------------------
-- line 859 ----------------------------------------
         .        front() const _GLIBCXX_NOEXCEPT
         .        { return *begin(); }
         .  
         .        /**
         .         *  Returns a read/write reference to the data at the last
         .         *  element of the %vector.
         .         */
         .        reference
       136        back() _GLIBCXX_NOEXCEPT
       476        { return *(end() - 1); }
     2,278  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (102x)
         .        
         .        /**
         .         *  Returns a read-only (constant) reference to the data at the
         .         *  last element of the %vector.
         .         */
         .        const_reference
         .        back() const _GLIBCXX_NOEXCEPT
         .        { return *(end() - 1); }
-- line 876 ----------------------------------------
-- line 905 ----------------------------------------
         .         *
         .         *  This is a typical stack operation.  The function creates an
         .         *  element at the end of the %vector and assigns the given data
         .         *  to it.  Due to the nature of a %vector this operation can be
         .         *  done in constant time if the %vector has preallocated space
         .         *  available.
         .         */
         .        void
     5,555        push_back(const value_type& __x)
         .        {
     6,666  	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
         .  	  {
     6,370  	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    59,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (660x)
         .  	                             __x);
     4,550  	    ++this->_M_impl._M_finish;
         .  	  }
         .  	else
         .  #if __cplusplus >= 201103L
     1,005  	  _M_emplace_back_aux(__x);
   237,750  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (140x)
         .  #else
         .  	  _M_insert_aux(end(), __x);
         .  #endif
     4,243        }
         .  
         .  #if __cplusplus >= 201103L
         .        void
       910        push_back(value_type&& __x)
     2,002        { emplace_back(std::move(__x)); }
    26,838  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (124x)
         .  
         .        template<typename... _Args>
         .          void
         .          emplace_back(_Args&&... __args);
         .  #endif
         .  
         .        /**
         .         *  @brief  Removes last element.
-- line 940 ----------------------------------------
-- line 1203 ----------------------------------------
         .  
         .        /**
         .         *  Erases all the elements.  Note that this function only erases the
         .         *  elements, and that if the elements themselves are pointers, the
         .         *  pointed-to memory is not touched in any way.  Managing the pointer is
         .         *  the user's responsibility.
         .         */
         .        void
        48        clear() _GLIBCXX_NOEXCEPT
       108        { _M_erase_at_end(this->_M_impl._M_start); }
        66  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         .  
         .      protected:
         .        /**
         .         *  Memory expansion handler.  Uses the member allocation function to
         .         *  obtain @a n bytes of memory, and then copies [first,last) into it.
         .         */
         .        template<typename _ForwardIterator>
         .          pointer
       184          _M_allocate_and_copy(size_type __n,
         .  			     _ForwardIterator __first, _ForwardIterator __last)
         .          {
       138  	  pointer __result = this->_M_allocate(__n);
     1,002  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
         .  	  __try
         .  	    {
       115  	      std::__uninitialized_copy_a(__first, __last, __result,
       735  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
        92  					  _M_get_Tp_allocator());
        21  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
        46  	      return __result;
         .  	    }
         .  	  __catch(...)
         .  	    {
         .  	      _M_deallocate(__result, __n);
         .  	      __throw_exception_again;
         .  	    }
        92  	}
         .  
         .  
         .        // Internal constructor functions follow.
         .  
         .        // Called by the range constructor to implement [23.1.1]/9
         .  
         .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
         .        // 438. Ambiguity in the "do the right thing" clause
-- line 1244 ----------------------------------------
-- line 1300 ----------------------------------------
         .  	this->_M_impl._M_finish =
         .  	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
         .  					_M_get_Tp_allocator());
         .        }
         .  
         .  #if __cplusplus >= 201103L
         .        // Called by the vector(n) constructor.
         .        void
       280        _M_default_initialize(size_type __n)
         .        {
       112  	this->_M_impl._M_finish =
       392  	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
     7,041  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (55x)
       224  					   _M_get_Tp_allocator());
       385  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (55x)
       168        }
         .  #endif
         .  
         .        // Internal assign functions follow.  The *_aux functions do the actual
         .        // assignment work for the range versions.
         .  
         .        // Called by the range assign to implement [23.1.1]/9
         .  
         .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
-- line 1321 ----------------------------------------
-- line 1414 ----------------------------------------
         .  
         .        template<typename... _Args>
         .          void
         .          _M_emplace_back_aux(_Args&&... __args);
         .  #endif
         .  
         .        // Called by the latter.
         .        size_type
     2,142        _M_check_len(size_type __n, const char* __s) const
         .        {
     4,284  	if (max_size() - size() < __n)
       390  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
         .  	  __throw_length_error(__N(__s));
         .  
     4,896  	const size_type __len = size() + std::max(size(), __n);
       289  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
     3,366  	return (__len < size() || __len > max_size()) ? max_size() : __len;
       390  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
     1,224        }
         .  
         .        // Internal erase functions follow.
         .  
         .        // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
         .        // _M_assign_aux.
         .        void
        60        _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
         .        {
       120  	std::_Destroy(__pos, this->_M_impl._M_finish, _M_get_Tp_allocator());
        44  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        36  	this->_M_impl._M_finish = __pos;
        36        }
         .  
         .        iterator
         .        _M_erase(iterator __position);
         .  
         .        iterator
         .        _M_erase(iterator __first, iterator __last);
         .  
         .  #if __cplusplus >= 201103L
         .      private:
         .        // Constant-time move assignment when source object's memory can be
         .        // moved, either because the source's allocator will move too
         .        // or because the allocators are equal.
         .        void
        96        _M_move_assign(vector&& __x, std::true_type) noexcept
         .        {
       256  	vector __tmp(get_allocator());
     4,272  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (64x)
        80  	this->_M_impl._M_swap_data(__tmp._M_impl);
     2,704  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16x)
        80  	this->_M_impl._M_swap_data(__x._M_impl);
     2,704  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16x)
       160  	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
       800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (48x)
        80        }
         .  
         .        // Do move assignment when it might not be possible to move source
         .        // object's memory, resulting in a linear-time operation.
         .        void
         .        _M_move_assign(vector&& __x, std::false_type)
         .        {
         .  	if (__x._M_get_Tp_allocator() == this->_M_get_Tp_allocator())
         .  	  _M_move_assign(std::move(__x), std::true_type());
-- line 1468 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Swap.h
--------------------------------------------------------------------------------
       Ir 

-- line 28 ----------------------------------------
        .    : public internal::dense_xpr_base<SwapWrapper<ExpressionType> >::type
        .  {
        .    public:
        .  
        .      typedef typename internal::dense_xpr_base<SwapWrapper>::type Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE(SwapWrapper)
        .      typedef typename internal::packet_traits<Scalar>::type Packet;
        .  
   69,146      inline SwapWrapper(ExpressionType& xpr) : m_expression(xpr) {}
  127,604  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
        .  
   98,780      inline Index rows() const { return m_expression.rows(); }
   60,952  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3208x)
   98,780      inline Index cols() const { return m_expression.cols(); }
   60,306  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3174x)
        .      inline Index outerStride() const { return m_expression.outerStride(); }
        .      inline Index innerStride() const { return m_expression.innerStride(); }
        .      
        .      typedef typename internal::conditional<
        .                         internal::is_lvalue<ExpressionType>::value,
        .                         Scalar,
        .                         const Scalar
        .                       >::type ScalarWithConstIfNotLvalue;
-- line 47 ----------------------------------------
-- line 49 ----------------------------------------
        .      inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }
        .      inline const Scalar* data() const { return m_expression.data(); }
        .  
        .      inline Scalar& coeffRef(Index rowId, Index colId)
        .      {
        .        return m_expression.const_cast_derived().coeffRef(rowId, colId);
        .      }
        .  
    8,020      inline Scalar& coeffRef(Index index)
        .      {
   14,436        return m_expression.const_cast_derived().coeffRef(index);
  101,052  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3208x)
    3,208      }
        .  
        .      inline Scalar& coeffRef(Index rowId, Index colId) const
        .      {
        .        return m_expression.coeffRef(rowId, colId);
        .      }
        .  
        .      inline Scalar& coeffRef(Index index) const
        .      {
-- line 68 ----------------------------------------
-- line 76 ----------------------------------------
        .        eigen_internal_assert(rowId >= 0 && rowId < rows()
        .                           && colId >= 0 && colId < cols());
        .        Scalar tmp = m_expression.coeff(rowId, colId);
        .        m_expression.coeffRef(rowId, colId) = _other.coeff(rowId, colId);
        .        _other.coeffRef(rowId, colId) = tmp;
        .      }
        .  
        .      template<typename OtherDerived>
  540,309      void copyCoeff(Index index, const DenseBase<OtherDerived>& other)
        .      {
  308,748        OtherDerived& _other = other.const_cast_derived();
  213,906  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30558x)
        .        eigen_internal_assert(index >= 0 && index < m_expression.size());
  694,683        Scalar tmp = m_expression.coeff(index);
3,239,148  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30558x)
1,157,805        m_expression.coeffRef(index) = _other.coeff(index);
6,478,296  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (61116x)
  540,309        _other.coeffRef(index) = tmp;
3,239,148  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30558x)
  385,935      }
        .  
        .      template<typename OtherDerived, int StoreMode, int LoadMode>
        .      void copyPacket(Index rowId, Index colId, const DenseBase<OtherDerived>& other)
        .      {
        .        OtherDerived& _other = other.const_cast_derived();
        .        eigen_internal_assert(rowId >= 0 && rowId < rows()
        .                          && colId >= 0 && colId < cols());
        .        Packet tmp = m_expression.template packet<StoreMode>(rowId, colId);
        .        m_expression.template writePacket<StoreMode>(rowId, colId,
        .          _other.template packet<LoadMode>(rowId, colId)
        .        );
        .        _other.template writePacket<LoadMode>(rowId, colId, tmp);
        .      }
        .  
        .      template<typename OtherDerived, int StoreMode, int LoadMode>
  254,916      void copyPacket(Index index, const DenseBase<OtherDerived>& other)
        .      {
  169,944        OtherDerived& _other = other.const_cast_derived();
  297,402  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42486x)
        .        eigen_internal_assert(index >= 0 && index < m_expression.size());
  339,888        Packet tmp = m_expression.template packet<StoreMode>(index);
3,356,394  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42486x)
  594,804        m_expression.template writePacket<StoreMode>(index,
7,817,424  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (84972x)
        .          _other.template packet<LoadMode>(index)
        .        );
  254,916        _other.template writePacket<LoadMode>(index, tmp);
4,673,460  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42486x)
  127,458      }
        .  
        .      ExpressionType& expression() const { return m_expression; }
        .  
        .    protected:
        .      ExpressionType& m_expression;
        .  };
        .  
        .  } // end namespace Eigen
-- line 124 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_iterator_base_types.h
--------------------------------------------------------------------------------
    Ir 

-- line 110 ----------------------------------------
     .     *  can inherit from this class to save some work.  The typedefs are then
     .     *  used in specializations and overloading.
     .     *
     .     *  In particular, there are no default implementations of requirements
     .     *  such as @c operator++ and the like.  (How could there be?)
     .    */
     .    template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
     .             typename _Pointer = _Tp*, typename _Reference = _Tp&>
    12      struct iterator
     .      {
     .        /// One of the @link iterator_tags tag types@endlink.
     .        typedef _Category  iterator_category;
     .        /// The type "pointed to" by the iterator.
     .        typedef _Tp        value_type;
     .        /// Distance between iterators is represented as this type.
     .        typedef _Distance  difference_type;
     .        /// This type represents a pointer-to-value_type.
-- line 126 ----------------------------------------
-- line 207 ----------------------------------------
     .    //@}
     .  
     .    // If _Iterator has a base returns it otherwise _Iterator is returned
     .    // untouched
     .    template<typename _Iterator, bool _HasBase>
     .      struct _Iter_base
     .      {
     .        typedef _Iterator iterator_type;
36,465        static iterator_type _S_base(_Iterator __it)
36,465        { return __it; }
     .      };
     .  
     .    template<typename _Iterator>
     .      struct _Iter_base<_Iterator, true>
     .      {
     .        typedef typename _Iterator::iterator_type iterator_type;
65,816        static iterator_type _S_base(_Iterator __it)
98,270        { return __it.base(); }
35,658  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5094x)
     .      };
     .  
     .  #if __cplusplus >= 201103L
     .    template<typename _InIter>
     .      using _RequireInputIter = typename
     .        enable_if<is_convertible<typename
     .  		iterator_traits<_InIter>::iterator_category,
     .  			       input_iterator_tag>::value>::type;
-- line 232 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/TriangularSolverMatrix.h
--------------------------------------------------------------------------------
     Ir 

-- line 40 ----------------------------------------
      .  {
      .    static EIGEN_DONT_INLINE void run(
      .      Index size, Index otherSize,
      .      const Scalar* _tri, Index triStride,
      .      Scalar* _other, Index otherStride,
      .      level3_blocking<Scalar,Scalar>& blocking);
      .  };
      .  template <typename Scalar, typename Index, int Mode, bool Conjugate, int TriStorageOrder>
    330  EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>::run(
      .      Index size, Index otherSize,
      .      const Scalar* _tri, Index triStride,
      .      Scalar* _other, Index otherStride,
      .      level3_blocking<Scalar,Scalar>& blocking)
      .    {
     66      Index cols = otherSize;
    198      const_blas_data_mapper<Scalar, Index, TriStorageOrder> tri(_tri,triStride);
    495  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    198      blas_data_mapper<Scalar, Index, ColMajor> other(_other,otherStride);
    495  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .  
      .      typedef gebp_traits<Scalar,Scalar> Traits;
      .      enum {
      .        SmallPanelWidth   = EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),
      .        IsLower = (Mode&Lower) == Lower
      .      };
      .  
     99      Index kc = blocking.kc();                   // cache block size along the K direction
    264  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    330      Index mc = (std::min)(size,blocking.mc());  // cache block size along the M direction
    726  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
      .  
    132      std::size_t sizeA = kc*mc;
     99      std::size_t sizeB = kc*cols;
    165      std::size_t sizeW = kc*Traits::WorkSpaceFactor;
      .  
    825      ei_declare_aligned_stack_constructed_variable(Scalar, blockA, sizeA, blocking.blockA());
 29,489  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (165x)
    825      ei_declare_aligned_stack_constructed_variable(Scalar, blockB, sizeB, blocking.blockB());
 29,235  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (165x)
    759      ei_declare_aligned_stack_constructed_variable(Scalar, blockW, sizeW, blocking.blockW());
 27,703  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (165x)
      .  
      .      conj_if<Conjugate> conj;
      .      gebp_kernel<Scalar, Scalar, Index, Traits::mr, Traits::nr, Conjugate, false> gebp_kernel;
      .      gemm_pack_lhs<Scalar, Index, Traits::mr, Traits::LhsProgress, TriStorageOrder> pack_lhs;
      .      gemm_pack_rhs<Scalar, Index, Traits::nr, ColMajor, false, true> pack_rhs;
      .  
      .      // the goal here is to subdivise the Rhs panels such that we keep some cache
      .      // coherence when accessing the rhs elements
      .      std::ptrdiff_t l1, l2;
    165      manage_caching_sizes(GetAction, &l1, &l2);
    858  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    396      Index subcols = cols>0 ? l2/(4 * sizeof(Scalar) * otherStride) : 0;
    495      subcols = std::max<Index>((subcols/Traits::nr)*Traits::nr, Traits::nr);
    462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .  
    297      for(Index k2=IsLower ? 0 : size;
      .          IsLower ? k2<size : k2>0;
      .          IsLower ? k2+=kc : k2-=kc)
      .      {
    297        const Index actual_kc = (std::min)(IsLower ? size-k2 : k2, kc);
    462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .  
      .        // We have selected and packed a big horizontal panel R1 of rhs. Let B be the packed copy of this panel,
      .        // and R2 the remaining part of rhs. The corresponding vertical panel of lhs is split into
      .        // A11 (the triangular part) and A21 the remaining rectangular part.
      .        // Then the high level algorithm is:
      .        //  - B = R1                    => general block copy (done during the next step)
      .        //  - R1 = A11^-1 B             => tricky part
      .        //  - update B from the new R1  => actually this has to be performed continuously during the above step
      .        //  - R2 -= A21 * B             => GEPP
      .  
      .        // The tricky part: compute R1 = A11^-1 B while updating B from R1
      .        // The idea is to split A11 into multiple small vertical panels.
      .        // Each panel can be split into a small triangular part T1k which is processed without optimization,
      .        // and the remaining small part T2k which is processed using gebp with appropriate block strides
    330        for(Index j2=0; j2<cols; j2+=subcols)
      .        {
    330          Index actual_cols = (std::min)(cols-j2,subcols);
    462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .          // for each small vertical panels [T1k^T, T2k^T]^T of lhs
  2,382          for (Index k1=0; k1<actual_kc; k1+=SmallPanelWidth)
      .          {
  4,950            Index actualPanelWidth = std::min<Index>(actual_kc-k1, SmallPanelWidth);
  6,717  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (450x)
      .            // tr solve
 10,540            for (Index k=0; k<actualPanelWidth; ++k)
      .            {
      .              // TODO write a small kernel handling this (can be shared with trsv)
  8,740              Index i  = IsLower ? k2+k1+k : k2-k1-k-1;
  5,244              Index s  = IsLower ? k2+k1 : i+1;
  6,992              Index rs = actualPanelWidth - k - 1; // remaining size
      .  
 26,220              Scalar a = (Mode & UnitDiag) ? Scalar(1) : Scalar(1)/conj(tri(i,i));
 45,448  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
226,142              for (Index j=j2; j<j2+actual_cols; ++j)
      .              {
      .                if (TriStorageOrder==RowMajor)
      .                {
      .                  Scalar b(0);
      .                  const Scalar* l = &tri(i,s);
      .                  Scalar* r = &other(s,j);
      .                  for (Index i3=0; i3<k; ++i3)
      .                    b += conj(l[i3]) * r[i3];
      .  
      .                  other(i,j) = (other(i,j) - b)*a;
      .                }
      .                else
      .                {
 91,674                  Index s = IsLower ? i+1 : i-rs;
336,138                  Scalar b = (other(i,j) *= a);
550,044  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30558x)
213,906                  Scalar* r = &other(s,j);
550,044  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30558x)
213,906                  const Scalar* l = &tri(s,i);
550,044  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30558x)
347,902                  for (Index i3=0;i3<rs;++i3)
992,948                    r[i3] -= b * conj(l[i3]);
361,072  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (45134x)
      .                }
      .              }
      .            }
      .  
  1,800            Index lengthTarget = actual_kc-k1-actualPanelWidth;
  1,800            Index startBlock   = IsLower ? k2+k1 : k2-k1-actualPanelWidth;
    900            Index blockBOffset = IsLower ? k1 : lengthTarget;
      .  
      .            // update the respective rows of B from other
 11,250            pack_rhs(blockB+actual_kc*j2, &other(startBlock,j2), otherStride, actualPanelWidth, actual_cols, actual_kc, blockBOffset);
885,924  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (900x)
      .  
      .            // GEBP
    900            if (lengthTarget>0)
      .            {
  1,251              Index startTarget  = IsLower ? k2+k1+actualPanelWidth : k2-actual_kc;
      .  
  8,757              pack_lhs(blockA, &tri(startTarget,startBlock), triStride, actualPanelWidth, lengthTarget);
2,079,224  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (834x)
      .  
 12,927              gebp_kernel(&other(startTarget,j2), otherStride, blockA, blockB+actual_kc*j2, lengthTarget, actualPanelWidth, actual_cols, Scalar(-1),
59,580,913  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (834x)
      .                          actualPanelWidth, actual_kc, 0, blockBOffset, blockW);
      .            }
      .          }
      .        }
      .        
      .        // R2 -= A21 * B => GEPP
      .        {
     33          Index start = IsLower ? k2+kc : 0;
    165          Index end   = IsLower ? size : k2-kc;
    165          for(Index i2=start; i2<end; i2+=mc)
      .          {
      .            const Index actual_mc = (std::min)(mc,end-i2);
      .            if (actual_mc>0)
      .            {
      .              pack_lhs(blockA, &tri(i2, IsLower ? k2 : k2-kc), triStride, actual_kc, actual_mc);
      .  
      .              gebp_kernel(_other+i2, otherStride, blockA, blockB, actual_mc, actual_kc, cols, Scalar(-1), -1, -1, 0, 0, blockW);
      .            }
      .          }
      .        }
      .      }
    132    }
      .  
      .  /* Optimized triangular solver with multiple left hand sides and the trinagular matrix on the right
      .   */
      .  template <typename Scalar, typename Index, int Mode, bool Conjugate, int TriStorageOrder>
      .  struct triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>
      .  {
      .    static EIGEN_DONT_INLINE void run(
      .      Index size, Index otherSize,
-- line 190 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Block.h
--------------------------------------------------------------------------------
        Ir 

-- line 94 ----------------------------------------
         .  
         .  template<typename XprType, int BlockRows=Dynamic, int BlockCols=Dynamic, bool InnerPanel = false,
         .           bool HasDirectAccess = internal::has_direct_access<XprType>::ret> class BlockImpl_dense;
         .           
         .  } // end namespace internal
         .  
         .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, typename StorageKind> class BlockImpl;
         .  
10,862,774  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel> class Block
10,421,484  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (151036x)
         .    : public BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind>
         .  {
         .      typedef BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind> Impl;
         .    public:
         .      //typedef typename Impl::Base Base;
         .      typedef Impl Base;
         .      EIGEN_GENERIC_PUBLIC_INTERFACE(Block)
    24,804      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Block)
 9,046,906  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
         .    
         .      /** Column or Row constructor
         .        */
 2,210,760      inline Block(XprType& xpr, Index i) : Impl(xpr,i)
 9,260,480  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26920x)
         .      {
 2,534,442        eigen_assert( (i>=0) && (
   484,560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26920x)
         .            ((BlockRows==1) && (BlockCols==XprType::ColsAtCompileTime) && i<xpr.rows())
         .          ||((BlockRows==XprType::RowsAtCompileTime) && (BlockCols==1) && i<xpr.cols())));
   552,690      }
         .  
         .      /** Fixed-size constructor
         .        */
         .      inline Block(XprType& xpr, Index a_startRow, Index a_startCol)
         .        : Impl(xpr, a_startRow, a_startCol)
         .      {
         .        EIGEN_STATIC_ASSERT(RowsAtCompileTime!=Dynamic && ColsAtCompileTime!=Dynamic,THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE)
         .        eigen_assert(a_startRow >= 0 && BlockRows >= 1 && a_startRow + BlockRows <= xpr.rows()
         .               && a_startCol >= 0 && BlockCols >= 1 && a_startCol + BlockCols <= xpr.cols());
         .      }
         .  
         .      /** Dynamic-size constructor
         .        */
 1,540,341      inline Block(XprType& xpr,
         .            Index a_startRow, Index a_startCol,
         .            Index blockRows, Index blockCols)
 1,711,490        : Impl(xpr, a_startRow, a_startCol, blockRows, blockCols)
28,925,707  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (70723x)
         .      {
   807,450        eigen_assert((RowsAtCompileTime==Dynamic || RowsAtCompileTime==blockRows)
         .            && (ColsAtCompileTime==Dynamic || ColsAtCompileTime==blockCols));
 9,242,046        eigen_assert(a_startRow >= 0 && blockRows >= 0 && a_startRow  <= xpr.rows() - blockRows
 2,263,136  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (141446x)
         .            && a_startCol >= 0 && blockCols >= 0 && a_startCol <= xpr.cols() - blockCols);
   513,447      }
         .  };
         .           
         .  // The generic default implementation for dense block simplu forward to the internal::BlockImpl_dense
         .  // that must be specialized for direct and non-direct access...
         .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel>
10,862,774  class BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Dense>
   868,785  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3407x)
         .    : public internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel>
         .  {
         .      typedef internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel> Impl;
         .      typedef typename XprType::Index Index;
         .    public:
         .      typedef Impl Base;
    24,804      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
 9,022,434  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
 2,763,450      inline BlockImpl(XprType& xpr, Index i) : Impl(xpr,i) {}
   217,840  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
         .      inline BlockImpl(XprType& xpr, Index a_startRow, Index a_startCol) : Impl(xpr, a_startRow, a_startCol) {}
 1,540,341      inline BlockImpl(XprType& xpr, Index a_startRow, Index a_startCol, Index blockRows, Index blockCols)
 2,224,937        : Impl(xpr, a_startRow, a_startCol, blockRows, blockCols) {}
27,299,078  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (70723x)
         .  };
         .  
         .  namespace internal {
         .  
         .  /** \internal Internal implementation of dense Blocks in the general case. */
         .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, bool HasDirectAccess> class BlockImpl_dense
         .    : public internal::dense_xpr_base<Block<XprType, BlockRows, BlockCols, InnerPanel> >::type
         .  {
-- line 167 ----------------------------------------
-- line 305 ----------------------------------------
         .      const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;
         .      const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;
         .      const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;
         .      const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;
         .  };
         .  
         .  /** \internal Internal implementation of dense Blocks in the direct access case.*/
         .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel>
18,887,820  class BlockImpl_dense<XprType,BlockRows,BlockCols, InnerPanel,true>
18,163,992  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (235896x)
         .    : public MapBase<Block<XprType, BlockRows, BlockCols, InnerPanel> >
         .  {
         .      typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;
         .    public:
         .  
         .      typedef MapBase<BlockType> Base;
         .      EIGEN_DENSE_PUBLIC_INTERFACE(BlockType)
    24,804      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl_dense)
 8,997,962  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
         .  
         .      /** Column or Row constructor
         .        */
 1,289,610      inline BlockImpl_dense(XprType& xpr, Index i)
 1,154,721        : Base(internal::const_cast_ptr(&xpr.coeffRef(
   274,864  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6704x)
         .                (BlockRows==1) && (BlockCols==XprType::ColsAtCompileTime) ? i : 0,
         .                (BlockRows==XprType::RowsAtCompileTime) && (BlockCols==1) ? i : 0)),
         .               BlockRows==1 ? 1 : xpr.rows(),
         .               BlockCols==1 ? 1 : xpr.cols()),
 4,122,496          m_xpr(xpr)
 1,387,728  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20112x)
         .      {
   552,690        init();
   482,688  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6704x)
   921,150      }
         .  
         .      /** Fixed-size constructor
         .        */
         .      inline BlockImpl_dense(XprType& xpr, Index startRow, Index startCol)
         .        : Base(internal::const_cast_ptr(&xpr.coeffRef(startRow,startCol))), m_xpr(xpr)
         .      {
         .        init();
         .      }
         .  
         .      /** Dynamic-size constructor
         .        */
 1,540,341      inline BlockImpl_dense(XprType& xpr,
         .            Index startRow, Index startCol,
         .            Index blockRows, Index blockCols)
 1,220,529        : Base(internal::const_cast_ptr(&xpr.coeffRef(startRow,startCol)), blockRows, blockCols),
   254,036  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6196x)
 1,995,605          m_xpr(xpr)
 1,096,692  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12392x)
         .      {
   513,447        init();
   446,112  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6196x)
   513,447      }
         .  
         .      const typename internal::remove_all<typename XprType::Nested>::type& nestedExpression() const 
         .      { 
         .        return m_xpr; 
         .      }
         .        
         .      /** \sa MapBase::innerStride() */
55,630,376      inline Index innerStride() const
         .      {
         .        return internal::traits<BlockType>::HasSameStorageOrderAsXprType
13,351,966               ? m_xpr.innerStride()
42,278,410               : m_xpr.outerStride();
25,785,147  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (452371x)
27,815,188      }
         .  
         .      /** \sa MapBase::outerStride() */
 7,023,198      inline Index outerStride() const
         .      {
 4,682,132        return m_outerStride;
 4,682,132      }
         .  
         .    #ifndef __SUNPRO_CC
         .    // FIXME sunstudio is not friendly with the above friend...
         .    // META-FIXME there is no 'friend' keyword around here. Is this obsolete?
         .    protected:
         .    #endif
         .  
         .      #ifndef EIGEN_PARSED_BY_DOXYGEN
-- line 380 ----------------------------------------
-- line 382 ----------------------------------------
         .      inline BlockImpl_dense(XprType& xpr, const Scalar* data, Index blockRows, Index blockCols)
         .        : Base(data, blockRows, blockCols), m_xpr(xpr)
         .      {
         .        init();
         .      }
         .      #endif
         .  
         .    protected:
 1,421,516      void init()
         .      {
 2,210,495        m_outerStride = internal::traits<BlockType>::HasSameStorageOrderAsXprType
    13,984  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
   277,158                      ? m_xpr.outerStride()
         .                      : m_xpr.innerStride();
 1,066,137      }
         .  
         .      typename XprType::Nested m_xpr;
         .      Index m_outerStride;
         .  };
         .  
         .  } // end namespace internal
         .  
         .  } // end namespace Eigen
-- line 403 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/CholeskyFactorization.cpp
--------------------------------------------------------------------------------
       Ir 

        .  #include "CholeskyFactorization.hpp"
        .  #include <iostream>
        .  
        .  //--------------------------------------------------------------------------------
        .  void CholeskyFactorization::compute(
        .    Eigen::MatrixXd &L, int &p, double &offset, int n) 
   25,731  {
        .    //initially the matrix M to be factorized is stored in L. 
        .    //computes an lower tridiagonal matrix L such that M = L*L' if M is positive definite
        .    //otherwise it returns R such that M(0:(p-1), 0:(p-1)) = L(0:(p-1), 0:(p-1))L(0:(p-1), 0:(p-1))'
        .    //and the value p such that (M + offset*ep*ep') has a zero eigenvalue, where
        .    //ep is the p-th canonical unit vector. The variable p = 0, if M is positive definite.
        .   
        .    //initialize variables
    5,718    p      = 0;
    8,577    offset = 0e0;
        .  	
  114,721    for (int i = 0; i < n; i++) {
        .      //check for special case
  372,528      if (L(i,i) == 0e0) {
3,601,104  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20696x)
        .        p      = i+1;
        .        offset = 0e0;		
        .        return;
        .      }
  510,389      for (int j = 0; j <= i; j++) {
  941,160        s = L(i,j);
14,887,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (85560x)
1,504,926        for (int k = 0; k <= j-1; k++)
5,026,588          s = s - L(i,k)*L(j,k);
62,473,308  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (359042x)
  256,680        if (i > j) {
1,686,464          L(i,j) = s / L(j,j);
22,572,672  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (129728x)
        .        } else {				
  433,992          if (s > 0e0) L(i,i) = sqrt(s);
3,656,289  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (41314x)
        .          else {
      156            p      = i+1; 
      234            offset = -s;					
      390            L(i,i) = 1e0;
    6,786  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39x)
       39            return;
        .          }
        .        }
        .      }
  638,395      if (n-i-1 > 0) (L.row(i)).tail(n-i-1) = Eigen::VectorXd::Zero(n-i-1); 
52,381,101  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (71348x)
        .    }	
    2,820    return;
   11,455  }
      134  => ../src/CholeskyFactorization.cpp:__static_initialization_and_destruction_0(int, int) (1x)

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/QuadraticMinimization.cpp
--------------------------------------------------------------------------------
    Ir 

     .  #include "QuadraticMinimization.hpp"
     .  #include <iostream>
     .  
     .  //--------------------------------------------------------------------------------
     6  QuadraticMinimization::QuadraticMinimization ( int n ) : 
    33    TriangularMatrixOperations ( n )
   598  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7x)
47,083  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::TriangularMatrixOperations(int) (1x)
     .  {
     3    dim = n;
     .    //set parameters for stopping criteria
     3    sigma1 = 1e-4; // 1e-3
     3    sigma2 = 1e-2; // 1e-1
     .    //allocate memory for auxiliary variables for the More/Sorensen algorithm
    11    M.resize ( dim, dim );
   484  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     8    z_hat.resize ( dim );
   567  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     8    u.resize( dim );
   567  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     5  }
     .  //--------------------------------------------------------------------------------
     .  
     .  
     .  //--------------------------------------------------------------------------------
     .  void QuadraticMinimization::minimize ( Eigen::VectorXd &y, 
 3,968    Eigen::VectorXd const &g, Eigen::MatrixXd const &H ) { 
     .    //this algorithm computes a solution of the optimization problem
     .    // y = argmin (0.5*xHx + g'x) subject to ||x|| <= delta (here: delta is fixed to 1)
     .    //reference: More/Sorensen 1983
     .  
   992    double delta_loc = 1e0;
     .  
     .    // initialize variables
 1,488    tau = 0e0;
 1,488    tmp_save = 0e0;
     .  
     .    //initialize solution
 5,952    y = Eigen::VectorXd::Zero( dim );
800,048  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (992x)
 1,488    norm_y = 0e0;
 2,976    norm_g = g.norm();
630,416  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
     .  
     .    //initialize safeguarding parameters
 2,480    norm_g_d_delta = norm_g / delta_loc;
 1,488    l1_norm_B      = 0e0;
23,312    for (int i = 0; i < dim; i++) {
62,496      tmp_dbl = (H.col(i).cwiseAbs()).sum();
6,707,904  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10416x)
25,656      if (tmp_dbl > l1_norm_B) l1_norm_B = tmp_dbl;
     .    }
 7,936    lam_S = (-H.diagonal()).maxCoeff();
2,076,938  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1488x)
 3,472    lam_L = norm_g_d_delta - l1_norm_B;
 3,472    lam_U = norm_g_d_delta + l1_norm_B;
 1,984    lam   = lam_U;
 4,536    if (lam_L < lam_S) lam_L = lam_S;
 2,495    if (lam_L < 0e0)   lam_L = 0e0;
   992    counter = 0;
     .  
 1,648    while (counter < 10000 || true ) {
10,720      counter++;
     .  
     .      //safeguard lambda
13,528      if (lam < lam_L) lam = lam_L;
12,864      if (lam > lam_U) lam = lam_U;
12,864      if (lam <= lam_S) {
 1,230        lam = 1e-3*lam_U;
 5,740        if (lam < sqrt(lam_L*lam_U)) lam = sqrt(lam_L*lam_U);
 1,230  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (410x)
     .      }
62,176      M = H + lam*Eigen::MatrixXd::Identity(dim, dim);
48,059,904  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8576x)
27,872      CholeskyFactorization::compute(M, p, offset, dim);
117,995,144  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/CholeskyFactorization.cpp:CholeskyFactorization::compute(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, int&, double&, int) (2144x)
 8,576      if (p == 0) {  //i.e. if M = H+lam*I is positive definite
     .        //solve the linear system (H + lambda*I)p - -g
54,730        y = -(Eigen::TriangularView<Eigen::MatrixXd, Eigen::Lower>(M)).solve( g );
65,958,001  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10525x)
63,150        y = (Eigen::TriangularView<Eigen::MatrixXd, Eigen::Upper>(M.transpose())).solve(y);
86,751,165  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12630x)
12,630        norm_y = y.norm();
2,675,455  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2105x)
10,525        if (norm_y < delta_loc) {
     .          //compute z_hat
 6,300          TriangularMatrixOperations::compute_large_norm_solution(M, z_hat);
199,837,463  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::compute_large_norm_solution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (700x)
22,400          z_hat = (Eigen::TriangularView<Eigen::MatrixXd, Eigen::Upper>(M.transpose())).solve(z_hat);
28,852,503  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
13,300          z_hat = z_hat / z_hat.norm();
2,316,300  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2100x)
     .          //compute tau
11,200          tau   = pow( delta_loc, 2e0 ) - norm_y*norm_y;
20,300  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (700x)
 6,300          yzhat = y.dot(z_hat);
1,311,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (700x)
 5,908          if (yzhat < 0) syzhat = -1e0; else syzhat = 1e0;
20,300          tau = tau / (yzhat + syzhat*sqrt(yzhat*yzhat+tau));
 2,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (700x)
     .        }
     .      }
     .      //update lam_L, lam_U, lam_S
 8,576      if (p == 0) {
10,525        if (norm_y < delta_loc) {
 5,016          if (lam_U > lam) lam_U = lam;
18,900          tmp_save = pow((((M.transpose()))*z_hat).norm(), 2e0);
6,428,518  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3500x)
 4,900          tmp_dbl = lam - tmp_save;
 7,215          if (lam_S < tmp_dbl) lam_S = tmp_dbl;
     .        } else {
15,455          if (lam_L < lam) lam_L = lam;
     .        }
     .      } else {
   390        if (lam_L < lam) lam_L = lam;
   429        A.resize(p, p);
32,742  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39x)
   858        A = (M.topLeftCorner(p, p)).transpose();
537,066  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (117x)
   507        uu = Eigen::VectorXd::Zero(p);
87,777  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (78x)
   429        uu(p-1) = 1e0;
 5,733  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39x)
   780        uu = (Eigen::TriangularView<Eigen::MatrixXd, Eigen::Upper>(A)).solve(uu);
904,110  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (117x)
   234        if (p < dim) {
   299          u = Eigen::VectorXd::Zero(dim);
37,099  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (46x)
   368          u.head(p) = uu;
39,710  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (46x)
   112        } else u = uu;
22,656  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16x)
     .  
   819        tmp_dbl = lam + offset/(u.dot(u));
73,086  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39x)
   390        if (lam_S < tmp_dbl) lam_S = tmp_dbl;
     .      }
15,176      if (lam_L < lam_S) lam_L = lam_S;
     .      //check convergence criteria
 8,576      if (p == 0) {
16,840        tmp_dbl = fabs( delta_loc - norm_y );
26,784        if (tmp_dbl <= sigma1*(delta_loc) || (norm_y <= delta_loc && lam <= 1e-16)) return;
     .  
 8,055        if (norm_y < delta_loc) {
27,300          tmp_dbl = pow((((M.transpose()))*y).norm(), 2e0) + lam*pow( delta_loc, 2e0 );
6,285,243  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
 4,200          if (tmp_dbl < sigma2) tmp_dbl = sigma2;
 8,400          tmp_dbl = sigma1*(2e0-sigma2)*tmp_dbl;				
 8,400          if (tau*tau*tmp_save <= tmp_dbl) {
    38            y = y + tau*z_hat;
 6,038  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     2            return;
     .          }
     .        }
     .      }
     .      //update lambda
14,637      if (p == 0 && norm_g > 0) {
30,571        u = (Eigen::TriangularView<Eigen::MatrixXd, Eigen::Lower>(M)).solve(y);
46,096,241  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4827x)
49,879        lam = lam + pow((norm_y/u.norm()), 2e0)*((norm_y-(delta_loc))/(delta_loc));
2,233,292  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3218x)
   156      } else lam = lam_S;
     .  
     .    }
     .  
     .    return;
     .  
 2,003  }
   134  => ../src/QuadraticMinimization.cpp:__static_initialization_and_destruction_0(int, int) (1x)
     .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/lib/gcc/5/gcc/x86_64-apple-darwin15.0.0/5.2.0/include/pmmintrin.h
--------------------------------------------------------------------------------
     Ir 

-- line 80 ----------------------------------------
      .  _mm_addsub_pd (__m128d __X, __m128d __Y)
      .  {
      .    return (__m128d) __builtin_ia32_addsubpd ((__v2df)__X, (__v2df)__Y);
      .  }
      .  
      .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
      .  _mm_hadd_pd (__m128d __X, __m128d __Y)
      .  {
242,990    return (__m128d) __builtin_ia32_haddpd ((__v2df)__X, (__v2df)__Y);
      .  }
      .  
      .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
      .  _mm_hsub_pd (__m128d __X, __m128d __Y)
      .  {
      .    return (__m128d) __builtin_ia32_hsubpd ((__v2df)__X, (__v2df)__Y);
      .  }
      .  
-- line 96 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../include/SubproblemDefinitions.hpp
--------------------------------------------------------------------------------
     Ir 

-- line 2 ----------------------------------------
      .  #define HSubproblemDefinitions
      .  
      .  #include "VectorOperations.hpp"
      .  #include <Eigen/Core>
      .  #include <vector>
      .  
      .  
      .  template<class TSurrogateModel, template<class TSurrogateModel1> class TSubproblemOptimization>
    288  struct SubproblemData {
  3,887  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
      .      TSubproblemOptimization<TSurrogateModel> *me;
      .      VectorOperations *vo;
      .      std::vector<double> vector;
      .      int constraint_number;
      .  };
      .  
      .  
      .  template<class TSurrogateModel, template<class TSurrogateModel1> class TSubproblemOptimization>
-- line 18 ----------------------------------------
-- line 27 ----------------------------------------
      .                                       std::vector<double>&, void*); 
      .      static double constraints_for_subproblems ( std::vector<double> const &, 
      .                                            std::vector<double>&, void*); 
      .  };
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  template<class TSurrogateModel, template<class TSurrogateModel1> class TSubproblemOptimization>
  3,636  double SubproblemDefinitions<TSurrogateModel, TSubproblemOptimization>::opt_trial_point_obj (
      .    std::vector<double> const &x, std::vector<double> &grad, void* data) 
      .  {
      .  
      .    TSubproblemOptimization<TSurrogateModel> *d = 
  1,212      reinterpret_cast<TSubproblemOptimization<TSurrogateModel>*>(data);
      .  
  3,636    if (!grad.empty( ))
 67,266  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (606x)
 10,302      grad = (*(d->surrogate_models))[0].gradient( x );
255,239,458  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::gradient(std::vector<double, std::allocator<double> > const&) (606x)
336,330  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1212x)
      .  
  7,272    return (*(d->surrogate_models))[0].evaluate( x );
  9,090  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (606x)
167,590,814  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&) (606x)
  1,818  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  template<class TSurrogateModel, template<class TSurrogateModel1> class TSubproblemOptimization>
    861  double SubproblemDefinitions<TSurrogateModel, TSubproblemOptimization>::opt_criticality_measure_obj (
      .    std::vector<double> const &x, std::vector<double> &grad, void* data) 
      .  {
      .  
      .    SubproblemData<TSurrogateModel, TSubproblemOptimization> *d =
    246      reinterpret_cast<  SubproblemData<TSurrogateModel, TSubproblemOptimization>*>(data);
      .  
  1,230    d->vo->minus( x, d->me->best_point, d->vector );
198,891  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::minus(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (123x)
      .   
    738   if (!grad.empty( )) {
 13,653  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (123x)
  9,717      for (unsigned int i = 0; i < x.size( ); i++) 
 13,776  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (984x)
 12,915        grad[i] = d->me->criticality_gradient.at ( i );
 61,992  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1722x)
      .    }  
      .  
  1,353    return d->vo->dot_product( d->vector, d->me->criticality_gradient );
131,487  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::dot_product(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (123x)
    615  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  template<class TSurrogateModel, template<class TSurrogateModel1> class TSubproblemOptimization>
      .  double SubproblemDefinitions<TSurrogateModel, TSubproblemOptimization>::opt_restore_feasibility_obj (
      .    std::vector<double> const &x, std::vector<double> &grad, void* data) 
      .  {
-- line 75 ----------------------------------------
-- line 105 ----------------------------------------
      .    return objective_value;
      .  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  //unsigned m, double *result, unsigned n, const double* x, double* grad, void* data)
      .  template<class TSurrogateModel, template<class TSurrogateModel1> class TSubproblemOptimization>
 20,412  double SubproblemDefinitions<TSurrogateModel, TSubproblemOptimization>::constraints_for_subproblems (
      .    std::vector<double> const &x, std::vector<double> &grad, void* data)  
      .  {
      .  
      .    SubproblemData<TSurrogateModel, TSubproblemOptimization> *d =
  5,832      reinterpret_cast<  SubproblemData<TSurrogateModel, TSubproblemOptimization>*>(data);
      .  
      .    double result;
 52,488    result = (*(d->me->surrogate_models))[d->constraint_number+1].evaluate( x );
 43,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2916x)
45,301,666  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&) (2916x)
 17,496    if (!grad.empty())
323,676  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2916x)
 64,152      grad = (*(d->me->surrogate_models))[d->constraint_number+1].gradient( x );
185,345,434  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::gradient(std::vector<double, std::allocator<double> > const&) (2916x)
1,618,380  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5832x)
      .  
      .  
      .    double tmpdbl;
 29,160    d->vo->minus ( x, d->me->best_point, d->vector );
4,715,172  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::minus(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (2916x)
 32,076    tmpdbl = d->vo->dot_product( d->vector, d->vector );
3,117,204  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::dot_product(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (2916x)
      .  
 67,068    result += d->me->inner_boundary_constant->at( d->constraint_number ) * tmpdbl / 
174,960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2916x)
 46,656              pow(*(d->me->delta), 2e0) -
753,332  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5832x)
  5,832              d->me->feasibility_thresholds( d->constraint_number );
 17,496    if (!grad.empty()) {
323,676  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2916x)
 52,488      tmpdbl = d->me->inner_boundary_constant->at( d->constraint_number ) * 2e0 / 
174,960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2916x)
 26,244               pow(*(d->me->delta), 2e0) ;
324,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2916x)
253,692      for ( int j = 0; j < x.size(); j++) 
326,592  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (23328x)
387,828        grad[j] += tmpdbl * d->vector.at(j);
1,469,664  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40824x)
      .    }
      .   
  5,832     return result;
 14,580  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  template<class TSurrogateModel, template<class TSurrogateModel1> class TSubproblemOptimization>
  5,103  double SubproblemDefinitions<TSurrogateModel, TSubproblemOptimization>::trustregion_constraint (
      .    std::vector<double> const &x, std::vector<double> &grad, void* data)  
      .  {
      .  
      .    SubproblemData<TSurrogateModel, TSubproblemOptimization> *d =
  1,458      reinterpret_cast<  SubproblemData<TSurrogateModel, TSubproblemOptimization>*>(data);
      .  
      .    double result;
  8,019    d->vo->minus ( x, d->me->best_point, grad );
1,178,793  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::minus(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (729x)
 15,309    result = d->vo->dot_product( grad, grad ) - pow( *(d->me->delta), 2e0 );
 81,170  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (729x)
779,301  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::dot_product(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (729x)
      .  
  4,374    if (!grad.empty()) {
 80,919  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (729x)
 63,423      for (int i = 0; i < x.size(); i++) 
 81,648  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5832x)
 81,648        grad[i] = 2e0 * grad[i];
122,472  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10206x)
      .    }
      .  
  1,458    return result;
  3,645  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  
      .  
      .  #endif

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/MatrixCwiseBinaryOps.h
--------------------------------------------------------------------------------
     Ir 

-- line 14 ----------------------------------------
      .    *
      .    * Example: \include MatrixBase_cwiseProduct.cpp
      .    * Output: \verbinclude MatrixBase_cwiseProduct.out
      .    *
      .    * \sa class CwiseBinaryOp, cwiseAbs2
      .    */
      .  template<typename OtherDerived>
      .  EIGEN_STRONG_INLINE const EIGEN_CWISE_PRODUCT_RETURN_TYPE(Derived,OtherDerived)
196,000  cwiseProduct(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const
      .  {
476,000    return EIGEN_CWISE_PRODUCT_RETURN_TYPE(Derived,OtherDerived)(derived(), other.derived());
4,399,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42000x)
140,000  }
      .  
      .  /** \returns an expression of the coefficient-wise == operator of *this and \a other
      .    *
      .    * \warning this performs an exact comparison, which is generally a bad idea with floating-point types.
      .    * In order to check for equality between two vectors or matrices with floating-point coefficients, it is
      .    * generally a far better idea to use a fuzzy comparison as provided by isApprox() and
      .    * isMuchSmallerThan().
      .    *
-- line 33 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/PlainObjectBase.h
--------------------------------------------------------------------------------
        Ir 

-- line 34 ----------------------------------------
         .  };
         .  
         .  template<> struct check_rows_cols_for_overflow<Dynamic> {
         .    template<typename Index>
         .    static EIGEN_ALWAYS_INLINE void run(Index rows, Index cols)
         .    {
         .      // http://hg.mozilla.org/mozilla-central/file/6c8a909977d3/xpcom/ds/CheckedInt.h#l242
         .      // we assume Index is signed
   299,472      Index max_index = (size_t(1) << (8 * sizeof(Index) - 1)) - 1; // assume Index is signed
         .      bool error = (rows == 0 || cols == 0) ? false
 1,094,500                 : (rows > max_index / cols);
   199,648      if (error)
   144,832        throw_std_bad_alloc();
         .    }
         .  };
         .  
         .  template <typename Derived,
         .            typename OtherDerived = Derived,
         .            bool IsVector = bool(Derived::IsVectorAtCompileTime) && bool(OtherDerived::IsVectorAtCompileTime)>
         .  struct conservative_resize_like_impl;
         .  
-- line 54 ----------------------------------------
-- line 80 ----------------------------------------
         .      : public ArrayBase<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > {};
         .  
         .  } // namespace internal
         .  
         .  template<typename Derived>
         .  class PlainObjectBase : public internal::dense_xpr_base_dispatcher_for_doxygen<Derived>
         .  #else
         .  template<typename Derived>
   188,190  class PlainObjectBase : public internal::dense_xpr_base<Derived>::type
    54,491  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (92x)
         .  #endif
         .  {
         .    public:
         .      enum { Options = internal::traits<Derived>::Options };
         .      typedef typename internal::dense_xpr_base<Derived>::type Base;
         .  
         .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
         .      typedef typename internal::traits<Derived>::Index Index;
-- line 96 ----------------------------------------
-- line 127 ----------------------------------------
         .  
         .    public:
         .      enum { NeedsToAlign = SizeAtCompileTime != Dynamic && (internal::traits<Derived>::Flags & AlignedBit) != 0 };
         .      EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF(NeedsToAlign)
         .  
         .      Base& base() { return *static_cast<Base*>(this); }
         .      const Base& base() const { return *static_cast<const Base*>(this); }
         .  
67,854,834      EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }
32,477,048  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4059631x)
55,326,155      EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }
     1,344  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (168x)
         .  
17,539,032      EIGEN_STRONG_INLINE const Scalar& coeff(Index rowId, Index colId) const
         .      {
         .        if(Flags & RowMajorBit)
         .          return m_storage.data()[colId + rowId * m_storage.cols()];
         .        else // column-major
32,572,488          return m_storage.data()[rowId + colId * m_storage.rows()];
40,089,216  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5011152x)
10,022,304      }
         .  
   202,740      EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const
         .      {
   283,836        return m_storage.data()[index];
    27,968  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
    81,096      }
         .  
 8,027,257      EIGEN_STRONG_INLINE Scalar& coeffRef(Index rowId, Index colId)
         .      {
         .        if(Flags & RowMajorBit)
         .          return m_storage.data()[colId + rowId * m_storage.cols()];
         .        else // column-major
14,907,763          return m_storage.data()[rowId + colId * m_storage.rows()];
17,216,448  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2152056x)
 4,587,004      }
         .  
18,212,290      EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)
         .      {
25,497,206        return m_storage.data()[index];
29,036,712  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3629589x)
 7,284,916      }
         .  
   188,671      EIGEN_STRONG_INLINE const Scalar& coeffRef(Index rowId, Index colId) const
         .      {
         .        if(Flags & RowMajorBit)
         .          return m_storage.data()[colId + rowId * m_storage.cols()];
         .        else // column-major
   350,389          return m_storage.data()[rowId + colId * m_storage.rows()];
   431,248  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (53906x)
   107,812      }
         .  
         .      EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const
         .      {
         .        return m_storage.data()[index];
         .      }
         .  
         .      /** \internal */
         .      template<int LoadMode>
-- line 178 ----------------------------------------
-- line 181 ----------------------------------------
         .        return internal::ploadt<PacketScalar, LoadMode>
         .                 (m_storage.data() + (Flags & RowMajorBit
         .                                     ? colId + rowId * m_storage.cols()
         .                                     : rowId + colId * m_storage.rows()));
         .      }
         .  
         .      /** \internal */
         .      template<int LoadMode>
 1,949,285      EIGEN_STRONG_INLINE PacketScalar packet(Index index) const
         .      {
 3,508,713        return internal::ploadt<PacketScalar, LoadMode>(m_storage.data() + index);
 2,183,004  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (150552x)
   779,714      }
         .  
         .      /** \internal */
         .      template<int StoreMode>
         .      EIGEN_STRONG_INLINE void writePacket(Index rowId, Index colId, const PacketScalar& val)
         .      {
         .        internal::pstoret<Scalar, PacketScalar, StoreMode>
         .                (m_storage.data() + (Flags & RowMajorBit
         .                                     ? colId + rowId * m_storage.cols()
         .                                     : rowId + colId * m_storage.rows()), val);
         .      }
         .  
         .      /** \internal */
         .      template<int StoreMode>
 1,040,940      EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& val)
         .      {
 1,908,390        internal::pstoret<Scalar, PacketScalar, StoreMode>(m_storage.data() + index, val);
 4,244,828  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (223412x)
   520,470      }
         .  
         .      /** \returns a const pointer to the data array of this matrix */
   116,952      EIGEN_STRONG_INLINE const Scalar *data() const
   146,190      { return m_storage.data(); }
    90,896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11362x)
         .  
         .      /** \returns a pointer to the data array of this matrix */
   102,236      EIGEN_STRONG_INLINE Scalar *data()
   127,795      { return m_storage.data(); }
   182,032  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (22754x)
         .  
         .      /** Resizes \c *this to a \a rows x \a cols matrix.
         .        *
         .        * This method is intended for dynamic-size matrices, although it is legal to call it on any
         .        * matrix as long as fixed dimensions are left unchanged. If you only want to change the number
         .        * of rows and/or of columns, you can use resize(NoChange_t, Index), resize(Index, NoChange_t).
         .        *
         .        * If the current number of coefficients of \c *this exactly matches the
-- line 225 ----------------------------------------
-- line 227 ----------------------------------------
         .        * the current values are left unchanged. In all other cases, including
         .        * shrinking, the data is reallocated and all previous values are lost.
         .        *
         .        * Example: \include Matrix_resize_int_int.cpp
         .        * Output: \verbinclude Matrix_resize_int_int.out
         .        *
         .        * \sa resize(Index) for vectors, resize(NoChange_t, Index), resize(Index, NoChange_t)
         .        */
   217,248      EIGEN_STRONG_INLINE void resize(Index nbRows, Index nbCols)
         .      {
   778,883        eigen_assert(   EIGEN_IMPLIES(RowsAtCompileTime!=Dynamic,nbRows==RowsAtCompileTime)
         .                     && EIGEN_IMPLIES(ColsAtCompileTime!=Dynamic,nbCols==ColsAtCompileTime)
         .                     && EIGEN_IMPLIES(RowsAtCompileTime==Dynamic && MaxRowsAtCompileTime!=Dynamic,nbRows<=MaxRowsAtCompileTime)
         .                     && EIGEN_IMPLIES(ColsAtCompileTime==Dynamic && MaxColsAtCompileTime!=Dynamic,nbCols<=MaxColsAtCompileTime)
         .                     && nbRows>=0 && nbCols>=0 && "Invalid sizes when resizing a matrix or array.");
         .        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(nbRows, nbCols);
         .        #ifdef EIGEN_INITIALIZE_COEFFS
         .          Index size = nbRows*nbCols;
         .          bool size_changed = size != this->size();
         .          m_storage.resize(size, nbRows, nbCols);
         .          if(size_changed) EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
         .        #else
         .          internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(nbRows, nbCols);
   289,664          m_storage.resize(nbRows*nbCols, nbRows, nbCols);
   320,960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5989x)
         .        #endif
   108,624      }
         .  
         .      /** Resizes \c *this to a vector of length \a size
         .        *
         .        * \only_for_vectors. This method does not work for
         .        * partially dynamic matrices when the static dimension is anything other
         .        * than 1. For example it will not work with Matrix<double, 2, Dynamic>.
         .        *
         .        * Example: \include Matrix_resize_int.cpp
         .        * Output: \verbinclude Matrix_resize_int.out
         .        *
         .        * \sa resize(Index,Index), resize(NoChange_t, Index), resize(Index, NoChange_t)
         .        */
    23,165      inline void resize(Index size)
         .      {
         .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(PlainObjectBase)
    23,165        eigen_assert(((SizeAtCompileTime == Dynamic && (MaxSizeAtCompileTime==Dynamic || size<=MaxSizeAtCompileTime)) || SizeAtCompileTime == size) && size>=0);
         .        #ifdef EIGEN_INITIALIZE_COEFFS
         .          bool size_changed = size != this->size();
         .        #endif
         .        if(RowsAtCompileTime == 1)
       693          m_storage.resize(size, 1, size);
     1,188  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
         .        else
    27,204          m_storage.resize(size, size, 1);
   299,063  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4501x)
         .        #ifdef EIGEN_INITIALIZE_COEFFS
         .          if(size_changed) EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
         .        #endif
    13,899      }
         .  
         .      /** Resizes the matrix, changing only the number of columns. For the parameter of type NoChange_t, just pass the special value \c NoChange
         .        * as in the example below.
         .        *
         .        * Example: \include Matrix_resize_NoChange_int.cpp
         .        * Output: \verbinclude Matrix_resize_NoChange_int.out
         .        *
         .        * \sa resize(Index,Index)
-- line 287 ----------------------------------------
-- line 307 ----------------------------------------
         .      /** Resizes \c *this to have the same dimensions as \a other.
         .        * Takes care of doing all the checking that's needed.
         .        *
         .        * Note that copying a row-vector into a vector (and conversely) is allowed.
         .        * The resizing, if any, is then done in the appropriate way so that row-vectors
         .        * remain row-vectors and vectors remain vectors.
         .        */
         .      template<typename OtherDerived>
   164,448      EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)
         .      {
   109,632        const OtherDerived& other = _other.derived();
     2,849  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (407x)
   246,672        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(other.rows(), other.cols());
    14,652  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (814x)
   246,672        const Index othersize = other.rows()*other.cols();
    14,652  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (814x)
         .        if(RowsAtCompileTime == 1)
         .        {
       288          eigen_assert(other.rows() == 1 || other.cols() == 1);
       336  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (24x)
       180          resize(1, othersize);
     2,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (24x)
         .        }
         .        else if(ColsAtCompileTime == 1)
         .        {
   335,440          eigen_assert(other.rows() == 1 || other.cols() == 1);
   109,460  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4210x)
   129,990          resize(othersize, 1);
   199,975  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2105x)
         .        }
    74,191        else resize(other.rows(), other.cols());
    51,592  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1221x)
   137,040      }
         .  
         .      /** Resizes the matrix to \a rows x \a cols while leaving old values untouched.
         .        *
         .        * The method is intended for matrices of dynamic size. If you only want to change the number
         .        * of rows and/or of columns, you can use conservativeResize(NoChange_t, Index) or
         .        * conservativeResize(Index, NoChange_t).
         .        *
         .        * Matrices are resized relative to the top-left element. In case values need to be 
         .        * appended to the matrix they will be uninitialized.
         .        */
       960      EIGEN_STRONG_INLINE void conservativeResize(Index nbRows, Index nbCols)
         .      {
       960        internal::conservative_resize_like_impl<Derived>::run(*this, nbRows, nbCols);
22,198,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
       480      }
         .  
         .      /** Resizes the matrix to \a rows x \a cols while leaving old values untouched.
         .        *
         .        * As opposed to conservativeResize(Index rows, Index cols), this version leaves
         .        * the number of columns unchanged.
         .        *
         .        * In case the matrix is growing, new rows will be uninitialized.
         .        */
-- line 353 ----------------------------------------
-- line 373 ----------------------------------------
         .      /** Resizes the vector to \a size while retaining old values.
         .        *
         .        * \only_for_vectors. This method does not work for
         .        * partially dynamic matrices when the static dimension is anything other
         .        * than 1. For example it will not work with Matrix<double, 2, Dynamic>.
         .        *
         .        * When values are appended, they will be uninitialized.
         .        */
     2,400      EIGEN_STRONG_INLINE void conservativeResize(Index size)
         .      {
     2,400        internal::conservative_resize_like_impl<Derived>::run(*this, size);
   414,310  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
     1,440      }
         .  
         .      /** Resizes the matrix to \a rows x \a cols of \c other, while leaving old values untouched.
         .        *
         .        * The method is intended for matrices of dynamic size. If you only want to change the number
         .        * of rows and/or of columns, you can use conservativeResize(NoChange_t, Index) or
         .        * conservativeResize(Index, NoChange_t).
         .        *
         .        * Matrices are resized relative to the top-left element. In case values need to be 
-- line 392 ----------------------------------------
-- line 403 ----------------------------------------
         .        */
         .      EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)
         .      {
         .        return _set(other);
         .      }
         .  
         .      /** \sa MatrixBase::lazyAssign() */
         .      template<typename OtherDerived>
   137,040      EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)
         .      {
   137,040        _resize_to_match(other);
   898,336  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2144x)
   219,264        return Base::lazyAssign(other.derived());
45,302,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4288x)
    54,816      }
         .  
         .      template<typename OtherDerived>
    26,916      EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)
         .      {
    58,318        resize(func.rows(), func.cols());
    23,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
    22,430        return Base::operator=(func);
512,336,240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    17,944      }
         .  
   145,870      EIGEN_STRONG_INLINE PlainObjectBase() : m_storage()
       168  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
         .      {
         .  //       _check_template_params();
         .  //       EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
    43,761      }
         .  
         .  #ifndef EIGEN_PARSED_BY_DOXYGEN
         .      // FIXME is it still needed ?
         .      /** \internal */
         .      PlainObjectBase(internal::constructor_without_unaligned_array_assert)
         .        : m_storage(internal::constructor_without_unaligned_array_assert())
         .      {
         .  //       _check_template_params(); EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
         .      }
         .  #endif
         .  
    29,624      EIGEN_STRONG_INLINE PlainObjectBase(Index a_size, Index nbRows, Index nbCols)
    38,088        : m_storage(a_size, nbRows, nbCols)
 1,484,501  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5914x)
         .      {
         .  //       _check_template_params();
         .  //       EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
    12,696      }
         .  
         .      /** \copydoc MatrixBase::operator=(const EigenBase<OtherDerived>&)
         .        */
         .      template<typename OtherDerived>
         .      EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)
         .      {
         .        _resize_to_match(other);
         .        Base::operator=(other.derived());
-- line 453 ----------------------------------------
-- line 561 ----------------------------------------
         .      /** \internal Resizes *this in preparation for assigning \a other to it.
         .        * Takes care of doing all the checking that's needed.
         .        *
         .        * Note that copying a row-vector into a vector (and conversely) is allowed.
         .        * The resizing, if any, is then done in the appropriate way so that row-vectors
         .        * remain row-vectors and vectors remain vectors.
         .        */
         .      template<typename OtherDerived>
   137,040      EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)
         .      {
         .        #ifdef EIGEN_NO_AUTOMATIC_RESIZING
         .        eigen_assert((this->size()==0 || (IsVectorAtCompileTime ? (this->size() == other.size())
         .                   : (rows() == other.rows() && cols() == other.cols())))
         .          && "Size mismatch. Automatic resizing is disabled because EIGEN_NO_AUTOMATIC_RESIZING is defined");
         .        EIGEN_ONLY_USED_FOR_DEBUG(other);
         .        #else
   137,040        resizeLike(other);
     2,988  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
         .        #endif
    82,224      }
         .  
         .      /**
         .        * \brief Copies the value of the expression \a other into \c *this with automatic resizing.
         .        *
         .        * *this might be resized to match the dimensions of \a other. If *this was a null matrix (not already initialized),
         .        * it will be initialized.
         .        *
         .        * Note that copying a row-vector into a vector (and conversely) is allowed.
-- line 587 ----------------------------------------
-- line 588 ----------------------------------------
         .        * The resizing, if any, is then done in the appropriate way so that row-vectors
         .        * remain row-vectors and vectors remain vectors.
         .        *
         .        * \sa operator=(const MatrixBase<OtherDerived>&), _set_noalias()
         .        *
         .        * \internal
         .        */
         .      template<typename OtherDerived>
   120,585      EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)
         .      {
   217,053        _set_selector(other.derived(), typename internal::conditional<static_cast<bool>(int(OtherDerived::Flags) & EvalBeforeAssigningBit), internal::true_type, internal::false_type>::type());
 6,298,588  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9238x)
    72,351        return this->derived();
    32,333  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4619x)
    48,234      }
         .  
         .      template<typename OtherDerived>
         .      EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::true_type&) { _set_noalias(other.eval()); }
         .  
         .      template<typename OtherDerived>
   337,638      EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::false_type&) { _set_noalias(other); }
 7,022,743  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4873x)
         .  
         .      /** \internal Like _set() but additionally makes the assumption that no aliasing effect can happen (which
         .        * is the case when creating a new matrix) so one can enforce lazy evaluation.
         .        *
         .        * \sa operator=(const MatrixBase<OtherDerived>&), _set()
         .        */
         .      template<typename OtherDerived>
   164,448      EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)
         .      {
         .        // I don't think we need this resize call since the lazyAssign will anyways resize
         .        // and lazyAssign will be called by the assign selector.
         .        //_resize_to_match(other);
         .        // the 'false' below means to enforce lazy evaluation. We don't use lazyAssign() because
         .        // it wouldn't allow to copy a row-vector into a column-vector.
   274,080        return internal::assign_selector<Derived,OtherDerived,false>::run(this->derived(), other.derived());
 1,011,889  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1680x)
   109,632      }
         .  
         .      template<typename T0, typename T1>
     1,351      EIGEN_STRONG_INLINE void _init2(Index nbRows, Index nbCols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)
         .      {
         .        EIGEN_STATIC_ASSERT(bool(NumTraits<T0>::IsInteger) &&
         .                            bool(NumTraits<T1>::IsInteger),
         .                            FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED)
     1,158        resize(nbRows,nbCols);
   104,929  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (193x)
       579      }
         .      template<typename T0, typename T1>
         .      EIGEN_STRONG_INLINE void _init2(const Scalar& val0, const Scalar& val1, typename internal::enable_if<Base::SizeAtCompileTime==2,T0>::type* = 0)
         .      {
         .        EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE(PlainObjectBase, 2)
         .        m_storage.data()[0] = val0;
         .        m_storage.data()[1] = val1;
         .      }
         .  
         .      template<typename MatrixTypeA, typename MatrixTypeB, bool SwapPointers>
         .      friend struct internal::matrix_swap_impl;
         .  
         .      /** \internal generic implementation of swap for dense storage since for dynamic-sized matrices of same type it is enough to swap the
         .        * data pointers.
         .        */
         .      template<typename OtherDerived>
       960      void _swap(DenseBase<OtherDerived> const & other)
         .      {
         .        enum { SwapPointers = internal::is_same<Derived, OtherDerived>::value && Base::SizeAtCompileTime==Dynamic };
     1,600        internal::matrix_swap_impl<Derived, OtherDerived, bool(SwapPointers)>::run(this->derived(), other.const_cast_derived());
    31,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
       800      }
         .  
         .    public:
         .  #ifndef EIGEN_PARSED_BY_DOXYGEN
   136,246      static EIGEN_STRONG_INLINE void _check_template_params()
         .      {
         .        EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
         .                          && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
         .                          && ((RowsAtCompileTime == Dynamic) || (RowsAtCompileTime >= 0))
         .                          && ((ColsAtCompileTime == Dynamic) || (ColsAtCompileTime >= 0))
         .                          && ((MaxRowsAtCompileTime == Dynamic) || (MaxRowsAtCompileTime >= 0))
         .                          && ((MaxColsAtCompileTime == Dynamic) || (MaxColsAtCompileTime >= 0))
         .                          && (MaxRowsAtCompileTime == RowsAtCompileTime || RowsAtCompileTime==Dynamic)
         .                          && (MaxColsAtCompileTime == ColsAtCompileTime || ColsAtCompileTime==Dynamic)
         .                          && (Options & (DontAlign|RowMajor)) == Options),
         .          INVALID_MATRIX_TEMPLATE_PARAMETERS)
   204,369      }
         .  #endif
         .  
         .  private:
         .      enum { ThisConstantIsPrivateInPlainObjectBase };
         .  };
         .  
         .  namespace internal {
         .  
         .  template <typename Derived, typename OtherDerived, bool IsVector>
         .  struct conservative_resize_like_impl
         .  {
         .    typedef typename Derived::Index Index;
     1,440    static void run(DenseBase<Derived>& _this, Index rows, Index cols)
         .    {
     1,600      if (_this.rows() == rows && _this.cols() == cols) return;
     5,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
         .      EIGEN_STATIC_ASSERT_DYNAMIC_SIZE(Derived)
         .  
       800      if ( ( Derived::IsRowMajor && _this.cols() == cols) || // row-major and we change only the number of rows
       640           (!Derived::IsRowMajor && _this.rows() == rows) )  // column-major and we change only the number of columns
     5,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
         .      {
         .        internal::check_rows_cols_for_overflow<Derived::MaxSizeAtCompileTime>::run(rows, cols);
         .        _this.derived().m_storage.conservativeResize(rows*cols,rows,cols);
         .      }
         .      else
         .      {
         .        // The storage order does not allow us to use reallocation.
     1,600        typename Derived::PlainObject tmp(rows,cols);
   197,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (320x)
     1,760        const Index common_rows = (std::min)(rows, _this.rows());
     8,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (320x)
     1,760        const Index common_cols = (std::min)(cols, _this.cols());
     8,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (320x)
     4,000        tmp.block(0,0,common_rows,common_cols) = _this.block(0,0,common_rows,common_cols);
21,915,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
     1,280        _this.derived().swap(tmp);
    40,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (320x)
         .      }
       960    }
         .  
         .    static void run(DenseBase<Derived>& _this, const DenseBase<OtherDerived>& other)
         .    {
         .      if (_this.rows() == other.rows() && _this.cols() == other.cols()) return;
         .  
         .      // Note: Here is space for improvement. Basically, for conservativeResize(Index,Index),
         .      // neither RowsAtCompileTime or ColsAtCompileTime must be Dynamic. If only one of the
         .      // dimensions is dynamic, one could use either conservativeResize(Index rows, NoChange_t) or
-- line 708 ----------------------------------------
-- line 738 ----------------------------------------
         .  // to allow calling .conservativeResize(rows,cols) on vectors.
         .  template <typename Derived, typename OtherDerived>
         .  struct conservative_resize_like_impl<Derived,OtherDerived,true>
         .    : conservative_resize_like_impl<Derived,OtherDerived,false>
         .  {
         .    using conservative_resize_like_impl<Derived,OtherDerived,false>::run;
         .    
         .    typedef typename Derived::Index Index;
     2,400    static void run(DenseBase<Derived>& _this, Index size)
         .    {
       960      const Index new_rows = Derived::RowsAtCompileTime==1 ? 1 : size;
       480      const Index new_cols = Derived::RowsAtCompileTime==1 ? size : 1;
     4,320      _this.derived().m_storage.conservativeResize(size,new_rows,new_cols);
   404,230  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (960x)
     1,440    }
         .  
         .    static void run(DenseBase<Derived>& _this, const DenseBase<OtherDerived>& other)
         .    {
         .      if (_this.rows() == other.rows() && _this.cols() == other.cols()) return;
         .  
         .      const Index num_new_elements = other.size() - _this.size();
         .  
         .      const Index new_rows = Derived::RowsAtCompileTime==1 ? 1 : other.rows();
-- line 759 ----------------------------------------
-- line 772 ----------------------------------------
         .    {
         .      a.base().swap(b);
         .    }
         .  };
         .  
         .  template<typename MatrixTypeA, typename MatrixTypeB>
         .  struct matrix_swap_impl<MatrixTypeA, MatrixTypeB, true>
         .  {
       800    static inline void run(MatrixTypeA& a, MatrixTypeB& b)
         .    {
       960      static_cast<typename MatrixTypeA::Base&>(a).m_storage.swap(static_cast<typename MatrixTypeB::Base&>(b).m_storage);
    27,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
       480    }
         .  };
         .  
         .  } // end namespace internal
         .  
         .  } // end namespace Eigen
         .  
         .  #endif // EIGEN_DENSESTORAGEBASE_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Map.h
--------------------------------------------------------------------------------
       Ir 

-- line 96 ----------------------------------------
        .      Flags3 = is_lvalue<PlainObjectType>::value ? int(Flags2) : (int(Flags2) & ~LvalueBit),
        .      Flags = KeepsPacketAccess ? int(Flags3) : (int(Flags3) & ~PacketAccessBit)
        .    };
        .  private:
        .    enum { Options }; // Expressions don't have Options
        .  };
        .  }
        .  
3,891,472  template<typename PlainObjectType, int MapOptions, typename StrideType> class Map
1,769,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (27440x)
        .    : public MapBase<Map<PlainObjectType, MapOptions, StrideType> >
        .  {
        .    public:
        .  
        .      typedef MapBase<Map> Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE(Map)
        .  
        .      typedef typename Base::PointerType PointerType;
        .  #if EIGEN2_SUPPORT_STAGE <= STAGE30_FULL_EIGEN3_API
        .      typedef const Scalar* PointerArgType;
        .      inline PointerType cast_to_pointer_type(PointerArgType ptr) { return const_cast<PointerType>(ptr); }
        .  #else
        .      typedef PointerType PointerArgType;
  345,128      inline PointerType cast_to_pointer_type(PointerArgType ptr) { return ptr; }
        .  #endif
        .  
1,994,604      inline Index innerStride() const
        .      {
  664,868        return StrideType::InnerStrideAtCompileTime != 0 ? m_stride.inner() : 1;
1,329,736      }
        .  
  498,024      inline Index outerStride() const
        .      {
        .        return StrideType::OuterStrideAtCompileTime != 0 ? m_stride.outer()
        .             : IsVectorAtCompileTime ? this->size()
        .             : int(Flags)&RowMajorBit ? this->cols()
  498,024             : this->rows();
2,241,108  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (124506x)
  249,012      }
        .  
        .      /** Constructor in the fixed-size case.
        .        *
        .        * \param dataPtr pointer to the array to map
        .        * \param a_stride optional Stride object, passing the strides.
        .        */
        .      inline Map(PointerArgType dataPtr, const StrideType& a_stride = StrideType())
        .        : Base(cast_to_pointer_type(dataPtr)), m_stride(a_stride)
-- line 140 ----------------------------------------
-- line 143 ----------------------------------------
        .      }
        .  
        .      /** Constructor in the dynamic-size vector case.
        .        *
        .        * \param dataPtr pointer to the array to map
        .        * \param a_size the size of the vector expression
        .        * \param a_stride optional Stride object, passing the strides.
        .        */
  299,222      inline Map(PointerArgType dataPtr, Index a_size, const StrideType& a_stride = StrideType())
  726,682        : Base(cast_to_pointer_type(dataPtr), a_size), m_stride(a_stride)
9,671,736  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (117948x)
        .      {
   42,746        PlainObjectType::Base::_check_template_params();
  235,896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39316x)
  128,238      }
        .  
        .      /** Constructor in the dynamic-size matrix case.
        .        *
        .        * \param dataPtr pointer to the array to map
        .        * \param nbRows the number of rows of the matrix expression
        .        * \param nbCols the number of columns of the matrix expression
        .        * \param a_stride optional Stride object, passing the strides.
        .        */
   52,464      inline Map(PointerArgType dataPtr, Index nbRows, Index nbCols, const StrideType& a_stride = StrideType())
  111,486        : Base(cast_to_pointer_type(dataPtr), nbRows, nbCols), m_stride(a_stride)
1,619,826  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19674x)
        .      {
    6,558        PlainObjectType::Base::_check_template_params();
   39,348  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6558x)
   19,674      }
        .  
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Map)
        .  
        .    protected:
        .      StrideType m_stride;
        .  };
        .  
        .  template<typename _Scalar, int _Rows, int _Cols, int _Options, int _MaxRows, int _MaxCols>
-- line 176 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/MathFunctions.h
--------------------------------------------------------------------------------
    Ir 

-- line 57 ----------------------------------------
     .  /****************************************************************************
     .  * Implementation of real                                                 *
     .  ****************************************************************************/
     .  
     .  template<typename Scalar, bool IsComplex = NumTraits<Scalar>::IsComplex>
     .  struct real_default_impl
     .  {
     .    typedef typename NumTraits<Scalar>::Real RealScalar;
30,999    static inline RealScalar run(const Scalar& x)
     .    {
30,999      return x;
30,999    }
     .  };
     .  
     .  template<typename Scalar>
     .  struct real_default_impl<Scalar,true>
     .  {
     .    typedef typename NumTraits<Scalar>::Real RealScalar;
     .    static inline RealScalar run(const Scalar& x)
     .    {
-- line 76 ----------------------------------------
-- line 91 ----------------------------------------
     .  /****************************************************************************
     .  * Implementation of imag                                                 *
     .  ****************************************************************************/
     .  
     .  template<typename Scalar, bool IsComplex = NumTraits<Scalar>::IsComplex>
     .  struct imag_default_impl
     .  {
     .    typedef typename NumTraits<Scalar>::Real RealScalar;
   168    static inline RealScalar run(const Scalar&)
     .    {
   112      return RealScalar(0);
   168    }
     .  };
     .  
     .  template<typename Scalar>
     .  struct imag_default_impl<Scalar,true>
     .  {
     .    typedef typename NumTraits<Scalar>::Real RealScalar;
     .    static inline RealScalar run(const Scalar& x)
     .    {
-- line 110 ----------------------------------------
-- line 187 ----------------------------------------
     .  
     .  /****************************************************************************
     .  * Implementation of conj                                                 *
     .  ****************************************************************************/
     .  
     .  template<typename Scalar, bool IsComplex = NumTraits<Scalar>::IsComplex>
     .  struct conj_impl
     .  {
 5,076    static inline Scalar run(const Scalar& x)
     .    {
 5,076      return x;
 5,076    }
     .  };
     .  
     .  template<typename Scalar>
     .  struct conj_impl<Scalar,true>
     .  {
     .    static inline Scalar run(const Scalar& x)
     .    {
     .      using std::conj;
-- line 206 ----------------------------------------
-- line 217 ----------------------------------------
     .  /****************************************************************************
     .  * Implementation of abs2                                                 *
     .  ****************************************************************************/
     .  
     .  template<typename Scalar>
     .  struct abs2_impl
     .  {
     .    typedef typename NumTraits<Scalar>::Real RealScalar;
26,601    static inline RealScalar run(const Scalar& x)
     .    {
53,202      return x*x;
26,601    }
     .  };
     .  
     .  template<typename RealScalar>
     .  struct abs2_impl<std::complex<RealScalar> >
     .  {
     .    static inline RealScalar run(const std::complex<RealScalar>& x)
     .    {
     .      return real(x)*real(x) + imag(x)*imag(x);
-- line 236 ----------------------------------------
-- line 549 ----------------------------------------
     .  
     .  /****************************************************************************
     .  * Generic math function                                                    *
     .  ****************************************************************************/
     .  
     .  namespace numext {
     .  
     .  template<typename Scalar>
41,332  inline EIGEN_MATHFUNC_RETVAL(real, Scalar) real(const Scalar& x)
     .  {
41,332    return EIGEN_MATHFUNC_IMPL(real, Scalar)::run(x);
103,330  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10333x)
30,999  }  
     .  
     .  template<typename Scalar>
     .  inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) >::type real_ref(const Scalar& x)
     .  {
     .    return internal::real_ref_impl<Scalar>::run(x);
     .  }
     .  
     .  template<typename Scalar>
     .  inline EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) real_ref(Scalar& x)
     .  {
     .    return EIGEN_MATHFUNC_IMPL(real_ref, Scalar)::run(x);
     .  }
     .  
     .  template<typename Scalar>
   224  inline EIGEN_MATHFUNC_RETVAL(imag, Scalar) imag(const Scalar& x)
     .  {
   224    return EIGEN_MATHFUNC_IMPL(imag, Scalar)::run(x);
   504  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56x)
   168  }
     .  
     .  template<typename Scalar>
     .  inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) >::type imag_ref(const Scalar& x)
     .  {
     .    return internal::imag_ref_impl<Scalar>::run(x);
     .  }
     .  
     .  template<typename Scalar>
     .  inline EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) imag_ref(Scalar& x)
     .  {
     .    return EIGEN_MATHFUNC_IMPL(imag_ref, Scalar)::run(x);
     .  }
     .  
     .  template<typename Scalar>
 6,768  inline EIGEN_MATHFUNC_RETVAL(conj, Scalar) conj(const Scalar& x)
     .  {
 6,768    return EIGEN_MATHFUNC_IMPL(conj, Scalar)::run(x);
16,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1692x)
 5,076  }
     .  
     .  template<typename Scalar>
35,468  inline EIGEN_MATHFUNC_RETVAL(abs2, Scalar) abs2(const Scalar& x)
     .  {
35,468    return EIGEN_MATHFUNC_IMPL(abs2, Scalar)::run(x);
115,271  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8867x)
26,601  }
     .  
     .  template<typename Scalar>
     .  inline EIGEN_MATHFUNC_RETVAL(norm1, Scalar) norm1(const Scalar& x)
     .  {
     .    return EIGEN_MATHFUNC_IMPL(norm1, Scalar)::run(x);
     .  }
     .  
     .  template<typename Scalar>
-- line 610 ----------------------------------------
-- line 645 ----------------------------------------
     .           bool IsInteger>
     .  struct scalar_fuzzy_default_impl {};
     .  
     .  template<typename Scalar>
     .  struct scalar_fuzzy_default_impl<Scalar, false, false>
     .  {
     .    typedef typename NumTraits<Scalar>::Real RealScalar;
     .    template<typename OtherScalar>
12,236    static inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y, const RealScalar& prec)
     .    {
     .      using std::abs;
31,464      return abs(x) <= abs(y) * prec;
38,456  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
 6,992    }
     .    static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar& prec)
     .    {
     .      using std::min;
     .      using std::abs;
     .      return abs(x - y) <= (min)(abs(x), abs(y)) * prec;
     .    }
     .    static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar& prec)
     .    {
-- line 665 ----------------------------------------
-- line 701 ----------------------------------------
     .      return numext::abs2(x - y) <= (min)(numext::abs2(x), numext::abs2(y)) * prec * prec;
     .    }
     .  };
     .  
     .  template<typename Scalar>
     .  struct scalar_fuzzy_impl : scalar_fuzzy_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};
     .  
     .  template<typename Scalar, typename OtherScalar>
10,488  inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y,
     .                                     typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision())
     .  {
10,488    return scalar_fuzzy_impl<Scalar>::template isMuchSmallerThan<OtherScalar>(x, y, precision);
90,896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
 3,496  }
     .  
     .  template<typename Scalar>
     .  inline bool isApprox(const Scalar& x, const Scalar& y,
     .                            typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision())
     .  {
     .    return scalar_fuzzy_impl<Scalar>::isApprox(x, y, precision);
     .  }
     .  
-- line 721 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/EigenBase.h
--------------------------------------------------------------------------------
         Ir 

-- line 18 ----------------------------------------
          .    * In other words, an EigenBase object is an object that can be copied into a MatrixBase.
          .    *
          .    * Besides MatrixBase-derived classes, this also includes special matrix classes such as diagonal matrices, etc.
          .    *
          .    * Notice that this class is trivial, it is only used to disambiguate overloaded functions.
          .    *
          .    * \sa \ref TopicClassHierarchy
          .    */
  5,401,530  template<typename Derived> struct EigenBase
          .  {
          .  //   typedef typename internal::plain_matrix_type<Derived>::type PlainObject;
          .  
          .    typedef typename internal::traits<Derived>::StorageKind StorageKind;
          .    typedef typename internal::traits<Derived>::Index Index;
          .  
          .    /** \returns a reference to the derived object */
 37,431,708    Derived& derived() { return *static_cast<Derived*>(this); }
          .    /** \returns a const reference to the derived object */
238,701,432    const Derived& derived() const { return *static_cast<const Derived*>(this); }
          .  
  5,483,583    inline Derived& const_cast_derived() const
  5,483,583    { return *static_cast<Derived*>(const_cast<EigenBase*>(this)); }
          .    inline const Derived& const_derived() const
          .    { return *static_cast<const Derived*>(this); }
          .  
          .    /** \returns the number of rows. \sa cols(), RowsAtCompileTime */
 85,832,483    inline Index rows() const { return derived().rows(); }
     92,352  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7104x)
          .    /** \returns the number of columns. \sa rows(), ColsAtCompileTime*/
 80,320,438    inline Index cols() const { return derived().cols(); }
    126,910  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
          .    /** \returns the number of coefficients, which is rows()*cols().
          .      * \sa rows(), cols(), SizeAtCompileTime. */
 70,764,115    inline Index size() const { return rows() * cols(); }
  1,615,889  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (45518x)
          .  
          .    /** \internal Don't use it, but do the equivalent: \code dst = *this; \endcode */
          .    template<typename Dest> inline void evalTo(Dest& dst) const
          .    { derived().evalTo(dst); }
          .  
          .    /** \internal Don't use it, but do the equivalent: \code dst += *this; \endcode */
          .    template<typename Dest> inline void addTo(Dest& dst) const
          .    {
-- line 57 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseUnaryOp.h
--------------------------------------------------------------------------------
        Ir 

-- line 51 ----------------------------------------
         .    };
         .  };
         .  }
         .  
         .  template<typename UnaryOp, typename XprType, typename StorageKind>
         .  class CwiseUnaryOpImpl;
         .  
         .  template<typename UnaryOp, typename XprType>
 6,423,530  class CwiseUnaryOp : internal::no_assignment_operator,
14,463,891  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (159822x)
         .    public CwiseUnaryOpImpl<UnaryOp, XprType, typename internal::traits<XprType>::StorageKind>
         .  {
         .    public:
         .  
         .      typedef typename CwiseUnaryOpImpl<UnaryOp, XprType,typename internal::traits<XprType>::StorageKind>::Base Base;
         .      EIGEN_GENERIC_PUBLIC_INTERFACE(CwiseUnaryOp)
         .  
 1,045,698      inline CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())
 3,565,651        : m_xpr(xpr), m_functor(func) {}
   615,888  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6768x)
         .  
18,957,173      EIGEN_STRONG_INLINE Index rows() const { return m_xpr.rows(); }
    48,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
 3,187,356      EIGEN_STRONG_INLINE Index cols() const { return m_xpr.cols(); }
   600,782  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42913x)
         .  
         .      /** \returns the functor representing the unary operation */
32,858,182      const UnaryOp& functor() const { return m_functor; }
         .  
         .      /** \returns the nested expression */
         .      const typename internal::remove_all<typename XprType::Nested>::type&
29,567,096      nestedExpression() const { return m_xpr; }
         .  
         .      /** \returns the nested expression */
         .      typename internal::remove_all<typename XprType::Nested>::type&
         .      nestedExpression() { return m_xpr.const_cast_derived(); }
         .  
         .    protected:
         .      typename XprType::Nested m_xpr;
         .      const UnaryOp m_functor;
         .  };
         .  
         .  // This is the generic implementation for dense storage.
         .  // It can be used for any expression types implementing the dense concept.
         .  template<typename UnaryOp, typename XprType>
 1,742,830  class CwiseUnaryOpImpl<UnaryOp,XprType,Dense>
   107,355  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2105x)
         .    : public internal::dense_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type
         .  {
         .    public:
         .  
         .      typedef CwiseUnaryOp<UnaryOp, XprType> Derived;
         .      typedef typename internal::dense_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type Base;
         .      EIGEN_DENSE_PUBLIC_INTERFACE(Derived)
         .  
12,756,765      EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const
         .      {
38,921,463        return derived().functor()(derived().nestedExpression().coeff(rowId, colId));
287,075,586  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10376226x)
 8,972,439      }
         .  
         .      template<int LoadMode>
         .      EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const
         .      {
         .        return derived().functor().packetOp(derived().nestedExpression().template packet<LoadMode>(rowId, colId));
         .      }
         .  
 1,609,803      EIGEN_STRONG_INLINE const Scalar coeff(Index index) const
         .      {
 5,742,495        return derived().functor()(derived().nestedExpression().coeff(index));
 6,676,296  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (455202x)
 1,272,150      }
         .  
         .      template<int LoadMode>
12,889,595      EIGEN_STRONG_INLINE PacketScalar packet(Index index) const
         .      {
54,136,299        return derived().functor().packetOp(derived().nestedExpression().template packet<LoadMode>(index));
 3,870,344  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (135012x)
 5,155,838      }
         .  };
         .  
         .  } // end namespace Eigen
         .  
         .  #endif // EIGEN_CWISE_UNARY_OP_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Stride.h
--------------------------------------------------------------------------------
       Ir 

-- line 46 ----------------------------------------
        .    public:
        .      typedef DenseIndex Index;
        .      enum {
        .        InnerStrideAtCompileTime = _InnerStrideAtCompileTime,
        .        OuterStrideAtCompileTime = _OuterStrideAtCompileTime
        .      };
        .  
        .      /** Default constructor, for use when strides are fixed at compile time */
  170,984      Stride()
  384,714        : m_outer(OuterStrideAtCompileTime), m_inner(InnerStrideAtCompileTime)
1,196,888  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (85492x)
        .      {
        .        eigen_assert(InnerStrideAtCompileTime != Dynamic && OuterStrideAtCompileTime != Dynamic);
  128,238      }
        .  
        .      /** Constructor allowing to pass the strides at runtime */
   39,348      Stride(Index outerStride, Index innerStride)
   72,138        : m_outer(outerStride), m_inner(innerStride)
  163,950  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (13116x)
        .      {
   65,580        eigen_assert(innerStride>=0 && outerStride>=0);
   19,674      }
        .  
        .      /** Copy constructor */
1,101,440      Stride(const Stride& other)
3,744,896        : m_outer(other.outer()), m_inner(other.inner())
9,337,854  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (655288x)
  660,864      {}
        .  
        .      /** \returns the outer stride */
2,990,214      inline Index outer() const { return m_outer.value(); }
2,306,624  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (288328x)
        .      /** \returns the inner stride */
1,542,016      inline Index inner() const { return m_inner.value(); }
  338,796  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56466x)
        .  
        .    protected:
        .      internal::variable_if_dynamic<Index, OuterStrideAtCompileTime> m_outer;
        .      internal::variable_if_dynamic<Index, InnerStrideAtCompileTime> m_inner;
        .  };
        .  
        .  /** \brief Convenience specialization of Stride to specify only an inner stride
        .    * See class Map for some examples */
-- line 83 ----------------------------------------
-- line 89 ----------------------------------------
        .      typedef DenseIndex Index;
        .      InnerStride() : Base() {}
        .      InnerStride(Index v) : Base(0, v) {}
        .  };
        .  
        .  /** \brief Convenience specialization of Stride to specify only an outer stride
        .    * See class Map for some examples */
        .  template<int Value = Dynamic>
2,129,686  class OuterStride : public Stride<Value, 0>
13,597,226  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (163822x)
        .  {
        .      typedef Stride<Value, 0> Base;
        .    public:
        .      typedef DenseIndex Index;
        .      OuterStride() : Base() {}
   91,812      OuterStride(Index v) : Base(v,0) {}
  367,248  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6558x)
        .  };
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_STRIDE_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h
--------------------------------------------------------------------------------
       Ir 

-- line 98 ----------------------------------------
        .                          ? int(internal::scalar_product_traits<LHS, RHS>::Defined) \
        .                          : int(internal::is_same<LHS, RHS>::value)), \
        .      YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
        .  
        .  template<typename BinaryOp, typename Lhs, typename Rhs, typename StorageKind>
        .  class CwiseBinaryOpImpl;
        .  
        .  template<typename BinaryOp, typename Lhs, typename Rhs>
  770,000  class CwiseBinaryOp : internal::no_assignment_operator,
2,380,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (21000x)
        .    public CwiseBinaryOpImpl<
        .            BinaryOp, Lhs, Rhs,
        .            typename internal::promote_storage_type<typename internal::traits<Lhs>::StorageKind,
        .                                             typename internal::traits<Rhs>::StorageKind>::ret>
        .  {
        .    public:
        .  
        .      typedef typename CwiseBinaryOpImpl<
-- line 114 ----------------------------------------
-- line 117 ----------------------------------------
        .                                           typename internal::traits<Rhs>::StorageKind>::ret>::Base Base;
        .      EIGEN_GENERIC_PUBLIC_INTERFACE(CwiseBinaryOp)
        .  
        .      typedef typename internal::nested<Lhs>::type LhsNested;
        .      typedef typename internal::nested<Rhs>::type RhsNested;
        .      typedef typename internal::remove_reference<LhsNested>::type _LhsNested;
        .      typedef typename internal::remove_reference<RhsNested>::type _RhsNested;
        .  
  561,160      EIGEN_STRONG_INLINE CwiseBinaryOp(const Lhs& aLhs, const Rhs& aRhs, const BinaryOp& func = BinaryOp())
1,539,248        : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
2,383,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (17500x)
        .      {
        .        EIGEN_CHECK_BINARY_COMPATIBILIY(BinaryOp,typename Lhs::Scalar,typename Rhs::Scalar);
        .        // require the sizes to match
        .        EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Lhs, Rhs)
1,683,480        eigen_assert(aLhs.rows() == aRhs.rows() && aLhs.cols() == aRhs.cols());
  378,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14000x)
  350,725      }
        .  
  785,528      EIGEN_STRONG_INLINE Index rows() const {
        .        // return the fixed size type if available to enable compile time optimizations
        .        if (internal::traits<typename internal::remove_all<LhsNested>::type>::RowsAtCompileTime==Dynamic)
  785,528          return m_rhs.rows();
  658,764  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36598x)
        .        else
        .          return m_lhs.rows();
  392,764      }
  667,928      EIGEN_STRONG_INLINE Index cols() const {
        .        // return the fixed size type if available to enable compile time optimizations
        .        if (internal::traits<typename internal::remove_all<LhsNested>::type>::ColsAtCompileTime==Dynamic)
   34,304          return m_rhs.cols();
  257,280  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8576x)
        .        else
  544,024          return m_lhs.cols();
  168,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7000x)
  333,964      }
        .  
        .      /** \returns the left hand side nested expression */
2,330,790      const _LhsNested& lhs() const { return m_lhs; }
        .      /** \returns the right hand side nested expression */
2,381,190      const _RhsNested& rhs() const { return m_rhs; }
        .      /** \returns the functor representing the binary operation */
2,381,190      const BinaryOp& functor() const { return m_functor; }
        .  
        .    protected:
        .      LhsNested m_lhs;
        .      RhsNested m_rhs;
        .      const BinaryOp m_functor;
        .  };
        .  
        .  template<typename BinaryOp, typename Lhs, typename Rhs>
  701,450  class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Dense>
  571,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11200x)
        .    : public internal::dense_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type
        .  {
        .      typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;
        .    public:
        .  
        .      typedef typename internal::dense_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE( Derived )
        .  
  735,392      EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const
        .      {
2,941,568        return derived().functor()(derived().lhs().coeff(rowId, colId),
19,870,592  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (735392x)
  945,504                                   derived().rhs().coeff(rowId, colId));
2,311,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (210112x)
  525,280      }
        .  
        .      template<int LoadMode>
        .      EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const
        .      {
        .        return derived().functor().packetOp(derived().lhs().template packet<LoadMode>(rowId, colId),
        .                                            derived().rhs().template packet<LoadMode>(rowId, colId));
        .      }
        .  
  263,275      EIGEN_STRONG_INLINE const Scalar coeff(Index index) const
        .      {
1,091,068        return derived().functor()(derived().lhs().coeff(index),
  790,356  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (65863x)
  365,090                                   derived().rhs().coeff(index));
  508,086  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18818x)
  203,464      }
        .  
        .      template<int LoadMode>
  960,515      EIGEN_STRONG_INLINE PacketScalar packet(Index index) const
        .      {
1,152,618        return derived().functor().packetOp(derived().lhs().template packet<LoadMode>(index),
   58,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
5,186,781                                            derived().rhs().template packet<LoadMode>(index));
2,923,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (29400x)
  384,206      }
        .  };
        .  
        .  /** replaces \c *this by \c *this - \a other.
        .    *
        .    * \returns a reference to \c *this
        .    */
        .  template<typename Derived>
        .  template<typename OtherDerived>
        .  EIGEN_STRONG_INLINE Derived &
  593,065  MatrixBase<Derived>::operator-=(const MatrixBase<OtherDerived> &other)
        .  {
1,423,356    SelfCwiseBinaryOp<internal::scalar_difference_op<Scalar>, Derived, OtherDerived> tmp(derived());
  363,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10290x)
  948,904    tmp = other.derived();
21,079,223  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
  355,839    return derived();
   24,010  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
  237,226  }
        .  
        .  /** replaces \c *this by \c *this + \a other.
        .    *
        .    * \returns a reference to \c *this
        .    */
        .  template<typename Derived>
        .  template<typename OtherDerived>
        .  EIGEN_STRONG_INLINE Derived &
   17,150  MatrixBase<Derived>::operator+=(const MatrixBase<OtherDerived>& other)
        .  {
   41,160    SelfCwiseBinaryOp<internal::scalar_sum_op<Scalar>, Derived, OtherDerived> tmp(derived());
  363,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10290x)
   27,440    tmp = other.derived();
14,904,754  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
   10,290    return derived();
   24,010  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
    6,860  }
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_CWISE_BINARY_OP_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_algobase.h
--------------------------------------------------------------------------------
       Ir 

-- line 187 ----------------------------------------
        .     *
        .     *  This is the simple classic generic implementation.  It will work on
        .     *  temporary expressions, since they are only evaluated once, unlike a
        .     *  preprocessor macro.
        .    */
        .    template<typename _Tp>
        .      _GLIBCXX14_CONSTEXPR
        .      inline const _Tp&
1,494,108      min(const _Tp& __a, const _Tp& __b)
        .      {
        .        // concept requirements
        .        __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
        .        //return __b < __a ? __b : __a;
2,241,162        if (__b < __a)
    1,510  	return __b;
  372,772        return __a;
  747,054      }
        .  
        .    /**
        .     *  @brief This does what you think it does.
        .     *  @ingroup sorting_algorithms
        .     *  @param  __a  A thing of arbitrary type.
        .     *  @param  __b  Another thing of arbitrary type.
        .     *  @return   The greater of the parameters.
        .     *
        .     *  This is the simple classic generic implementation.  It will work on
        .     *  temporary expressions, since they are only evaluated once, unlike a
        .     *  preprocessor macro.
        .    */
        .    template<typename _Tp>
        .      _GLIBCXX14_CONSTEXPR
        .      inline const _Tp&
  813,808      max(const _Tp& __a, const _Tp& __b)
        .      {
        .        // concept requirements
        .        __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
        .        //return  __a < __b ? __b : __a;
1,220,712        if (__a < __b)
  401,816  	return __b;
    2,544        return __a;
  406,904      }
        .  
        .    /**
        .     *  @brief This does what you think it does.
        .     *  @ingroup sorting_algorithms
        .     *  @param  __a  A thing of arbitrary type.
        .     *  @param  __b  Another thing of arbitrary type.
        .     *  @param  __comp  A @link comparison_functors comparison functor@endlink.
        .     *  @return   The lesser of the parameters.
-- line 235 ----------------------------------------
-- line 274 ----------------------------------------
        .    // normally) otherwise return it untouched.  See copy, fill, ... 
        .    template<typename _Iterator>
        .      struct _Niter_base
        .      : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
        .      { };
        .  
        .    template<typename _Iterator>
        .      inline typename _Niter_base<_Iterator>::iterator_type
   68,996      __niter_base(_Iterator __it)
   86,245      { return std::_Niter_base<_Iterator>::_S_base(__it); }
    8,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1200x)
        .  
        .    // Likewise, for move_iterator.
        .    template<typename _Iterator>
        .      struct _Miter_base
        .      : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
        .      { };
        .  
        .    template<typename _Iterator>
        .      inline typename _Miter_base<_Iterator>::iterator_type
   45,440      __miter_base(_Iterator __it)
   56,800      { return std::_Miter_base<_Iterator>::_S_base(__it); }
      576  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (32x)
        .  
        .    // All of these auxiliary structs serve two purposes.  (1) Replace
        .    // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
        .    // because the input and output ranges are permitted to overlap.)
        .    // (2) If we're using random access iterators, then write the loop as
        .    // a for loop with an explicit count.
        .  
        .    template<bool, bool, typename>
-- line 302 ----------------------------------------
-- line 365 ----------------------------------------
        .      };
        .  #endif
        .  
        .    template<bool _IsMove>
        .      struct __copy_move<_IsMove, true, random_access_iterator_tag>
        .      {
        .        template<typename _Tp>
        .          static _Tp*
   34,080          __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
        .          {
        .  #if __cplusplus >= 201103L
        .  	  // trivial types can have deleted assignment
        .  	  static_assert( is_copy_assignable<_Tp>::value,
        .  	                 "type is not assignable" );
        .  #endif
   34,080  	  const ptrdiff_t _Num = __last - __first;
   11,360  	  if (_Num)
   39,207  	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
  158,249  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5448x)
   22,720  	  return __result + _Num;
   11,360  	}
        .      };
        .  
        .    template<bool _IsMove, typename _II, typename _OI>
        .      inline _OI
   34,080      __copy_move_a(_II __first, _II __last, _OI __result)
        .      {
        .        typedef typename iterator_traits<_II>::value_type _ValueTypeI;
        .        typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
        .        typedef typename iterator_traits<_II>::iterator_category _Category;
        .        const bool __simple = (__is_trivial(_ValueTypeI)
        .  	                     && __is_pointer<_II>::__value
        .  	                     && __is_pointer<_OI>::__value
    5,680  			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
        .  
        .        return std::__copy_move<_IsMove, __simple,
   34,080  	                      _Category>::__copy_m(__first, __last, __result);
  310,898  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5453x)
   11,360      }
        .  
        .    // Helpers for streambuf iterators (either istream or ostream).
        .    // NB: avoid including <iosfwd>, relatively large.
        .    template<typename _CharT>
        .      struct char_traits;
        .  
        .    template<typename _CharT, typename _Traits>
        .      class istreambuf_iterator;
-- line 409 ----------------------------------------
-- line 426 ----------------------------------------
        .    template<bool _IsMove, typename _CharT>
        .      typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
        .  				    _CharT*>::__type
        .      __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
        .  		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
        .  
        .    template<bool _IsMove, typename _II, typename _OI>
        .      inline _OI
   45,440      __copy_move_a2(_II __first, _II __last, _OI __result)
        .      {
   82,856        return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
   26,207  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1077x)
        .  					     std::__niter_base(__last),
   38,002  					     std::__niter_base(__result)));
   26,284  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (359x)
   28,400      }
        .  
        .    /**
        .     *  @brief Copies the range [first,last) into result.
        .     *  @ingroup mutating_algorithms
        .     *  @param  __first  An input iterator.
        .     *  @param  __last   An input iterator.
        .     *  @param  __result An output iterator.
        .     *  @return   result + (first - last)
-- line 447 ----------------------------------------
-- line 452 ----------------------------------------
        .     *  optimizations such as unrolling).  Result may not be contained within
        .     *  [first,last); the copy_backward function should be used instead.
        .     *
        .     *  Note that the end of the output range is permitted to be contained
        .     *  within [first,last).
        .    */
        .    template<typename _II, typename _OI>
        .      inline _OI
   39,760      copy(_II __first, _II __last, _OI __result)
        .      {
        .        // concept requirements
        .        __glibcxx_function_requires(_InputIteratorConcept<_II>)
        .        __glibcxx_function_requires(_OutputIteratorConcept<_OI,
        .  	    typename iterator_traits<_II>::value_type>)
        .        __glibcxx_requires_valid_range(__first, __last);
        .  
        .        return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
   45,440  	      (std::__miter_base(__first), std::__miter_base(__last),
  173,196  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10188x)
   28,400  	       __result));
1,044,270  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5094x)
   22,720      }
        .  
        .  #if __cplusplus >= 201103L
        .    /**
        .     *  @brief Moves the range [first,last) into result.
        .     *  @ingroup mutating_algorithms
        .     *  @param  __first  An input iterator.
        .     *  @param  __last   An input iterator.
        .     *  @param  __result An output iterator.
-- line 479 ----------------------------------------
-- line 753 ----------------------------------------
        .  	   __niter > 0; --__niter, ++__first)
        .  	*__first = __value;
        .        return __first;
        .      }
        .  
        .    template<typename _OutputIterator, typename _Size, typename _Tp>
        .      inline typename
        .      __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
    1,045      __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
        .      {
      627        const _Tp __tmp = __value;
    4,101        for (__decltype(__n + 0) __niter = __n;
        .  	   __niter > 0; --__niter, ++__first)
    1,959  	*__first = __tmp;
      209        return __first;
      418      }
        .  
        .    template<typename _Size, typename _Tp>
        .      inline typename
        .      __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
        .      __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
        .      {
        .        std::__fill_a(__first, __first + __n, __c);
        .        return __first + __n;
-- line 776 ----------------------------------------
-- line 788 ----------------------------------------
        .     *  types filling contiguous areas of memory, this becomes an inline call
        .     *  to @c memset or @ wmemset.
        .     *
        .     *  _GLIBCXX_RESOLVE_LIB_DEFECTS
        .     *  DR 865. More algorithms that throw away information
        .    */
        .    template<typename _OI, typename _Size, typename _Tp>
        .      inline _OI
    1,254      fill_n(_OI __first, _Size __n, const _Tp& __value)
        .      {
        .        // concept requirements
        .        __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
        .  
    1,881        return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
       65  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
      418      }
        .  
        .    template<bool _BoolType>
        .      struct __equal
        .      {
        .        template<typename _II1, typename _II2>
        .          static bool
        .          equal(_II1 __first1, _II1 __last1, _II2 __first2)
        .          {
-- line 810 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h
--------------------------------------------------------------------------------
        Ir 

-- line 26 ----------------------------------------
         .    *
         .    * This class defines the \c operator() \c const function and friends, which can be used to read specific
         .    * entries of a matrix or array.
         .    * 
         .    * \sa DenseCoeffsBase<Derived, WriteAccessors>, DenseCoeffsBase<Derived, DirectAccessors>,
         .    *     \ref TopicClassHierarchy
         .    */
         .  template<typename Derived>
 8,936,180  class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>
    60,081  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8583x)
         .  {
         .    public:
         .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
         .      typedef typename internal::traits<Derived>::Index Index;
         .      typedef typename internal::traits<Derived>::Scalar Scalar;
         .      typedef typename internal::packet_traits<Scalar>::type PacketScalar;
         .  
         .      // Explanation for this CoeffReturnType typedef.
-- line 42 ----------------------------------------
-- line 56 ----------------------------------------
         .                       >::type PacketReturnType;
         .  
         .      typedef EigenBase<Derived> Base;
         .      using Base::rows;
         .      using Base::cols;
         .      using Base::size;
         .      using Base::derived;
         .  
 1,504,660      EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const
         .      {
         .        return int(Derived::RowsAtCompileTime) == 1 ? 0
         .            : int(Derived::ColsAtCompileTime) == 1 ? inner
         .            : int(Derived::Flags)&RowMajorBit ? outer
   300,932            : inner;
   601,864      }
         .  
 1,504,660      EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const
         .      {
         .        return int(Derived::ColsAtCompileTime) == 1 ? 0
         .            : int(Derived::RowsAtCompileTime) == 1 ? inner
         .            : int(Derived::Flags)&RowMajorBit ? inner
   300,932            : outer;
   601,864      }
         .  
         .      /** Short version: don't use this function, use
         .        * \link operator()(Index,Index) const \endlink instead.
         .        *
         .        * Long version: this function is similar to
         .        * \link operator()(Index,Index) const \endlink, but without the assertion.
         .        * Use this for limiting the performance cost of debugging code when doing
         .        * repeated coefficient access. Only use this when it is guaranteed that the
         .        * parameters \a row and \a col are in range.
         .        *
         .        * If EIGEN_INTERNAL_DEBUGGING is defined, an assertion will be made, making this
         .        * function equivalent to \link operator()(Index,Index) const \endlink.
         .        *
         .        * \sa operator()(Index,Index) const, coeffRef(Index,Index), coeff(Index) const
         .        */
    20,832      EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const
         .      {
         .        eigen_internal_assert(row >= 0 && row < rows()
         .                          && col >= 0 && col < cols());
    34,720        return derived().coeff(row, col);
   690,928  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6944x)
    10,416      }
         .  
    24,304      EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const
         .      {
    48,608        return coeff(rowIndexByOuterInner(outer, inner),
    62,496  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6944x)
    20,832                     colIndexByOuterInner(outer, inner));
   760,368  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3472x)
    17,360      }
         .  
         .      /** \returns the coefficient at given the given row and column.
         .        *
         .        * \sa operator()(Index,Index), operator[](Index)
         .        */
12,332,970      EIGEN_STRONG_INLINE CoeffReturnType operator()(Index row, Index col) const
         .      {
69,886,830        eigen_assert(row >= 0 && row < rows()
152,106,630  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4110990x)
         .            && col >= 0 && col < cols());
18,499,455        return derived().coeff(row, col);
98,663,760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4110990x)
 4,110,990      }
         .  
         .      /** Short version: don't use this function, use
         .        * \link operator[](Index) const \endlink instead.
         .        *
         .        * Long version: this function is similar to
         .        * \link operator[](Index) const \endlink, but without the assertion.
         .        * Use this for limiting the performance cost of debugging code when doing
         .        * repeated coefficient access. Only use this when it is guaranteed that the
-- line 124 ----------------------------------------
-- line 126 ----------------------------------------
         .        *
         .        * If EIGEN_INTERNAL_DEBUGGING is defined, an assertion will be made, making this
         .        * function equivalent to \link operator[](Index) const \endlink.
         .        *
         .        * \sa operator[](Index) const, coeffRef(Index), coeff(Index,Index) const
         .        */
         .  
         .      EIGEN_STRONG_INLINE CoeffReturnType
     8,740      coeff(Index index) const
         .      {
         .        eigen_internal_assert(index >= 0 && index < size());
    13,984        return derived().coeff(index);
   129,352  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
     3,496      }
         .  
         .  
         .      /** \returns the coefficient at given index.
         .        *
         .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
         .        *
         .        * \sa operator[](Index), operator()(Index,Index) const, x() const, y() const,
         .        * z() const, w() const
-- line 146 ----------------------------------------
-- line 163 ----------------------------------------
         .        *
         .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
         .        *
         .        * \sa operator[](Index), operator()(Index,Index) const, x() const, y() const,
         .        * z() const, w() const
         .        */
         .  
         .      EIGEN_STRONG_INLINE CoeffReturnType
       400      operator()(Index index) const
         .      {
     1,040        eigen_assert(index >= 0 && index < size());
     7,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (80x)
       640        return derived().coeff(index);
     2,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
       160      }
         .  
         .      /** equivalent to operator[](0).  */
         .  
         .      EIGEN_STRONG_INLINE CoeffReturnType
         .      x() const { return (*this)[0]; }
         .  
         .      /** equivalent to operator[](1).  */
         .  
-- line 183 ----------------------------------------
-- line 266 ----------------------------------------
         .    *
         .    * This class defines the non-const \c operator() function and friends, which can be used to write specific
         .    * entries of a matrix or array. This class inherits DenseCoeffsBase<Derived, ReadOnlyAccessors> which
         .    * defines the const variant for reading specific entries.
         .    * 
         .    * \sa DenseCoeffsBase<Derived, DirectAccessors>, \ref TopicClassHierarchy
         .    */
         .  template<typename Derived>
 4,274,760  class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>
   118,602  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6589x)
         .  {
         .    public:
         .  
         .      typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;
         .  
         .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
         .      typedef typename internal::traits<Derived>::Index Index;
         .      typedef typename internal::traits<Derived>::Scalar Scalar;
-- line 282 ----------------------------------------
-- line 326 ----------------------------------------
         .      }
         .  
         .      /** \returns a reference to the coefficient at given the given row and column.
         .        *
         .        * \sa operator[](Index)
         .        */
         .  
         .      EIGEN_STRONG_INLINE Scalar&
 4,736,142      operator()(Index row, Index col)
         .      {
26,838,138        eigen_assert(row >= 0 && row < rows()
58,412,418  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1578714x)
         .            && col >= 0 && col < cols());
 7,104,213        return derived().coeffRef(row, col);
37,889,136  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1578714x)
 1,578,714      }
         .  
         .  
         .      /** Short version: don't use this function, use
         .        * \link operator[](Index) \endlink instead.
         .        *
         .        * Long version: this function is similar to
         .        * \link operator[](Index) \endlink, but without the assertion.
         .        * Use this for limiting the performance cost of debugging code when doing
-- line 347 ----------------------------------------
-- line 384 ----------------------------------------
         .        * This is synonymous to operator[](Index).
         .        *
         .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
         .        *
         .        * \sa operator[](Index) const, operator()(Index,Index), x(), y(), z(), w()
         .        */
         .  
         .      EIGEN_STRONG_INLINE Scalar&
18,023,075      operator()(Index index)
         .      {
46,859,995        eigen_assert(index >= 0 && index < size());
317,206,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3604615x)
28,836,920        return derived().coeffRef(index);
108,138,450  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7209230x)
 7,209,230      }
         .  
         .      /** equivalent to operator[](0).  */
         .  
         .      EIGEN_STRONG_INLINE Scalar&
         .      x() { return (*this)[0]; }
         .  
         .      /** equivalent to operator[](1).  */
         .  
-- line 404 ----------------------------------------
-- line 468 ----------------------------------------
         .        *
         .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
         .        * with usual assignments.
         .        *
         .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
         .        */
         .  
         .      template<typename OtherDerived>
 1,982,240      EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)
         .      {
         .        eigen_internal_assert(row >= 0 && row < rows()
         .                          && col >= 0 && col < cols());
 5,203,380        derived().coeffRef(row, col) = other.derived().coeff(row, col);
   894,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15040x)
 1,238,900      }
         .  
         .      /** \internal Copies the coefficient at the given index of other into *this.
         .        *
         .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
         .        * with usual assignments.
         .        *
         .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
         .        */
         .  
         .      template<typename OtherDerived>
   928,970      EIGEN_STRONG_INLINE void copyCoeff(Index index, const DenseBase<OtherDerived>& other)
         .      {
         .        eigen_internal_assert(index >= 0 && index < size());
 2,521,490        derived().coeffRef(index) = other.derived().coeff(index);
 6,906,108  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (122232x)
   663,550      }
         .  
         .  
         .      template<typename OtherDerived>
 1,738,380      EIGEN_STRONG_INLINE void copyCoeffByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)
         .      {
 1,738,380        const Index row = rowIndexByOuterInner(outer,inner);
     5,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
 1,738,380        const Index col = colIndexByOuterInner(outer,inner);
     5,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
         .        // derived() is important here: copyCoeff() may be reimplemented in Derived!
 2,235,060        derived().copyCoeff(row, col, other);
   119,280  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
   745,020      }
         .  
         .      /** \internal Copies the packet at position (row,col) of other into *this.
         .        *
         .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
         .        * with usual assignments.
         .        *
         .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
         .        */
         .  
         .      template<typename OtherDerived, int StoreMode, int LoadMode>
   343,840      EIGEN_STRONG_INLINE void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)
         .      {
         .        eigen_internal_assert(row >= 0 && row < rows()
         .                          && col >= 0 && col < cols());
   933,280        derived().template writePacket<StoreMode>(row, col,
15,227,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (196480x)
         .          other.derived().template packet<LoadMode>(row, col));
   147,360      }
         .  
         .      /** \internal Copies the packet at the given index of other into *this.
         .        *
         .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
         .        * with usual assignments.
         .        *
         .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
         .        */
         .  
         .      template<typename OtherDerived, int StoreMode, int LoadMode>
 1,493,712      EIGEN_STRONG_INLINE void copyPacket(Index index, const DenseBase<OtherDerived>& other)
         .      {
         .        eigen_internal_assert(index >= 0 && index < size());
 4,481,136        derived().template writePacket<StoreMode>(index,
 6,678,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33600x)
         .          other.derived().template packet<LoadMode>(index));
   746,856      }
         .  
         .      /** \internal */
         .      template<typename OtherDerived, int StoreMode, int LoadMode>
   343,840      EIGEN_STRONG_INLINE void copyPacketByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)
         .      {
   343,840        const Index row = rowIndexByOuterInner(outer,inner);
   442,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (49120x)
   343,840        const Index col = colIndexByOuterInner(outer,inner);
   442,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (49120x)
         .        // derived() is important here: copyCoeff() may be reimplemented in Derived!
   442,080        derived().template copyPacket< OtherDerived, StoreMode, LoadMode>(row, col, other);
17,044,640  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (98240x)
   147,360      }
         .  #endif
         .  
         .  };
         .  
         .  /** \brief Base class providing direct read-only coefficient access to matrices and arrays.
         .    * \ingroup Core_Module
         .    * \tparam Derived Type of the derived class
         .    * \tparam #DirectAccessors Constant indicating direct access
-- line 557 ----------------------------------------
-- line 558 ----------------------------------------
         .    *
         .    * This class defines functions to work with strides which can be used to access entries directly. This class
         .    * inherits DenseCoeffsBase<Derived, ReadOnlyAccessors> which defines functions to access entries read-only using
         .    * \c operator() .
         .    *
         .    * \sa \ref TopicClassHierarchy
         .    */
         .  template<typename Derived>
 1,633,590  class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>
    31,464  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
         .  {
         .    public:
         .  
         .      typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;
         .      typedef typename internal::traits<Derived>::Index Index;
         .      typedef typename internal::traits<Derived>::Scalar Scalar;
         .      typedef typename NumTraits<Scalar>::Real RealScalar;
         .  
-- line 574 ----------------------------------------
-- line 576 ----------------------------------------
         .      using Base::cols;
         .      using Base::size;
         .      using Base::derived;
         .  
         .      /** \returns the pointer increment between two consecutive elements within a slice in the inner direction.
         .        *
         .        * \sa outerStride(), rowStride(), colStride()
         .        */
 3,060,692      inline Index innerStride() const
         .      {
 3,825,865        return derived().innerStride();
 2,205,193  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (93838x)
 1,530,346      }
         .  
         .      /** \returns the pointer increment between two consecutive inner slices (for example, between two consecutive columns
         .        *          in a column-major matrix).
         .        *
         .        * \sa innerStride(), rowStride(), colStride()
         .        */
   591,948      inline Index outerStride() const
         .      {
   739,935        return derived().outerStride();
   589,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (78632x)
   295,974      }
         .  
         .      // FIXME shall we remove it ?
         .      inline Index stride() const
         .      {
         .        return Derived::IsVectorAtCompileTime ? innerStride() : outerStride();
         .      }
         .  
         .      /** \returns the pointer increment between two consecutive rows.
         .        *
         .        * \sa innerStride(), outerStride(), colStride()
         .        */
   591,948      inline Index rowStride() const
         .      {
   443,961        return Derived::IsRowMajor ? outerStride() : innerStride();
   867,576  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (23448x)
   295,974      }
         .  
         .      /** \returns the pointer increment between two consecutive columns.
         .        *
         .        * \sa innerStride(), outerStride(), rowStride()
         .        */
   591,948      inline Index colStride() const
         .      {
   443,961        return Derived::IsRowMajor ? innerStride() : outerStride();
       891  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
   295,974      }
         .  };
         .  
         .  /** \brief Base class providing direct read/write coefficient access to matrices and arrays.
         .    * \ingroup Core_Module
         .    * \tparam Derived Type of the derived class
         .    * \tparam #DirectWriteAccessors Constant indicating direct access
         .    *
         .    * This class defines functions to work with strides which can be used to access entries directly. This class
         .    * inherits DenseCoeffsBase<Derived, WriteAccessors> which defines functions to access entries read/write using
         .    * \c operator().
         .    *
         .    * \sa \ref TopicClassHierarchy
         .    */
         .  template<typename Derived>
 4,208,850  class DenseCoeffsBase<Derived, DirectWriteAccessors>
   812,087  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (28003x)
         .    : public DenseCoeffsBase<Derived, WriteAccessors>
         .  {
         .    public:
         .  
         .      typedef DenseCoeffsBase<Derived, WriteAccessors> Base;
         .      typedef typename internal::traits<Derived>::Index Index;
         .      typedef typename internal::traits<Derived>::Scalar Scalar;
         .      typedef typename NumTraits<Scalar>::Real RealScalar;
-- line 644 ----------------------------------------
-- line 647 ----------------------------------------
         .      using Base::cols;
         .      using Base::size;
         .      using Base::derived;
         .  
         .      /** \returns the pointer increment between two consecutive elements within a slice in the inner direction.
         .        *
         .        * \sa outerStride(), rowStride(), colStride()
         .        */
26,868,488      inline Index innerStride() const
         .      {
33,585,610        return derived().innerStride();
119,249,810  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5074460x)
13,434,244      }
         .  
         .      /** \returns the pointer increment between two consecutive inner slices (for example, between two consecutive columns
         .        *          in a column-major matrix).
         .        *
         .        * \sa innerStride(), rowStride(), colStride()
         .        */
 7,808,756      inline Index outerStride() const
         .      {
 9,760,945        return derived().outerStride();
    52,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6992x)
 3,904,378      }
         .  
         .      // FIXME shall we remove it ?
         .      inline Index stride() const
         .      {
         .        return Derived::IsVectorAtCompileTime ? innerStride() : outerStride();
         .      }
         .  
         .      /** \returns the pointer increment between two consecutive rows.
         .        *
         .        * \sa innerStride(), outerStride(), colStride()
         .        */
 7,808,756      inline Index rowStride() const
         .      {
 5,856,567        return Derived::IsRowMajor ? outerStride() : innerStride();
   567,297  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (21011x)
 3,904,378      }
         .  
         .      /** \returns the pointer increment between two consecutive columns.
         .        *
         .        * \sa innerStride(), outerStride(), rowStride()
         .        */
 7,808,756      inline Index colStride() const
         .      {
 5,856,567        return Derived::IsRowMajor ? innerStride() : outerStride();
    94,392  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
 3,904,378      }
         .  };
         .  
         .  namespace internal {
         .  
         .  template<typename Derived, bool JustReturnZero>
         .  struct first_aligned_impl
         .  {
   120,948    static inline typename Derived::Index run(const Derived&)
   120,948    { return 0; }
         .  };
         .  
         .  template<typename Derived>
         .  struct first_aligned_impl<Derived, false>
         .  {
         .    static inline typename Derived::Index run(const Derived& m)
         .    {
         .      return internal::first_aligned(&m.const_cast_derived().coeffRef(0,0), m.size());
-- line 709 ----------------------------------------
-- line 711 ----------------------------------------
         .  };
         .  
         .  /** \internal \returns the index of the first element of the array that is well aligned for vectorization.
         .    *
         .    * There is also the variant first_aligned(const Scalar*, Integer) defined in Memory.h. See it for more
         .    * documentation.
         .    */
         .  template<typename Derived>
   161,264  static inline typename Derived::Index first_aligned(const Derived& m)
         .  {
         .    return first_aligned_impl
         .            <Derived, (Derived::Flags & AlignedBit) || !(Derived::Flags & DirectAccessBit)>
   120,948            ::run(m);
       140  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
    80,632  }
         .  
         .  template<typename Derived, bool HasDirectAccess = has_direct_access<Derived>::ret>
         .  struct inner_stride_at_compile_time
         .  {
         .    enum { ret = traits<Derived>::InnerStrideAtCompileTime };
         .  };
         .  
         .  template<typename Derived>
-- line 732 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/Memory.h
--------------------------------------------------------------------------------
       Ir 

-- line 198 ----------------------------------------
        .  inline bool is_malloc_allowed() { return is_malloc_allowed_impl(false); }
        .  inline bool set_is_malloc_allowed(bool new_value) { return is_malloc_allowed_impl(true, new_value); }
        .  inline void check_that_malloc_is_allowed()
        .  {
        .    eigen_assert(is_malloc_allowed() && "heap allocation is forbidden (EIGEN_RUNTIME_NO_MALLOC is defined and g_is_malloc_allowed is false)");
        .  }
        .  #else 
        .  inline void check_that_malloc_is_allowed()
   62,920  {}
        .  #endif
        .  
        .  /** \internal Allocates \a size bytes. The returned pointer is guaranteed to have 16 bytes alignment.
        .    * On allocation error, the returned pointer is null, and std::bad_alloc is thrown.
        .    */
        .  inline void* aligned_malloc(size_t size)
   50,336  {
   12,584    check_that_malloc_is_allowed();
   75,504  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12584x)
        .  
        .    void *result;
        .    #if !EIGEN_ALIGN
        .      result = std::malloc(size);
        .    #elif EIGEN_MALLOC_ALREADY_ALIGNED
   50,336      result = std::malloc(size);
3,125,625  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12584x)
        .    #elif EIGEN_HAS_POSIX_MEMALIGN
        .      if(posix_memalign(&result, 16, size)) result = 0;
        .    #elif EIGEN_HAS_MM_MALLOC
        .      result = _mm_malloc(size, 16);
        .    #elif defined(_MSC_VER) && (!defined(_WIN32_WCE))
        .      result = _aligned_malloc(size, 16);
        .    #else
        .      result = handmade_aligned_malloc(size);
        .    #endif
        .  
   25,168    if(!result && size)
        .      throw_std_bad_alloc();
        .  
   12,584    return result;
   25,168  }
        .  
        .  /** \internal Frees memory allocated with aligned_malloc. */
        .  inline void aligned_free(void *ptr)
  156,872  {
        .    #if !EIGEN_ALIGN
        .      std::free(ptr);
        .    #elif EIGEN_MALLOC_ALREADY_ALIGNED
  117,654      std::free(ptr);
5,461,051  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39218x)
        .    #elif EIGEN_HAS_POSIX_MEMALIGN
        .      std::free(ptr);
        .    #elif EIGEN_HAS_MM_MALLOC
        .      _mm_free(ptr);
        .    #elif defined(_MSC_VER) && (!defined(_WIN32_WCE))
        .      _aligned_free(ptr);
        .    #else
        .      handmade_aligned_free(ptr);
        .    #endif
  117,654  }
        .  
        .  /**
        .  * \internal
        .  * \brief Reallocates an aligned block of memory.
        .  * \throws std::bad_alloc on allocation failure
        .  **/
        .  inline void* aligned_realloc(void *ptr, size_t new_size, size_t old_size)
    2,880  {
    1,440    EIGEN_UNUSED_VARIABLE(old_size);
    3,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
        .  
        .    void *result;
        .  #if !EIGEN_ALIGN
        .    result = std::realloc(ptr,new_size);
        .  #elif EIGEN_MALLOC_ALREADY_ALIGNED
    2,880    result = std::realloc(ptr,new_size);
  353,830  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
        .  #elif EIGEN_HAS_POSIX_MEMALIGN
        .    result = generic_aligned_realloc(ptr,new_size,old_size);
        .  #elif EIGEN_HAS_MM_MALLOC
        .    // The defined(_mm_free) is just here to verify that this MSVC version
        .    // implements _mm_malloc/_mm_free based on the corresponding _aligned_
        .    // functions. This may not always be the case and we just try to be safe.
        .    #if defined(_MSC_VER) && (!defined(_WIN32_WCE)) && defined(_mm_free)
        .      result = _aligned_realloc(ptr,new_size,16);
-- line 276 ----------------------------------------
-- line 278 ----------------------------------------
        .      result = generic_aligned_realloc(ptr,new_size,old_size);
        .    #endif
        .  #elif defined(_MSC_VER) && (!defined(_WIN32_WCE))
        .    result = _aligned_realloc(ptr,new_size,16);
        .  #else
        .    result = handmade_aligned_realloc(ptr,new_size,old_size);
        .  #endif
        .  
      960    if (!result && new_size)
        .      throw_std_bad_alloc();
        .  
      480    return result;
      960  }
        .  
        .  /*****************************************************************************
        .  *** Implementation of conditionally aligned functions                      ***
        .  *****************************************************************************/
        .  
        .  /** \internal Allocates \a size bytes. If Align is true, then the returned ptr is 16-byte-aligned.
        .    * On allocation error, the returned pointer is null, and a std::bad_alloc is thrown.
        .    */
   49,940  template<bool Align> inline void* conditional_aligned_malloc(size_t size)
        .  {
   37,455    return aligned_malloc(size);
3,355,396  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12485x)
   24,970  }
        .  
        .  template<> inline void* conditional_aligned_malloc<false>(size_t size)
        .  {
        .    check_that_malloc_is_allowed();
        .  
        .    void *result = std::malloc(size);
        .    if(!result && size)
        .      throw_std_bad_alloc();
        .    return result;
        .  }
        .  
        .  /** \internal Frees memory allocated with conditional_aligned_malloc */
  108,288  template<bool Align> inline void conditional_aligned_free(void *ptr)
        .  {
   81,216    aligned_free(ptr);
5,472,206  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (27072x)
   81,216  }
        .  
        .  template<> inline void conditional_aligned_free<false>(void *ptr)
        .  {
        .    std::free(ptr);
        .  }
        .  
    2,880  template<bool Align> inline void* conditional_aligned_realloc(void* ptr, size_t new_size, size_t old_size)
        .  {
    2,880    return aligned_realloc(ptr, new_size, old_size);
  367,270  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
      960  }
        .  
        .  template<> inline void* conditional_aligned_realloc<false>(void* ptr, size_t new_size, size_t)
        .  {
        .    return std::realloc(ptr, new_size);
        .  }
        .  
        .  /*****************************************************************************
        .  *** Construction/destruction of array elements                             ***
-- line 336 ----------------------------------------
-- line 343 ----------------------------------------
        .  {
        .    for (size_t i=0; i < size; ++i) ::new (ptr + i) T;
        .    return ptr;
        .  }
        .  
        .  /** \internal Destructs the elements of an array.
        .    * The \a size parameters tells on how many objects to call the destructor of T.
        .    */
      396  template<typename T> inline void destruct_elements_of_array(T *ptr, size_t size)
        .  {
        .    // always destruct an array starting from the end.
      198    if(ptr)
        .      while(size) ptr[--size].~T();
      297  }
        .  
        .  /*****************************************************************************
        .  *** Implementation of aligned new/delete-like functions                    ***
        .  *****************************************************************************/
        .  
        .  template<typename T>
        .  EIGEN_ALWAYS_INLINE void check_size_for_overflow(size_t size)
        .  {
   76,476    if(size > size_t(-1) / sizeof(T))
      960      throw_std_bad_alloc();
        .  }
        .  
        .  /** \internal Allocates \a size objects of type T. The returned pointer is guaranteed to have 16 bytes alignment.
        .    * On allocation error, the returned pointer is undefined, but a std::bad_alloc is thrown.
        .    * The default constructor of T is called.
        .    */
        .  template<typename T> inline T* aligned_new(size_t size)
        .  {
-- line 374 ----------------------------------------
-- line 382 ----------------------------------------
        .    check_size_for_overflow<T>(size);
        .    T *result = reinterpret_cast<T*>(conditional_aligned_malloc<Align>(sizeof(T)*size));
        .    return construct_elements_of_array(result, size);
        .  }
        .  
        .  /** \internal Deletes objects constructed with aligned_new
        .    * The \a size parameters tells on how many objects to call the destructor of T.
        .    */
      495  template<typename T> inline void aligned_delete(T *ptr, size_t size)
        .  {
      495    destruct_elements_of_array<T>(ptr, size);
      990  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
      297    aligned_free(ptr);
    3,069  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
      297  }
        .  
        .  /** \internal Deletes objects constructed with conditional_aligned_new
        .    * The \a size parameters tells on how many objects to call the destructor of T.
        .    */
        .  template<typename T, bool Align> inline void conditional_aligned_delete(T *ptr, size_t size)
        .  {
        .    destruct_elements_of_array<T>(ptr, size);
        .    conditional_aligned_free<Align>(ptr);
-- line 402 ----------------------------------------
-- line 410 ----------------------------------------
        .      destruct_elements_of_array(pts+new_size, old_size-new_size);
        .    T *result = reinterpret_cast<T*>(conditional_aligned_realloc<Align>(reinterpret_cast<void*>(pts), sizeof(T)*new_size, sizeof(T)*old_size));
        .    if(new_size > old_size)
        .      construct_elements_of_array(result+old_size, new_size-old_size);
        .    return result;
        .  }
        .  
        .  
   74,910  template<typename T, bool Align> inline T* conditional_aligned_new_auto(size_t size)
        .  {
        .    check_size_for_overflow<T>(size);
   62,425    T *result = reinterpret_cast<T*>(conditional_aligned_malloc<Align>(sizeof(T)*size));
   15,818  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (45x)
        .    if(NumTraits<T>::RequireInitialization)
        .      construct_elements_of_array(result, size);
   12,485    return result;
   24,970  }
        .  
    3,840  template<typename T, bool Align> inline T* conditional_aligned_realloc_new_auto(T* pts, size_t new_size, size_t old_size)
        .  {
        .    check_size_for_overflow<T>(new_size);
        .    check_size_for_overflow<T>(old_size);
        .    if(NumTraits<T>::RequireInitialization && (new_size < old_size))
        .      destruct_elements_of_array(pts+new_size, old_size-new_size);
    4,320    T *result = reinterpret_cast<T*>(conditional_aligned_realloc<Align>(reinterpret_cast<void*>(pts), sizeof(T)*new_size, sizeof(T)*old_size));
  374,470  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
        .    if(NumTraits<T>::RequireInitialization && (new_size > old_size))
        .      construct_elements_of_array(result+old_size, new_size-old_size);
      480    return result;
      960  }
        .  
  135,360  template<typename T, bool Align> inline void conditional_aligned_delete_auto(T *ptr, size_t size)
        .  {
        .    if(NumTraits<T>::RequireInitialization)
        .      destruct_elements_of_array<T>(ptr, size);
   81,216    conditional_aligned_free<Align>(ptr);
5,697,254  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26934x)
   81,216  }
        .  
        .  /****************************************************************************/
        .  
        .  /** \internal Returns the index of the first element of the array that is well aligned for vectorization.
        .    *
        .    * \param array the address of the start of the array
        .    * \param size the size of the array
        .    *
-- line 452 ----------------------------------------
-- line 457 ----------------------------------------
        .    * \note If the scalar type is vectorizable, we rely on the following assumptions: sizeof(Scalar) is a
        .    * power of 2, the packet size in bytes is also a power of 2, and is a multiple of sizeof(Scalar). On the
        .    * other hand, we do not assume that the array address is a multiple of sizeof(Scalar), as that fails for
        .    * example with Scalar=double on certain 32-bit platforms, see bug #79.
        .    *
        .    * There is also the variant first_aligned(const MatrixBase&) defined in DenseCoeffsBase.h.
        .    */
        .  template<typename Scalar, typename Index>
  727,970  static inline Index first_aligned(const Scalar* array, Index size)
        .  {
        .    enum { PacketSize = packet_traits<Scalar>::size,
        .           PacketAlignedMask = PacketSize-1
        .    };
        .  
        .    if(PacketSize==1)
        .    {
        .      // Either there is no vectorization, or a packet consists of exactly 1 scalar so that all elements
        .      // of the array have the same alignment.
        .      return 0;
        .    }
  727,970    else if(size_t(array) & (sizeof(Scalar)-1))
        .    {
        .      // There is vectorization for this scalar type, but the array is not aligned to the size of a single scalar.
        .      // Consequently, no element of the array is well aligned.
        .      return size;
        .    }
        .    else
        .    {
1,455,940      return std::min<Index>( (PacketSize - (Index((size_t(array)/sizeof(Scalar))) & PacketAlignedMask))
2,038,334  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (145594x)
  145,594                             & PacketAlignedMask, size);
        .    }
  291,188  }
        .  
        .  /** \internal Returns the smallest integer multiple of \a base and greater or equal to \a size
        .    */ 
        .  template<typename Index> 
        .  inline static Index first_multiple(Index size, Index base)
        .  {
        .    return ((size+base-1)/base)*base;
        .  }
-- line 496 ----------------------------------------
-- line 535 ----------------------------------------
        .  {
        .    public:
        .      /* Creates a stack_memory_handler responsible for the buffer \a ptr of size \a size.
        .       * Note that \a ptr can be 0 regardless of the other parameters.
        .       * This constructor takes care of constructing/initializing the elements of the buffer if required by the scalar type T (see NumTraits<T>::RequireInitialization).
        .       * In this case, the buffer elements will also be destructed when this handler will be destructed.
        .       * Finally, if \a dealloc is true, then the pointer \a ptr is freed.
        .       **/
   84,329      aligned_stack_memory_handler(T* ptr, size_t size, bool dealloc)
  108,423        : m_ptr(ptr), m_size(size), m_deallocate(dealloc)
        .      {
        .        if(NumTraits<T>::RequireInitialization && m_ptr)
        .          Eigen::internal::construct_elements_of_array(m_ptr, size);
   36,141      }
   48,188      ~aligned_stack_memory_handler()
        .      {
        .        if(NumTraits<T>::RequireInitialization && m_ptr)
        .          Eigen::internal::destruct_elements_of_array<T>(m_ptr, m_size);
   48,188        if(m_deallocate)
   48,188          Eigen::internal::aligned_free(m_ptr);
  417,174  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12047x)
   36,141      }
        .    protected:
        .      T* m_ptr;
        .      size_t m_size;
        .      bool m_deallocate;
        .  };
        .  
        .  } // end namespace internal
        .  
-- line 563 ----------------------------------------
-- line 773 ----------------------------------------
        .  #  endif
        .  #endif
        .  
        .  namespace internal {
        .  
        .  #ifdef EIGEN_CPUID
        .  
        .  inline bool cpuid_is_vendor(int abcd[4], const int vendor[3])
        8  {
       50    return abcd[1]==vendor[0] && abcd[3]==vendor[1] && abcd[2]==vendor[2];
        4  }
        .  
        .  inline void queryCacheSizes_intel_direct(int& l1, int& l2, int& l3)
       10  {
        .    int abcd[4];
       20    l1 = l2 = l3 = 0;
        2    int cache_id = 0;
        2    int cache_type = 0;
        8    do {
       70      abcd[0] = abcd[1] = abcd[2] = abcd[3] = 0;
      100      EIGEN_CPUID(abcd,0x4,cache_id);
       30      cache_type  = (abcd[0] & 0x0F) >> 0;
       36      if(cache_type==1||cache_type==3) // data or unified cache
        .      {
       24        int cache_level = (abcd[0] & 0xE0) >> 5;  // A[7:5]
       18        int ways        = (abcd[1] & 0xFFC00000) >> 22; // B[31:22]
       24        int partitions  = (abcd[1] & 0x003FF000) >> 12; // B[21:12]
       18        int line_size   = (abcd[1] & 0x00000FFF) >>  0; // B[11:0]
       12        int sets        = (abcd[2]);                    // C[31:0]
        .  
       72        int cache_size = (ways+1) * (partitions+1) * (line_size+1) * (sets+1);
        .  
       30        switch(cache_level)
        .        {
        8          case 1: l1 = cache_size; break;
        8          case 2: l2 = cache_size; break;
        8          case 3: l3 = cache_size; break;
        .          default: break;
        .        }
        .      }
       10      cache_id++;
       36    } while(cache_type>0 && cache_id<16);
        6  }
        .  
        .  inline void queryCacheSizes_intel_codes(int& l1, int& l2, int& l3)
        .  {
        .    int abcd[4];
        .    abcd[0] = abcd[1] = abcd[2] = abcd[3] = 0;
        .    l1 = l2 = l3 = 0;
        .    EIGEN_CPUID(abcd,0x00000002,0);
        .    unsigned char * bytes = reinterpret_cast<unsigned char *>(abcd)+2;
-- line 823 ----------------------------------------
-- line 890 ----------------------------------------
        .    if(check_for_p2_core2 && l2 == l3)
        .      l3 = 0;
        .    l1 *= 1024;
        .    l2 *= 1024;
        .    l3 *= 1024;
        .  }
        .  
        .  inline void queryCacheSizes_intel(int& l1, int& l2, int& l3, int max_std_funcs)
       14  {
        4    if(max_std_funcs>=4)
       12      queryCacheSizes_intel_direct(l1,l2,l3);
      554  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        .    else
        .      queryCacheSizes_intel_codes(l1,l2,l3);
        8  }
        .  
        .  inline void queryCacheSizes_amd(int& l1, int& l2, int& l3)
        .  {
        .    int abcd[4];
        .    abcd[0] = abcd[1] = abcd[2] = abcd[3] = 0;
        .    EIGEN_CPUID(abcd,0x80000005,0);
        .    l1 = (abcd[2] >> 24) * 1024; // C[31:24] = L1 size in KB
        .    abcd[0] = abcd[1] = abcd[2] = abcd[3] = 0;
-- line 911 ----------------------------------------
-- line 913 ----------------------------------------
        .    l2 = (abcd[2] >> 16) * 1024; // C[31;16] = l2 cache size in KB
        .    l3 = ((abcd[3] & 0xFFFC000) >> 18) * 512 * 1024; // D[31;18] = l3 cache size in 512KB
        .  }
        .  #endif
        .  
        .  /** \internal
        .   * Queries and returns the cache sizes in Bytes of the L1, L2, and L3 data caches respectively */
        .  inline void queryCacheSizes(int& l1, int& l2, int& l3)
       12  {
        .    #ifdef EIGEN_CPUID
        .    int abcd[4];
        6    const int GenuineIntel[] = {0x756e6547, 0x49656e69, 0x6c65746e};
        6    const int AuthenticAMD[] = {0x68747541, 0x69746e65, 0x444d4163};
        6    const int AMDisbetter_[] = {0x69444d41, 0x74656273, 0x21726574}; // "AMDisbetter!"
        .  
        .    // identify the CPU vendor
       20    EIGEN_CPUID(abcd,0x0,0);
        4    int max_std_funcs = abcd[1];
       14    if(cpuid_is_vendor(abcd,GenuineIntel))
       64  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
       12      queryCacheSizes_intel(l1,l2,l3,max_std_funcs);
      594  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        .    else if(cpuid_is_vendor(abcd,AuthenticAMD) || cpuid_is_vendor(abcd,AMDisbetter_))
        .      queryCacheSizes_amd(l1,l2,l3);
        .    else
        .      // by default let's use Intel's API
        .      queryCacheSizes_intel(l1,l2,l3,max_std_funcs);
        .  
        .    // here is the list of other vendors:
        .  //   ||cpuid_is_vendor(abcd,"VIA VIA VIA ")
-- line 940 ----------------------------------------
-- line 945 ----------------------------------------
        .  //   ||cpuid_is_vendor(abcd,"RiseRiseRise")
        .  //   ||cpuid_is_vendor(abcd,"Geode by NSC")
        .  //   ||cpuid_is_vendor(abcd,"SiS SiS SiS ")
        .  //   ||cpuid_is_vendor(abcd,"UMC UMC UMC ")
        .  //   ||cpuid_is_vendor(abcd,"NexGenDriven")
        .    #else
        .    l1 = l2 = l3 = -1;
        .    #endif
        8  }
        .  
        .  /** \internal
        .   * \returns the size in Bytes of the L1 data cache */
        .  inline int queryL1CacheSize()
        3  {
        1    int l1(-1), l2, l3;
        6    queryCacheSizes(l1,l2,l3);
      374  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        1    return l1;
        2  }
        .  
        .  /** \internal
        .   * \returns the size in Bytes of the L2 or L3 cache if this later is present */
        .  inline int queryTopLevelCacheSize()
        3  {
        2    int l1, l2(-1), l3(-1);
        6    queryCacheSizes(l1,l2,l3);
      374  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        6    return (std::max)(l2,l3);
       15  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        2  }
        .  
        .  } // end namespace internal
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_MEMORY_H

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/VectorOperations.cpp
--------------------------------------------------------------------------------
        Ir 

-- line 11 ----------------------------------------
         .      v.at(i) = 0e0;
         .    return;
         .  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void VectorOperations::scale(double s, std::vector<double> const& v, 
         .                               std::vector<double> &w ) 
    28,208  {
         .    // computes w = s*v1;
    21,156    size = w.size();
    49,364  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3526x)
   165,722    for ( int i = 0; i < size; ++i )
   394,912      w.at(i) = s * v.at(i);
 2,961,840  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (49364x)
     3,526    return;
    14,104  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void VectorOperations::add( double s, std::vector<double> const &v,
         .                              std::vector<double> &w)
   406,168  {
         .    // computes w += s*v
   348,144    size = w.size();
   812,336  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (58024x)
 2,727,128    for ( int i = 0; i < size; i++) 
 7,311,024      w.at(i) += s * v.at(i);
48,740,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (812336x)
    58,024    return;
   116,048  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void VectorOperations::minus(std::vector<double> const& v1, 
         .                               std::vector<double> const& v2,
         .                               std::vector<double> &w ) 
    30,144  {
         .    // computes w = v1 - v2;
   267,528    for ( size_t i = 0; i < w.size(); ++i )
   422,016  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30144x)
   606,648      w.at(i) = ( v1.at(i) - v2.at(i) );
 4,747,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (79128x)
     3,768    return;
    15,072  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void VectorOperations::rescale(double s, std::vector<double> const& v1, 
         .                                 std::vector<double> const& v2,
         .                                 std::vector<double> &w ) 
   189,513  {
         .    // computes w = (v1 - v2) * s;
   126,342    size = w.size();
   294,798  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (21057x)
   252,684    assert ( w.size() == v1.size() ); 
   589,596  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42114x)
   989,679    for ( int i = 0; i < size; ++i )
 3,979,773      w.at(i) = ( v1.at(i) - v2.at(i) ) * s;
26,531,820  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (442197x)
    21,057    return;
    84,228  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  double VectorOperations::diff_norm( std::vector<double> const &v1, 
         .                                      std::vector<double> const &v2) 
   405,438  {
         .    // computes ||v1-v2||
   202,719    dbl = 0e0;
   405,438    size = v1.size();
   946,022  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (67573x)
 3,175,931    for (int i = 0; i < size; i++)
13,717,319      dbl += pow( v1.at(i) - v2.at(i), 2e0 );
83,610,604  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1419033x)
   337,865    return sqrt(dbl);
   202,719  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (67573x)
   202,719  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  double VectorOperations::dot_product( std::vector<double> const &v1, 
         .                                        std::vector<double> const &v2) 
    44,376  {
         .    // computes v1.dot(v2)
    22,188    dbl = 0e0;
    44,376    size = v1.size();
   103,544  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7396x)
   574,526    for (int i = 0; i < size; i++)
 1,881,411      dbl += v1.at(i) * v2.at(i);
10,750,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (179182x)
    22,188    return dbl;
    22,188  }
         .  //--------------------------------------------------------------------------------
         .  

--------------------------------------------------------------------------------
-- Auto-annotated source: ../include/NOWPAC.hpp
--------------------------------------------------------------------------------
    Ir 

-- line 15 ----------------------------------------
     .  #include <iostream>
     .  #include <random>
     .  
     .  #include <fstream>
     .  #include <cassert>
     .  
     .  template<class TSurrogateModel = MinimumFrobeniusNormModel, 
     .           class TBasisForSurrogateModel = BasisForMinimumFrobeniusNormModel>
    51  class NOWPAC : protected VectorOperations {
412,254  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11x)
     .    private:
     .      int dim;
     .      int nb_constraints;
     .      GaussianProcessSupport gaussian_processes;
     .      BlackBoxBaseClass *blackbox;
     .      TBasisForSurrogateModel surrogate_basis;
     .      std::vector<TSurrogateModel> surrogate_models;
     .      std::vector<double> blackbox_values;
-- line 31 ----------------------------------------
-- line 78 ----------------------------------------
     .      void set_max_number_evaluations ( int const& );
     .  };
     .  
     .  //#endif
     .  
     .  
     .  //--------------------------------------------------------------------------------    
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     6  NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::NOWPAC ( int dim_input ) :
     .    dim ( dim_input ),
    56    surrogate_basis ( dim_input, delta )
 1,409  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11x)
 2,444  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::BasisForMinimumFrobeniusNormModel(int, double&) (1x)
     .  { 
     2    stochastic_optimization = false;
     8    x_trial.resize( dim );
 1,267  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     3    delta = 1e0;
     3    delta_max = 1e0;
     3    delta_min = 1e-3;
     3    threshold_for_poisedness_constant = 5e1;
     3    omega = 0.6;
     3    theta = 0.5;
     3    gamma = 0.8;
     3    gamma_inc = 1.4;
     3    eta_0 = 0.1; 
     3    eta_1 = 0.7;
     3    eps_c = 1e-3;
     3    mu = 1e0;
     2    nb_constraints = -1;
    14    evaluations.max_nb_nodes = (dim*dim + 3*dim + 2)/2;
     2    max_number_blackbox_evaluations = (int) HUGE_VAL;
     2    verbose = 3;
     2    NOEXIT = 100;
     4    EXIT_FLAG = NOEXIT;
     2    update_interval_length = 0;//5 * dim;
     5  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
    36  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_option ( 
     .    std::string const &option_name, double const &option_value )
     .  {
    48    if ( option_name.compare( "gamma" ) == 0 ) 
20,415  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     .      { gamma = option_value; return; }
    48    if ( option_name.compare( "gamma_inc" ) == 0 ) 
   402  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     .      { gamma_inc = option_value; return; }
    48    if ( option_name.compare( "omega" ) == 0 ) 
   360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     .      { omega = option_value; return; }
    48    if ( option_name.compare( "theta" ) == 0 ) 
   360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     .      { theta = option_value; return; }
    48    if ( option_name.compare( "eta_0" ) == 0 ) 
   433  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     5      { eta_0 = option_value; return; }
    40    if ( option_name.compare( "eta_1" ) == 0 ) 
   345  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
     5      { eta_1 = option_value; return; }
    32    if ( option_name.compare( "eps_c" ) == 0 ) 
   306  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
     5      { eps_c = option_value; return; }
    24    if ( option_name.compare( "mu" ) == 0 ) 
   197  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     5      { mu = option_value; return; }
    16    if ( option_name.compare( "poisedness_threshold" ) == 0 ) 
   277  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     5      { threshold_for_poisedness_constant = option_value; return; }
     8    if ( option_name.compare( "inner_boundary_path_constants" ) == 0 ) { 
   279  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     4      if ( nb_constraints == 0 ) {
     .        std::cout << "Unable to set inner boundary path constants" << std::endl;
     .        std::cout << "Reason: no constraints specified" << std::endl;
     .        return;
     .      } else {
     5        if ( option_value < 0e0 )
     .          std::cout << "Inner boundary path constants have to be positive" << std::endl;
    29        for ( int i = 0; i < nb_constraints; i++ )
    44          inner_boundary_path_constants.at( i ) = option_value; 
   240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
     1        return;
     .      } 
     .    }
     .    std::cout << "Unknown parameter: " << option_name << std::endl;
     .    return;
    12  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     6  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_option ( 
     .    std::string const &option_name, bool const &option_value )
     .  {
     8    if ( option_name.compare( "stochastic_optimization" ) == 0 ) { 
   231  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     4      stochastic_optimization  = option_value; 
    14      if ( stochastic_optimization && evaluations.values.size() > 0 ) {
    17  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     9        blackbox_noise.resize( nb_constraints + 1);
 1,397  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     9        evaluations.noise.resize( nb_constraints + 1);
 1,691  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     .        //for (int i = evaluations.noise.size(); 
     .         //    i < evaluations.values.size(); i++)
     .         // evaluations.noise[i].resize(0);
     .      }
     2      return; 
     .    }
     .    std::cout << "Unknown parameter: " << option_name << std::endl;
     .    return;
     2  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     .  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_option ( 
     .    std::string const &option_name, std::vector<double> const &option_value )
     .  {
     .    if ( option_name.compare( "inner_boundary_path_constants" ) == 0 ) { 
-- line 181 ----------------------------------------
-- line 191 ----------------------------------------
     .    }
     .    std::cout << "Unknown parameter: " << option_name << std::endl;
     .    return;
     .  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     7  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_option ( 
     .    std::string const &option_name, std::vector<int> const &option_value )
     .  {
     8    if ( option_name.compare( "update_at_evaluations" ) == 0 ) { 
   217  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
    54      for ( int i = 0; i < option_value.size(); ++i )
    70  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
    64        update_at_evaluations.push_back( option_value.at( i ) );
19,993  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
     1      return;
     .    }
     .    std::cout << "Unknown parameter: " << option_name << std::endl;
     .    return;
     4  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     6  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_option ( 
     .    std::string const &option_name, int const &option_value )
     .  {
     8    if ( option_name.compare( "verbose" ) == 0 ) { 
   119  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     4      verbose = option_value; 
     1      return;
     .    }
     .    if ( option_name.compare( "update_interval_length" ) == 0 ) { 
     .      update_interval_length = option_value; 
     .      return;
     .    }
     .    std::cout << "Unknown parameter: " << option_name << std::endl;
     .    return;
     2  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     .  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_lower_bounds ( 
     .    std::vector<double> const& bounds )
     .  {
     .    lower_bound_constraints = bounds;
-- line 235 ----------------------------------------
-- line 245 ----------------------------------------
     .    upper_bound_constraints = bounds;
     .    return;
     .  }
     .  //--------------------------------------------------------------------------------
     .  
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     5  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_trustregion ( 
     .    double const &delta_init_input, double const &delta_min_input )
     .  {
     4    delta = delta_init_input;
     4    delta_min = delta_min_input;
     1    return;
     2  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     .  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_trustregion ( 
     .    double const &delta_init_input )
     .  {
     .    set_trustregion ( delta_init_input, 0 );
-- line 267 ----------------------------------------
-- line 276 ----------------------------------------
     .  {
     .    delta_max = delta_max_input;
     .    return;
     .  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     4  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_max_number_evaluations ( 
     .    int const &max_number_blackbox_evaluations_input )
     .  {
     4    max_number_blackbox_evaluations = max_number_blackbox_evaluations_input;
     1    return;
     2  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     6  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_blackbox ( 
     .    BlackBoxBaseClass &blackbox_input, int nb_constraints_input )
     .  {
     3    blackbox = &blackbox_input;
     3    nb_constraints = nb_constraints_input;
     9    blackbox_values.resize( nb_constraints + 1);
 1,251  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     9    evaluations.values.resize( nb_constraints + 1);
 1,545  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     4    if ( stochastic_optimization ) {
     .      blackbox_noise.resize( nb_constraints + 1);
     .      evaluations.noise.resize( nb_constraints + 1);
     .    }
     8    inner_boundary_path_constants.resize( nb_constraints );
 1,243  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
    29    for (int i = 0; i < nb_constraints; i++)
    36      inner_boundary_path_constants.at( i ) = 0.1; 
   240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4x)
     1    return;
     2  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     .  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::set_blackbox ( 
     .    BlackBoxBaseClass &blackbox_input )
     .  {
     .    set_blackbox ( blackbox_input, 0 );
     .    return;
     .  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
    15  double NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::compute_acceptance_ratio ( )
     .  {
     .    if ( stochastic_optimization ) {
     .  //    update_surrogate_models( );
     .  //    trial_model_value = surrogate_models[0].evaluate( x_trial );    
     .    }
    33    return ( evaluations.values[0].at( evaluations.best_index ) - 
   225  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
    21             evaluations.values[0].back() ) /
   303  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
    39           ( evaluations.values[0].at( evaluations.best_index ) - 
   225  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
    36             trial_model_value );
    15  }
     .  //--------------------------------------------------------------------------------
     .  
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     .  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::void_user_data ( void *user_data_input ) 
     .  { 
     .    user_data = user_data_input; 
     .    return; 
     .  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
   208  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::blackbox_evaluator ( 
     .    std::vector<double> const &x, bool set_node_active ) 
     .  {
   312    if ( evaluations.nodes.size() == max_number_blackbox_evaluations) {
   442  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26x)
     .      EXIT_FLAG = 1;
     .      return;
     .    }
     .    // evaluate blackbox  
   104    if ( stochastic_optimization )
   442      blackbox->evaluate( x, blackbox_values, blackbox_noise, user_data );
73,831,924  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MyBlackBoxFunction.cpp:MyBlackBoxFunction::evaluate(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, void*) (26x)
     .    else
     .      blackbox->evaluate( x, blackbox_values, user_data ); 
     .  
     .    // add evaluations to blackbox data
   156    evaluations.nodes.push_back( x );
66,318  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26x)
 1,066    for ( int i = 0; i < nb_constraints+1; i++) {  
   520      if ( stochastic_optimization ) 
 2,340        evaluations.noise[i].push_back( blackbox_noise.at(i) );
72,305  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (390x)
 2,340      evaluations.values[i].push_back( blackbox_values.at(i) );
71,106  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (390x)
     .    }  
    52    if ( set_node_active )
    96      evaluations.surrogate_nodes_index.push_back( (evaluations.nodes).size()-1 );    
 6,692  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16x)
     .  
   461    if ( stochastic_optimization && evaluations.nodes.size() > dim ) 
   442  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26x)
   133      gaussian_processes.smooth_data ( evaluations );
606,452,403  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcessSupport.cpp:GaussianProcessSupport::smooth_data(BlackboxData&) (19x)
     .  
    45    return;
   104  }  
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
   120  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::blackbox_evaluator ( ) 
     .  {
    75    int nb_nodes_tmp = evaluations.nodes.size();
   255  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
   120    int nb_vals_tmp = evaluations.values[0].size( );
   435  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30x)
    45    if ( nb_nodes_tmp == nb_vals_tmp ) return;
     .  
    60    if ( nb_nodes_tmp >= max_number_blackbox_evaluations) {
     2      EXIT_FLAG = 1;
     1      return;
     .    }
     .  
   140    for ( int i = nb_vals_tmp; i < nb_nodes_tmp; i++ ) {
     .      // evaluate blackbox
    56      if ( stochastic_optimization )
   378        blackbox->evaluate( evaluations.nodes[ i ], blackbox_values, 
   210  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14x)
39,700,788  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MyBlackBoxFunction.cpp:MyBlackBoxFunction::evaluate(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, void*) (14x)
     .                            blackbox_noise, user_data );
     .      else
     .        blackbox->evaluate( evaluations.nodes[ i ], blackbox_values, 
     .                            user_data ); 
     .  
     .      // add evaluations to blackbox data
   574      for ( int j = 0; j < nb_constraints+1; j++) {
   280        if ( stochastic_optimization )
 1,260          evaluations.noise[j].push_back( blackbox_noise.at(j) );
22,449  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (210x)
 1,260        evaluations.values[j].push_back( blackbox_values.at(j) );
22,798  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (210x)
     .      }  
     .    }
     .   
   238    assert ( evaluations.nodes.size() == evaluations.values[0].size() );
   644  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42x)
     .  
    56    if ( stochastic_optimization ) 
    98      gaussian_processes.smooth_data ( evaluations );
323,679,093  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcessSupport.cpp:GaussianProcessSupport::smooth_data(BlackboxData&) (14x)
     .  
    42    return;
   105  }  
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
    95  bool NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::last_point_is_feasible ( ) 
     .  {
   191    for ( int i = 0; i < nb_constraints; i++ ) {
   527      tmp_dbl = evaluations.values[i+1].at( evaluations.best_index );
 2,325  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (62x)
   248      if ( tmp_dbl < 0e0 ) tmp_dbl = 0e0;
   557      if ( evaluations.values[i+1].back() > tmp_dbl ) return false;
 3,131  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (62x)
     .    }
     4    return true;
    76  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
   264  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::update_surrogate_models ( )
     .  {
   231    surrogate_basis.compute_basis_coefficients ( evaluations );
1,886,828,892  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/BasisForMinimumFrobeniusNormModel.cpp:BasisForMinimumFrobeniusNormModel::compute_basis_coefficients(BlackboxData const&) (33x)
 1,353    for ( int i = 0; i < nb_constraints+1; i++ )
 5,445      surrogate_models[ i ].set_function_values ( evaluations.values[i],
 7,425  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (495x)
501,678  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::set_function_values(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<int, std::allocator<int> > const&) (165x)
     .                                                  evaluations.noise[i],
     .                                                  evaluations.surrogate_nodes_index );
    33    return;
   231  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
   108  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::update_trustregion ( 
     .    double scaling_factor )
     .  {
    54    tmp_dbl = 0e0;
    72    if ( stochastic_optimization ) {
 3,942      for ( int i = 0; i < evaluations.surrogate_nodes_index.size(); i++ ) {
 4,620  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (330x)
12,792        for ( int j = 0; j < nb_constraints+1; j++) {
40,560          if ( evaluations.noise[ j ].at( evaluations.surrogate_nodes_index[i] ) > tmp_dbl ) {
135,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4680x)
 5,255            if ( diff_norm( 
     .                   evaluations.nodes[ evaluations.surrogate_nodes_index[i] ], 
33,632                   evaluations.nodes[ evaluations.best_index ] ) <= delta )
2,170,025  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (1051x)
44,142  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3153x)
 1,562              tmp_dbl = evaluations.noise[ j ].at( evaluations.surrogate_nodes_index[i] );
 6,177  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (213x)
     .          }
     .        }
     .      }
     .    }
    90    delta *= scaling_factor;
     .  //  std::cout << std::endl << "------------------------- " << std::endl;
     .  //  std::cout << "MAXNOISE " << tmp_dbl << " sqrt = " << sqrt( tmp_dbl ) << std::endl;
     .  //  std::cout <<  "------------------------- " << std::endl;
    72    if ( stochastic_optimization ) {
   108      int ar_tmp = fabs(acceptance_ratio);
    96      if (ar_tmp < 1e0) ar_tmp = 1e0;
    72      if (ar_tmp > 2e1) ar_tmp = 2e1;
    18      ar_tmp = 1e0;
   306      if ( delta < sqrt(1e0*tmp_dbl)*1e0*ar_tmp  ) 
    54  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
   156        delta = sqrt(1e0*tmp_dbl) * 1e0 * ar_tmp; 
    39  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (13x)
     .    }
   108    if ( delta > delta_max ) delta = delta_max;
   108    if ( delta < delta_min ) EXIT_FLAG = 0;
    18    return;
    72  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
    90  void NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::add_trial_node ( ) 
     .  {
   216    if ( evaluations.surrogate_nodes_index.size( ) < evaluations.max_nb_nodes )
   252  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
   234      evaluations.surrogate_nodes_index.push_back ( evaluations.nodes.size()-1 );
 6,683  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36x)
     .    else
     .      evaluations.surrogate_nodes_index[ replace_node_index ] = evaluations.nodes.size()-1;
    72    if ( stochastic_optimization )
   126      gaussian_processes.smooth_data ( evaluations );
384,650,883  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcessSupport.cpp:GaussianProcessSupport::smooth_data(BlackboxData&) (18x)
    36    return;
    72  }
     .  //--------------------------------------------------------------------------------
     .  
     .  //--------------------------------------------------------------------------------
     .  template<class TSurrogateModel, class TBasisForSurrogateModel>
     8  int NOWPAC<TSurrogateModel, TBasisForSurrogateModel>::optimize ( 
     .    std::vector<double> &x, double &val ) 
     .  {
     .    
     4    if ( nb_constraints == -1 ) {
     .      EXIT_FLAG = -4;
     .      std::cout << "No objective function has been specified" << std::endl;
     .    }
     7    if ( max_number_blackbox_evaluations < dim+1 ) {
     .      std::cout << "Maximal number of blackbox evaluations to small" << std::endl;
     .      EXIT_FLAG = -4;
     .    }
     6    if ( EXIT_FLAG != NOEXIT ) return EXIT_FLAG;
     .  
    11    TSurrogateModel surrogate_model_prototype( surrogate_basis );
   803  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
 1,616  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::MinimumFrobeniusNormModel(BasisForMinimumFrobeniusNormModel&) (1x)
    41    for ( int i = 0; i < nb_constraints+1; i++ )
    30      surrogate_models.push_back ( surrogate_model_prototype );
22,551  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
     .  
     .    ImprovePoisedness surrogate_nodes ( surrogate_basis, threshold_for_poisedness_constant,
    18                                        evaluations.max_nb_nodes, delta, verbose );
11,466  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
55,876  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/ImprovePoisedness.cpp:ImprovePoisedness::ImprovePoisedness(BasisForSurrogateModelBaseClass&, double, int, double&, int) (1x)
     .    SubproblemOptimization<TSurrogateModel> surrogate_optimization (
    12      surrogate_models, delta, inner_boundary_path_constants);
245,517  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     7    if ( !upper_bound_constraints.empty() ) 
   111  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     .      surrogate_optimization.set_upper_bounds ( upper_bound_constraints );
     7    if ( !lower_bound_constraints.empty() ) 
   111  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     .      surrogate_optimization.set_lower_bounds ( lower_bound_constraints );
     .  
     4    if ( stochastic_optimization)
    16      gaussian_processes.initialize ( dim, nb_constraints + 1, delta,
455,871  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcessSupport.cpp:GaussianProcessSupport::initialize(int, int, double&, std::vector<double, std::allocator<double> > const&, int) (1x)
     .                                      update_at_evaluations, update_interval_length );
     .  
     .  //  std::random_device rand_dev;
     1    int random_seed = 25041981;//rand_dev();
     5    std::mt19937 rand_generator(random_seed);
46,780  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     6    std::normal_distribution<double> norm_dis(0e0,3e-1);
    34  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     .  
    13    if ( verbose >= 2 ) { std::cout << "Initial evaluation of black box functions" << std::endl; }
98,586  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     .    // initial evaluations 
     2    evaluations.best_index = 0;
     6    blackbox_evaluator( x, true );   
2,938,631  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     6    if ( !last_point_is_feasible ( ) ) {
   912  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     .      if ( verbose >= 1 ) 
     .        std::cout << "Initial point is not feasibile" << std::endl;
     .  //    EXIT_FLAG = -3;
     .  //    return EXIT_FLAG;
     .    }
    47    for ( int i = 0; i < dim; i++ ) {
    42      x_trial = x;
 3,780  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7x)
    84      x_trial.at(i) += delta;
   420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7x)
    49      blackbox_evaluator( x_trial, true );
204,912,582  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7x)
     .    }
     8    if ( verbose == 3 ) { std::cout << "Building initial models ... "; }
   530  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     3    update_surrogate_models();
29,891,988  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
    13    if ( verbose == 3 ) { std::cout << "done" << std::endl; }
 1,272  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     .  
     .  
     .  
     .  /*
     .    std::vector<double> x_loc(2);
     .    std::vector<double> fvals(3);
     .    std::ofstream outputfile ( "surrogate_data_o.dat" );
     .    if ( outputfile.is_open( ) ) {
-- line 557 ----------------------------------------
-- line 567 ----------------------------------------
     .        }
     .      }
     .      outputfile.close( );
     .    } else std::cout << "Unable to open file." << std::endl;
     .  
     .    return 0;
     .  */
     .  
    14    x_trial = evaluations.nodes[ evaluations.best_index ];
   555  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     8    if ( verbose == 3 ) { std::cout << "Value of criticality measure : "; }
   524  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     9    criticality_value = surrogate_optimization.compute_criticality_measure( x_trial );
8,564,646  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
    15    if ( verbose == 3 ) { std::cout << criticality_value << std::endl;; }
 3,282  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     .  
    11    do {
     .      /*----------------------------------------------------------------------------------*/
     .      /*- STEP 1 - STEP 1 - STEP 1 - STEP 1 - STEP 1 - STEP 1 - STEP 1 - STEP 1 - STEP 1 -*/
     .      /*----------------------------------------------------------------------------------*/
     .      //if criticality measure is small, check if model improvement is necessary
    28      if ( criticality_value <= eps_c ) {
     .        if ( verbose == 3 && delta > mu * criticality_value ) {
     .          std::cout << " Criticality measure below threshold" << std::endl;
     .          std::cout << " -----------------------------------" << std::endl;
     .        }
     .        while ( delta > mu * criticality_value ) {
     .          update_trustregion( omega );
     .          if ( EXIT_FLAG != NOEXIT ) break;
     .          if (verbose == 3) {
-- line 593 ----------------------------------------
-- line 609 ----------------------------------------
     .            std::cout << "  Value of criticality measure is " << criticality_value << std::endl;
     .            std::cout << " -----------------------------------" << std::endl;
     .          }
     .        }
     .      }
     .      /*----------------------------------------------------------------------------------*/
     .      /*- STEP 2 - STEP 2 - STEP 2 - STEP 2 - STEP 2 - STEP 2 - STEP 2 - STEP 2 - STEP 2 -*/
     .      /*----------------------------------------------------------------------------------*/
   108      while (EXIT_FLAG == NOEXIT)  {
    72        if ( verbose == 3 ) { 
   162          std::cout << "Computing trial point ... " << std::endl;
22,968  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36x)
     .        }
   252        x_trial = evaluations.nodes[ evaluations.best_index ];
 9,990  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36x)
   162        trial_model_value = surrogate_optimization.compute_trial_point ( x_trial );
619,850,901  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
   270        trial_model_value = surrogate_models[0].evaluate( x_trial );
3,892,044  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/MinimumFrobeniusNormModel.cpp:MinimumFrobeniusNormModel::evaluate(std::vector<double, std::allocator<double> > const&) (18x)
   270  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
     .  
     .        /*-------------------------------------------------------------------------*/
     .        /*- STEP 3 - STEP 3 - STEP 3 - STEP 3 - STEP 3 - STEP 3 - STEP 3 - STEP 3 -*/
     .        /*-------------------------------------------------------------------------*/
   144        if ( verbose == 3 ) { std::cout << "Checking feasibility ... "; }
 9,432  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
   126        blackbox_evaluator( x_trial, false );   
472,658,824  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
   234        if ( verbose == 3 ) { std::cout << "done" << std::endl; }
22,896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36x)
   108        if ( !last_point_is_feasible( ) ) {
 6,261  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
   195          if ( verbose == 3 ) { std::cout << " Feasibility violated" << std::endl; }
19,050  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30x)
   180          replace_node_index = surrogate_nodes.replace_node( evaluations.best_index, 
1,147,534  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/ImprovePoisedness.cpp:ImprovePoisedness::replace_node(int, BlackboxData const&, std::vector<double, std::allocator<double> > const&) (15x)
     .                                                             evaluations, x_trial );
    45          add_trial_node( );
320,982,016  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
    45          update_surrogate_models( );
889,604,095  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
    90          update_trustregion( theta );
2,136,983  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
    90          if ( EXIT_FLAG != NOEXIT ) break;
   120          surrogate_nodes.improve_poisedness (evaluations.best_index, evaluations );
641,272,742  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/ImprovePoisedness.cpp:ImprovePoisedness::improve_poisedness(int, BlackboxData&) (15x)
    60          if ( stochastic_optimization ) {
   705            for ( int i = 0; i < dim; i++ )
 2,835              x_trial.at(i) = evaluations.nodes[ evaluations.best_index].at( i ) +
14,175  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (315x)
   945                              delta * norm_dis( rand_generator ) * 1e0;
77,022  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (105x)
   105            evaluations.nodes.push_back( x_trial );
24,872  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
     .          }
    45          blackbox_evaluator( );
363,431,597  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
    92          if ( EXIT_FLAG != NOEXIT ) break;
    56          update_surrogate_models( );
792,794,905  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14x)
     .        } else {
    39          if ( verbose == 3 ) { std::cout << "Found feasible trial step" << std::endl; }
 3,780  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     6          break;
     .        }
     .      }
     .     
     .  
     .  
     .      /*----------------------------------------------------------------------------------*/
     .      /*- STEP 4 - STEP 4 - STEP 4 - STEP 4 - STEP 4 - STEP 4 - STEP 4 - STEP 4 - STEP 4 -*/
     .      /*----------------------------------------------------------------------------------*/
    24      if ( EXIT_FLAG == NOEXIT ) { 
    18        acceptance_ratio = compute_acceptance_ratio ( );
   915  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
    27        if ( verbose == 3 ) { std::cout << std::endl; }
 2,208  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
    12        if ( verbose >= 2 ) { 
    27          std::cout << "*****************************************" << std::endl; 
 3,843  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     .        }
    33        if ( acceptance_ratio >= eta_1 && acceptance_ratio < 2e0 ) {
    39          if ( verbose >= 2 ) { std::cout << " Step successful" << std::endl; }
 3,774  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
    18          update_trustregion( gamma_inc );
323,013  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     .        } 
    48        if ( (acceptance_ratio >= eta_0 && acceptance_ratio < eta_1) || acceptance_ratio >= 2e0 ) {
     .          if ( verbose >= 2 ) { std::cout << " Step acceptable" << std::endl; }
     .        }
    18        if ( acceptance_ratio >= eta_0 ) {
    36          replace_node_index = surrogate_nodes.replace_node( evaluations.best_index, 
222,833  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/ImprovePoisedness.cpp:ImprovePoisedness::replace_node(int, BlackboxData const&, std::vector<double, std::allocator<double> > const&) (3x)
     .                                                             evaluations, x_trial );
     9          add_trial_node( );
63,676,666  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     9          update_surrogate_models( );
175,054,597  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
    24          evaluations.best_index = evaluations.nodes.size()-1;
    51  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     .        }
    18        if ( acceptance_ratio < eta_0 ) {
     .          if ( verbose >= 2 ) { std::cout << " Step rejected" << std::endl; }
     .          replace_node_index = surrogate_nodes.replace_node( evaluations.best_index, 
     .                                                             evaluations, x_trial );
     .          add_trial_node( );
     .          update_surrogate_models( );
     .          if ( stochastic_optimization ) {
     .            for ( int i = 0; i < dim; i++ )
     .              x_trial.at(i) = evaluations.nodes[ evaluations.best_index].at( i ) +
-- line 688 ----------------------------------------
-- line 697 ----------------------------------------
     .            if ( EXIT_FLAG != NOEXIT ) {
     .              std::cout << "*****************************************" << std::endl;
     .              break;
     .            }
     .            update_surrogate_models( );
     .          }
     .        }
     .  
    42        x_trial = evaluations.nodes[ evaluations.best_index ];
 1,665  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
    27        criticality_value = surrogate_optimization.compute_criticality_measure( x_trial );
112,277,278  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     .      
     .  //  val = gaussian_processes.evaluate_objective( evaluations);
     .  
    12        if ( verbose >= 2 ) {
    27          std::cout << "*****************************************" << std::endl;
 3,843  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
    12          if ( verbose == 3 ) {
    42            std::cout << "  Acceptance ratio      :  " << acceptance_ratio << std::endl;
11,422  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9x)
    42            std::cout << "  Criticality measure   :  " << criticality_value << std::endl;
11,482  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9x)
     .          }
    42          std::cout << "  Trust-region radius   :  " << delta << std::endl;
11,202  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9x)
    51          std::cout << "  Number of evaluations :  " << evaluations.nodes.size() << std::endl;
 5,745  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
    27          std::cout << "-----------------------------------------" << std::endl;
 3,843  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
    72          std::cout << "  Current value         :  " << evaluations.values[0].at( evaluations.best_index ) << std::endl;
11,697  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
     .    //      std::cout << "  Current value         :  " << val << std::endl;
    12          if ( dim > 1) {
    72            std::cout << "  Current point         : [" << evaluations.nodes[ evaluations.best_index ].at(0) << std::endl;
11,735  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
   123            for (int i = 1; i < dim-1; i++)
   390              std::cout << "                           " << evaluations.nodes[ evaluations.best_index ].at(i) << std::endl;
58,296  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (75x)
    96            std::cout << "                           " << evaluations.nodes[ evaluations.best_index ].at(dim-1) << "]"<< std::endl;
13,136  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (18x)
     .          } else
     .            std::cout << "  Current point         : [" << evaluations.nodes[ evaluations.best_index ].at(0) << "]"<< std::endl;
    42          std::cout << "*****************************************" << std::endl << std::endl;
 6,051  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9x)
     .        }
     .  
     .      }
     .  
    16    } while ( EXIT_FLAG == NOEXIT );
     .  
     .  //  val = gaussian_processes.evaluate_objective( evaluations);
    14    val = evaluations.values[0].at(evaluations.best_index);
    75  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
    13    x = evaluations.nodes[ evaluations.best_index ];
   555  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     .  
     4    if ( verbose >= 2 ) {
    13      std::cout << std::endl << "RESULTS OF OPTIMIZATION:" << std::endl;
 2,006  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     9      std::cout << "------------------------" << std::endl;
 1,266  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     9      std::cout << "*********************************************" << std::endl;
 1,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     4      if ( dim > 1) {
    24        std::cout << "  Best point            : [" << evaluations.nodes[ evaluations.best_index ].at(0) << std::endl;
 3,895  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
    41        for (int i = 1; i < dim-1; i++)
   130          std::cout << "                           " << evaluations.nodes[ evaluations.best_index ].at(i) << std::endl;
19,415  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (25x)
    32        std::cout << "                           " << evaluations.nodes[ evaluations.best_index ].at(dim-1) << "]"<< std::endl;
 4,398  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
     .      } else
     .        std::cout << "  Best point            : [" << evaluations.nodes[ evaluations.best_index ].at(0) << "]"<< std::endl;
     9      std::cout << "---------------------------------------------" << std::endl;
 1,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
    24      std::cout << "  Best value            :  " << evaluations.values[0].at( evaluations.best_index ) << std::endl;
 3,916  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
     9      std::cout << "---------------------------------------------" << std::endl;
 1,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
    14      std::cout << "  Trust-region radius   :  " << delta << std::endl;
 3,752  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
    20      std::cout << "  Number of evaluations :  " << evaluations.values[0].size() << std::endl;
 1,927  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
     9      std::cout << "---------------------------------------------" << std::endl;
 1,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     4      if ( EXIT_FLAG == 0 )
     .        std::cout << " Minimal trust region radius reached" << std::endl;
     4      if ( EXIT_FLAG == 1 )
     9        std::cout << " Maximal number of evaluations reached" << std::endl;
 1,281  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     4      if ( EXIT_FLAG == -4 )
     .        std::cout << " Inconsistent parameter" << std::endl;
    14      std::cout << "*********************************************" << std::endl << std::endl;
 2,023  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3x)
     .    }
     .  
     .  
     .  
     .  /*
     .    Eigen::VectorXd x_loc(2);
     .    Eigen::VectorXd fvals(3);
     .    std::ofstream outputfile ( "surrogate_data_o.dat" );
-- line 770 ----------------------------------------
-- line 781 ----------------------------------------
     .        }
     .      }
     .      outputfile.close( );
     .    } else std::cout << "Unable to open file." << std::endl;
     .  */
     .  
     .    
     .  
     1    return 1;
     5  }
     .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/cmath
--------------------------------------------------------------------------------
        Ir 

-- line 74 ----------------------------------------
         .  
         .  namespace std _GLIBCXX_VISIBILITY(default)
         .  {
         .  _GLIBCXX_BEGIN_NAMESPACE_VERSION
         .  
         .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
         .    inline _GLIBCXX_CONSTEXPR double
         .    abs(double __x)
19,410,890    { return __builtin_fabs(__x); }
         .  #endif
         .  
         .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
         .    inline _GLIBCXX_CONSTEXPR float
         .    abs(float __x)
         .    { return __builtin_fabsf(__x); }
         .  
         .    inline _GLIBCXX_CONSTEXPR long double
-- line 90 ----------------------------------------
-- line 354 ----------------------------------------
         .  
         .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
         .    inline _GLIBCXX_CONSTEXPR float
         .    log(float __x)
         .    { return __builtin_logf(__x); }
         .  
         .    inline _GLIBCXX_CONSTEXPR long double
         .    log(long double __x)
 6,004,080    { return __builtin_logl(__x); }
 2,023,734  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (400272x)
         .  #endif
         .  
         .    template<typename _Tp>
         .      inline _GLIBCXX_CONSTEXPR
         .      typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
         .                                      double>::__type
         .      log(_Tp __x)
         .      { return __builtin_log(__x); }
-- line 370 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h
--------------------------------------------------------------------------------
       Ir 

-- line 41 ----------------------------------------
        .    * by using Householder transformations. Here, \b P is a permutation matrix, \b Q a unitary matrix and \b R an 
        .    * upper triangular matrix.
        .    *
        .    * This decomposition performs a very prudent full pivoting in order to be rank-revealing and achieve optimal
        .    * numerical stability. The trade-off is that it is slower than HouseholderQR and ColPivHouseholderQR.
        .    *
        .    * \sa MatrixBase::fullPivHouseholderQr()
        .    */
    2,328  template<typename _MatrixType> class FullPivHouseholderQR
  160,850  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (276x)
        .  {
        .    public:
        .  
        .      typedef _MatrixType MatrixType;
        .      enum {
        .        RowsAtCompileTime = MatrixType::RowsAtCompileTime,
        .        ColsAtCompileTime = MatrixType::ColsAtCompileTime,
        .        Options = MatrixType::Options,
-- line 57 ----------------------------------------
-- line 70 ----------------------------------------
        .      typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;
        .      typedef typename internal::plain_col_type<MatrixType>::type ColVectorType;
        .  
        .      /** \brief Default Constructor.
        .        *
        .        * The default constructor is useful in cases in which the user intends to
        .        * perform decompositions via FullPivHouseholderQR::compute(const MatrixType&).
        .        */
        5      FullPivHouseholderQR()
        .        : m_qr(),
        .          m_hCoeffs(),
        .          m_rows_transpositions(),
        .          m_cols_transpositions(),
        .          m_cols_permutation(),
        .          m_temp(),
        .          m_isInitialized(false),
       32          m_usePrescribedThreshold(false) {}
      730  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6x)
        .  
        .      /** \brief Default Constructor with memory preallocation
        .        *
        .        * Like the default constructor but with preallocation of the internal data
        .        * according to the specified problem \a size.
        .        * \sa FullPivHouseholderQR()
        .        */
        .      FullPivHouseholderQR(Index rows, Index cols)
-- line 94 ----------------------------------------
-- line 108 ----------------------------------------
        .        * 
        .        * \code
        .        * FullPivHouseholderQR<MatrixType> qr(matrix.rows(), matrix.cols());
        .        * qr.compute(matrix);
        .        * \endcode
        .        * 
        .        * \sa compute()
        .        */
      198      FullPivHouseholderQR(const MatrixType& matrix)
        .        : m_qr(matrix.rows(), matrix.cols()),
      429          m_hCoeffs((std::min)(matrix.rows(), matrix.cols())),
    1,650  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
      429          m_rows_transpositions((std::min)(matrix.rows(), matrix.cols())),
    1,650  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
      429          m_cols_transpositions((std::min)(matrix.rows(), matrix.cols())),
    1,650  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
        .          m_cols_permutation(matrix.cols()),
        .          m_temp(matrix.cols()),
        .          m_isInitialized(false),
    1,782          m_usePrescribedThreshold(false)
  116,726  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (330x)
        .      {
      165        compute(matrix);
1,288,862,454  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      165      }
        .  
        .      /** This method finds a solution x to the equation Ax=b, where A is the matrix of which
        .        * \c *this is the QR decomposition.
        .        *
        .        * \param b the right-hand-side of the equation to solve.
        .        *
        .        * \returns the exact or least-square solution if the rank is greater or equal to the number of columns of A,
        .        * and an arbitrary solution otherwise.
-- line 135 ----------------------------------------
-- line 141 ----------------------------------------
        .        *
        .        * \note_about_arbitrary_choice_of_solution
        .        *
        .        * Example: \include FullPivHouseholderQR_solve.cpp
        .        * Output: \verbinclude FullPivHouseholderQR_solve.out
        .        */
        .      template<typename Rhs>
        .      inline const internal::solve_retval<FullPivHouseholderQR, Rhs>
      165      solve(const MatrixBase<Rhs>& b) const
        .      {
      198        eigen_assert(m_isInitialized && "FullPivHouseholderQR is not initialized.");
      363        return internal::solve_retval<FullPivHouseholderQR, Rhs>(*this, b.derived());
    4,125  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
       66      }
        .  
        .      /** \returns Expression object representing the matrix Q
        .        */
        .      MatrixQReturnType matrixQ(void) const;
        .  
        .      /** \returns a reference to the matrix where the Householder QR decomposition is stored
        .        */
    7,124      const MatrixType& matrixQR() const
        .      {
   10,686        eigen_assert(m_isInitialized && "FullPivHouseholderQR is not initialized.");
    1,781        return m_qr;
    3,562      }
        .  
        .      FullPivHouseholderQR& compute(const MatrixType& matrix);
        .  
        .      /** \returns a const reference to the column permutation matrix */
    6,992      const PermutationType& colsPermutation() const
        .      {
   10,488        eigen_assert(m_isInitialized && "FullPivHouseholderQR is not initialized.");
    3,496        return m_cols_permutation;
    3,496      }
        .  
        .      /** \returns a const reference to the vector of indices representing the rows transpositions */
    6,992      const IntDiagSizeVectorType& rowsTranspositions() const
        .      {
   10,488        eigen_assert(m_isInitialized && "FullPivHouseholderQR is not initialized.");
    3,496        return m_rows_transpositions;
    3,496      }
        .  
        .      /** \returns the absolute value of the determinant of the matrix of which
        .        * *this is the QR decomposition. It has only linear complexity
        .        * (that is, O(n) where n is the dimension of the square matrix)
        .        * as the QR decomposition has already been computed.
        .        *
        .        * \note This is only for square matrices.
        .        *
-- line 189 ----------------------------------------
-- line 210 ----------------------------------------
        .      typename MatrixType::RealScalar logAbsDeterminant() const;
        .  
        .      /** \returns the rank of the matrix of which *this is the QR decomposition.
        .        *
        .        * \note This method has to determine which pivots should be considered nonzero.
        .        *       For that, it uses the threshold value that you can control by calling
        .        *       setThreshold(const RealScalar&).
        .        */
   18,635      inline Index rank() const
        .      {
        .        using std::abs;
   22,362        eigen_assert(m_isInitialized && "FullPivHouseholderQR is not initialized.");
   48,451        RealScalar premultiplied_threshold = abs(m_maxpivot) * threshold();
  626,136  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7454x)
    3,727        Index result = 0;
1,213,883        for(Index i = 0; i < m_nonzero_pivots; ++i)
2,988,120          result += (abs(m_qr.coeff(i,i)) > premultiplied_threshold);
10,358,816  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (398416x)
    3,727        return result;
   14,908      }
        .  
        .      /** \returns the dimension of the kernel of the matrix of which *this is the QR decomposition.
        .        *
        .        * \note This method has to determine which pivots should be considered nonzero.
        .        *       For that, it uses the threshold value that you can control by calling
        .        *       setThreshold(const RealScalar&).
        .        */
        .      inline Index dimensionOfKernel() const
-- line 235 ----------------------------------------
-- line 284 ----------------------------------------
        .      internal::solve_retval<FullPivHouseholderQR, typename MatrixType::IdentityReturnType>
        .      inverse() const
        .      {
        .        eigen_assert(m_isInitialized && "FullPivHouseholderQR is not initialized.");
        .        return internal::solve_retval<FullPivHouseholderQR,typename MatrixType::IdentityReturnType>
        .                 (*this, MatrixType::Identity(m_qr.rows(), m_qr.cols()));
        .      }
        .  
      297      inline Index rows() const { return m_qr.rows(); }
      594  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      594      inline Index cols() const { return m_qr.cols(); }
    1,188  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
        .      
        .      /** \returns a const reference to the vector of Householder coefficients used to represent the factor \c Q.
        .        * 
        .        * For advanced uses only.
        .        */
   12,236      const HCoeffsType& hCoeffs() const { return m_hCoeffs; }
        .  
        .      /** Allows to prescribe a threshold to be used by certain methods, such as rank(),
        .        * who need to determine when pivots are to be considered nonzero. This is not used for the
        .        * QR decomposition itself.
        .        *
        .        * When it needs to get the threshold value, Eigen calls threshold(). By default, this
        .        * uses a formula to automatically determine a reasonable threshold.
        .        * Once you have called the present method setThreshold(const RealScalar&),
-- line 307 ----------------------------------------
-- line 335 ----------------------------------------
        .        m_usePrescribedThreshold = false;
        .        return *this;
        .      }
        .  
        .      /** Returns the threshold that will be used by certain methods such as rank().
        .        *
        .        * See the documentation of setThreshold(const RealScalar&).
        .        */
   18,635      RealScalar threshold() const
        .      {
   22,362        eigen_assert(m_isInitialized || m_usePrescribedThreshold);
    7,454        return m_usePrescribedThreshold ? m_prescribedThreshold
        .        // this formula comes from experimenting (see "LU precision tuning" thread on the list)
        .        // and turns out to be identical to Higham's formula used already in LDLt.
   48,451                                        : NumTraits<Scalar>::epsilon() * RealScalar(m_qr.diagonalSize());
  465,875  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7454x)
   18,635      }
        .  
        .      /** \returns the number of nonzero pivots in the QR decomposition.
        .        * Here nonzero is meant in the exact sense, not in a fuzzy sense.
        .        * So that notion isn't really intrinsically interesting, but it is
        .        * still useful when implementing algorithms.
        .        *
        .        * \sa rank()
        .        */
-- line 358 ----------------------------------------
-- line 400 ----------------------------------------
        .  
        .  /** Performs the QR factorization of the given matrix \a matrix. The result of
        .    * the factorization is stored into \c *this, and a reference to \c *this
        .    * is returned.
        .    *
        .    * \sa class FullPivHouseholderQR, FullPivHouseholderQR(const MatrixType&)
        .    */
        .  template<typename MatrixType>
      264  FullPivHouseholderQR<MatrixType>& FullPivHouseholderQR<MatrixType>::compute(const MatrixType& matrix)
        .  {
        .    using std::abs;
      132    Index rows = matrix.rows();
      594  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      132    Index cols = matrix.cols();
      594  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      231    Index size = (std::min)(rows,cols);
      462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .  
      165    m_qr = matrix;
7,413,909  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      198    m_hCoeffs.resize(size);
    1,254  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .  
      198    m_temp.resize(cols);
    1,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .  
      297    m_precision = NumTraits<Scalar>::epsilon() * RealScalar(size);
      528  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .  
      198    m_rows_transpositions.resize(size);
    1,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      198    m_cols_transpositions.resize(size);
    1,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
       33    Index number_of_transpositions = 0;
        .  
       66    RealScalar biggest(0);
        .  
       99    m_nonzero_pivots = size; // the generic case is that in which all pivots are nonzero (invertible case)
       99    m_maxpivot = RealScalar(0);
        .  
    8,872    for (Index k = 0; k < size; ++k)
        .    {
        .      Index row_of_biggest_in_corner, col_of_biggest_in_corner;
        .      RealScalar biggest_in_corner;
        .  
   40,204      biggest_in_corner = m_qr.bottomRightCorner(rows-k, cols-k)
470,145,830  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5244x)
        .                              .cwiseAbs()
        .                              .maxCoeff(&row_of_biggest_in_corner, &col_of_biggest_in_corner);
    6,992      row_of_biggest_in_corner += k;
    6,992      col_of_biggest_in_corner += k;
    3,562      if(k==0) biggest = biggest_in_corner;
        .  
        .      // if the corner is negligible, then we have less than full rank, and we can finish early
   17,480      if(internal::isMuchSmallerThan(biggest_in_corner, biggest, m_precision))
  117,116  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
        .      {
        .        m_nonzero_pivots = k;
        .        for(Index i = k; i < size; i++)
        .        {
        .          m_rows_transpositions.coeffRef(i) = i;
        .          m_cols_transpositions.coeffRef(i) = i;
        .          m_hCoeffs.coeffRef(i) = Scalar(0);
        .        }
        .        break;
        .      }
        .  
   15,732      m_rows_transpositions.coeffRef(k) = row_of_biggest_in_corner;
   40,204  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
   15,732      m_cols_transpositions.coeffRef(k) = col_of_biggest_in_corner;
   40,204  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
    5,244      if(k != row_of_biggest_in_corner) {
   57,132        m_qr.row(k).tail(cols-k).swap(m_qr.row(row_of_biggest_in_corner).tail(cols-k));
29,064,555  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7935x)
    1,587        ++number_of_transpositions;
        .      }
    5,244      if(k != col_of_biggest_in_corner) {
   28,872        m_qr.col(k).swap(m_qr.col(col_of_biggest_in_corner));
21,236,126  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4812x)
    1,604        ++number_of_transpositions;
        .      }
        .  
        .      RealScalar beta;
   47,196      m_qr.col(k).tail(rows-k).makeHouseholderInPlace(m_hCoeffs.coeffRef(k), beta);
23,544,364  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6992x)
   13,984      m_qr.coeffRef(k,k) = beta;
   71,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
        .  
        .      // remember the maximum absolute value of diagonal coefficients
   19,630      if(abs(beta) > m_maxpivot) m_maxpivot = abs(beta);
   19,965  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1815x)
        .  
   66,424      m_qr.bottomRightCorner(rows-k, cols-k-1)
735,486,860  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8740x)
   13,984          .applyHouseholderOnTheLeft(m_qr.col(k).tail(rows-k-1), m_hCoeffs.coeffRef(k), &m_temp.coeffRef(k+1));
   40,204  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
        .    }
        .  
      231    m_cols_permutation.setIdentity(cols);
  348,978  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    8,872    for(Index k = 0; k < size; ++k)
   26,220      m_cols_permutation.applyTranspositionOnTheRight(k, m_cols_transpositions.coeff(k));
  870,504  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
        .  
      244    m_det_pq = (number_of_transpositions%2) ? -1 : 1;
       66    m_isInitialized = true;
        .  
       33    return *this;
      198  }
        .  
        .  namespace internal {
        .  
        .  template<typename _MatrixType, typename Rhs>
        .  struct solve_retval<FullPivHouseholderQR<_MatrixType>, Rhs>
        .    : solve_retval_base<FullPivHouseholderQR<_MatrixType>, Rhs>
        .  {
      495    EIGEN_MAKE_SOLVE_HELPERS(FullPivHouseholderQR<_MatrixType>,Rhs)
    3,366  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .  
      264    template<typename Dest> void evalTo(Dest& dst) const
        .    {
      396      const Index rows = dec().rows(), cols = dec().cols();
    2,376  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (132x)
      330      eigen_assert(rhs().rows() == rows);
      858  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
        .  
        .      // FIXME introduce nonzeroPivots() and use it here. and more generally,
        .      // make the same improvements in this dec as in FullPivLU.
      297      if(dec().rank()==0)
  134,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
        .      {
        .        dst.setZero();
        .        return;
        .      }
        .  
      396      typename Rhs::PlainObject c(rhs());
2,479,847  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
        .  
      429      Matrix<Scalar,1,Rhs::ColsAtCompileTime> temp(rhs().cols());
   36,287  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (132x)
   19,558      for (Index k = 0; k < dec().rank(); ++k)
7,329,654  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3562x)
        .      {
    5,244        Index remainingSize = rows-k;
   48,944        c.row(k).swap(c.row(dec().rowsTranspositions().coeff(k)));
17,394,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10488x)
   71,668        c.bottomRightCorner(remainingSize, rhs().cols())
398,913,534  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15732x)
    5,244         .applyHouseholderOnTheLeft(dec().matrixQR().col(k).tail(remainingSize-1),
   13,984  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
   13,984                                    dec().hCoeffs().coeff(k), &temp.coeffRef(0));
   54,188  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
        .      }
        .  
    1,155      dec().matrixQR()
67,705,771  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (297x)
      198         .topLeftCorner(dec().rank(), dec().rank())
      528  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
        .         .template triangularView<Upper>()
       99         .solveInPlace(c.topRows(dec().rank()));
      264  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .  
   71,998      for(Index i = 0; i < dec().rank(); ++i) dst.row(dec().colsPermutation().indices().coeff(i)) = c.row(i);
17,892,076  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15798x)
      297      for(Index i = dec().rank(); i < cols; ++i) dst.row(dec().colsPermutation().indices().coeff(i)).setZero();
  134,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
      198    }
        .  };
        .  
        .  /** \ingroup QR_Module
        .    *
        .    * \brief Expression type for return value of FullPivHouseholderQR::matrixQ()
        .    *
        .    * \tparam MatrixType type of underlying dense matrix
        .    */
-- line 536 ----------------------------------------
-- line 599 ----------------------------------------
        .  }
        .  
        .  /** \return the full-pivoting Householder QR decomposition of \c *this.
        .    *
        .    * \sa class FullPivHouseholderQR
        .    */
        .  template<typename Derived>
        .  const FullPivHouseholderQR<typename MatrixBase<Derived>::PlainObject>
      165  MatrixBase<Derived>::fullPivHouseholderQr() const
        .  {
      264    return FullPivHouseholderQR<PlainObject>(eval());
1,288,988,321  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
       99  }
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_FULLPIVOTINGHOUSEHOLDERQR_H

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/GaussianProcess.cpp
--------------------------------------------------------------------------------
        Ir 

         .  #include "GaussianProcess.hpp"
         .  #include "math.h"
         .  #include <iostream>
         .  #include <cassert>
         .  
         .  //--------------------------------------------------------------------------------
         6  GaussianProcess::GaussianProcess ( int n ) : 
         .    TriangularMatrixOperations ( n ),
        67    dim( n )
     1,845  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14x)
     1,353  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::TriangularMatrixOperations(int) (1x)
         .  {
         8    lb.reserve( n+1 );
       888  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         8    ub.reserve( n+1 );
       882  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
         8    gp_parameters.reserve(n+1);
       882  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        53    for (int i = 0; i < n+1; i++) {
        64      lb.push_back( 0e0  );
     1,216  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
        64      ub.push_back( 10e0 );
     1,216  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
        64      gp_parameters.push_back( -1e0 );
     1,216  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
         .    }
         2    nb_gp_nodes = 0;
         2    gp_pointer = NULL;
         5  } 
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  double GaussianProcess::evaluate_kernel ( std::vector<double> const &x, 
         .                                            std::vector<double> const &y )
   872,620  {
   373,980    dist = 0e0;
 5,859,020    for ( int i = 0; i < dim; ++i )
34,904,800      dist += pow( (x.at(i) - y.at(i)), 2e0) /  gp_parameters.at( i+1 );
264,956,265  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3490480x)
 1,495,920    kernel_evaluation = exp(-dist / 2e0 );
 4,981,390  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (124660x)
         .    
 1,371,260    return kernel_evaluation * gp_parameters.at( 0 ) ;
 7,479,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (124660x)
   623,300  }
         .  //--------------------------------------------------------------------------------
         .  //--------------------------------------------------------------------------------
         .  double GaussianProcess::evaluate_kernel ( std::vector<double> const &x, 
         .                                            std::vector<double> const &y,
         .                                            std::vector<double> const &p )
   204,480  {
    76,680    dist = 0e0;
 1,201,320    for ( int i = 0; i < dim; ++i )
 6,977,880      dist += pow( (x.at(i) - y.at(i)), 2e0) /  p.at( i+1 );
41,365,310  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (715680x)
   306,720    kernel_evaluation = exp(-dist / 2e0 );
   929,502  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (25560x)
         .    
   255,600    return kernel_evaluation * p.at( 0 ) ;
 1,533,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (25560x)
   127,800  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  double GaussianProcess::d_evaluate_kernel ( std::vector<double> const &x, 
         .                                              std::vector<double> const &y, 
         .                                              std::vector<double> const &p, int j )
         .  {
         .    dist = 0e0;
-- line 55 ----------------------------------------
-- line 66 ----------------------------------------
         .  }
         .  //--------------------------------------------------------------------------------
         .  
         .  
         .  //--------------------------------------------------------------------------------
         .  void GaussianProcess::build ( std::vector< std::vector<double> > const &nodes,
         .                                Eigen::VectorXd const &values,
         .                                Eigen::VectorXd const &noise ) 
        50  {
        30      nb_gp_nodes = nodes.size();
        85  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        20      gp_nodes.clear();
    32,591  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
       265      for ( int i = 0; i < nb_gp_nodes; ++i )
       480        gp_nodes.push_back ( nodes.at(i) );
    46,897  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (80x)
        30      gp_noise = noise;
     7,355  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        30      gp_function_values = values;
     7,355  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .  
        30      min_function_value = values.minCoeff( );
     3,060  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        30      max_function_value = values.maxCoeff( );
     3,060  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .  
        55      L.resize( nb_gp_nodes , nb_gp_nodes );
       460  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .  
       265      for (int i = 0; i < nb_gp_nodes; i++) {
     1,060        for (int j = 0; j <= i; j++) {
     6,660          L(i, j) = evaluate_kernel( gp_nodes[i], gp_nodes[j] );
   374,205  => ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (180x)
    36,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (540x)
     3,480          if( j != i ) L(j, i) = L(i, j);
    48,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (280x)
     1,700          if( i == j ) L(i, i) += pow( gp_noise(i) / 2e0, 2e0 );
    17,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (120x)
         .        }
         .      }
         .    
        65      CholeskyFactorization::compute( L, pos, rho, nb_gp_nodes );
   371,500  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/CholeskyFactorization.cpp:CholeskyFactorization::compute(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, int&, double&, int) (5x)
        35      assert( pos == 0 );
         .      
        40      scaled_function_values.resize(nb_gp_nodes);
       190  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
       265      for (int i = 0; i < nb_gp_nodes; i++) {
       760        scaled_function_values(i) = values(i) - min_function_value;
    11,760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (80x)
       720        scaled_function_values(i) /= 5e-1*( max_function_value-min_function_value );
     5,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
       440        scaled_function_values(i) -= 1e0;
     5,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
         .      }
         .  
        35      alpha = scaled_function_values;
    11,408  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        45      forward_substitution( L, alpha );
    70,135  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::forward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (5x)
        45      backward_substitution( L, alpha );
    70,140  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::backward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (5x)
         .    
         5      return;
        30  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void GaussianProcess::update ( std::vector<double> const &x, 
         .                                 double &value, 
         .                                 double &noise )
     1,440  {
     1,280    K0.resize( nb_gp_nodes );
     6,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
       800    nb_gp_nodes += 1;
     1,280    scaled_function_values.conservativeResize( nb_gp_nodes );
   161,899  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
     1,280    gp_function_values.conservativeResize( nb_gp_nodes );
   131,212  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
     1,280    gp_noise.conservativeResize( nb_gp_nodes );
   127,919  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
       960    gp_nodes.push_back( x );
   375,723  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
     2,080    gp_function_values( nb_gp_nodes-1 ) = value;
    23,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
     2,560    scaled_function_values( nb_gp_nodes-1 ) = ( value -  min_function_value ) / 
    23,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
     1,600                                              ( 5e-1*( max_function_value-min_function_value ) ) - 1e0;
     2,080    gp_noise( nb_gp_nodes-1 ) = noise;
    23,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
         .  
         .     
    27,280    for (int i = 0; i < nb_gp_nodes-1; i++) 
   101,520      K0(i) = evaluate_kernel( gp_nodes[i], x );
   609,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7520x)
10,218,000  => ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (3760x)
         .  
     1,440    forward_substitution( L, K0 );
19,180,240  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::forward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (160x)
         .  
     1,760    L.conservativeResize ( nb_gp_nodes, nb_gp_nodes );
22,200,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
    27,280    for (int i = 0; i < nb_gp_nodes-1; i++) {
    78,960      L( nb_gp_nodes-1, i ) = K0(i);
 1,206,960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7520x)
    48,880      L( i, nb_gp_nodes-1 ) = 0e0;
   654,240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3760x)
         .    }
     2,240    L( nb_gp_nodes-1, nb_gp_nodes-1 ) = 
    27,840  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
     6,240      sqrt( evaluate_kernel( x, x ) + pow( gp_noise(nb_gp_nodes-1) / 2e0, 2e0 ) - 
   329,920  => ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (160x)
    42,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
     1,440            K0.dot(K0) );
   648,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
         .          
     1,120    alpha = scaled_function_values;
   597,178  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
     1,440    forward_substitution( L, alpha );
20,581,760  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::forward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (160x)
     1,440    backward_substitution( L, alpha );
20,581,920  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::backward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (160x)
         .      
       160    return;
       800  }
         .  //--------------------------------------------------------------------------------
         .   
         .  //--------------------------------------------------------------------------------
         .  void GaussianProcess::evaluate ( std::vector<double> const &x,
         .                                   double &mean, double &variance ) 
    38,565  {
         .  
    34,280    K0.resize( nb_gp_nodes );
   324,426  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4285x)
         .      
   719,075    for (int i = 0; i < nb_gp_nodes; i++)
 3,139,425      K0(i) = evaluate_kernel( gp_nodes[i], x );
303,160,360  => ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (116275x)
18,836,550  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (232550x)
         .  
    59,990    mean = K0.dot(alpha) + 1e0;
19,417,290  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4285x)
    51,420    mean *= 5e-1*( max_function_value-min_function_value );
    29,995    mean += min_function_value;
         .  
         .  /*
         .    mean = K0.dot(alpha) + 1e0;
         .    mean *= 5e-1*( max_function_value-min_function_value );
         .    mean += min_function_value;
         .  */        
    38,565    forward_substitution( L, K0 );
654,963,520  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::forward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (4285x)
         .    
    98,555    variance = evaluate_kernel( x, x ) - K0.dot( K0 );
 8,835,670  => ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (4285x)
19,417,290  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4285x)
         .  
     4,285    return;
         .  
    21,425  }
         .  //--------------------------------------------------------------------------------
         .  
         .  //--------------------------------------------------------------------------------
         .  void GaussianProcess::estimate_hyper_parameters ( std::vector< std::vector<double> > const &nodes,
         .                                                    Eigen::VectorXd const &values,
         .                                                    Eigen::VectorXd const &noise ) 
        40  {
        30    nb_gp_nodes = nodes.size();
        85  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        20    gp_nodes.clear();
       420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
       265    for ( int i = 0; i < nb_gp_nodes; ++i )
       480      gp_nodes.push_back ( nodes.at(i) );
    96,778  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (80x)
        30    gp_noise = noise;
    12,435  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        30    gp_function_values = values;
    11,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        55    L.resize( nb_gp_nodes, nb_gp_nodes);
     4,750  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        55    dK.resize( nb_gp_nodes, nb_gp_nodes);
     4,660  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        15    gp_pointer = this;
         .  
         .  
        30    min_function_value = values.minCoeff( );
     3,060  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        30    max_function_value = values.maxCoeff( );
     3,060  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .  
        40    scaled_function_values.resize(nb_gp_nodes);
     5,460  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
       265    for (int i = 0; i < nb_gp_nodes; i++) {
       760      scaled_function_values(i) = values(i) - min_function_value;
    11,760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (80x)
       720      scaled_function_values(i) /= 5e-1*( max_function_value-min_function_value );
     5,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
       440      scaled_function_values(i) -= 1e0;
     5,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
         .    }
         .  
         .    double optval;    
         .    //adjust those settings to optimize GP approximation
         .    //--------------------------------------------------
        10    double max_noise = 0e0;
       265    for (int i = 0; i < nb_gp_nodes; i++) {
       480      if (gp_noise( i ) > max_noise)
     5,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (40x)
       108        max_noise = gp_noise( i );
     1,764  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12x)
         .    }
        35    lb[0] = 1e-1; // * pow(1000e0 * max_noise / 2e0, 2e0);
        60  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        35    ub[0] = 1e1;// * pow(1000e0 * max_noise / 2e0, 2e0);
        60  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
       235    for (int i = 0; i < dim; i++) {
       350      lb[i+1] = 1e-2;// * delta;
       420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35x)
       350      ub[i+1] = 1e2;// * delta;   
       420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35x)
         .    }
         .  
        55    if (gp_parameters[0] < 0e0) {
        60  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        35      gp_parameters[0] = 2e0;//(lb[0]*5e-1 + 5e-1*ub[0]);
        60  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
       275      for (int i = 1; i < dim+1; i++) {
       315        gp_parameters[i] = 4e0;//(lb[i]*5e-1 + 5e-1*ub[i]);
       420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35x)
         .      }
         .    } else {
         .      for (int i = 0; i < dim+1; i++) {
         .        if ( gp_parameters[i] <= lb[i] ) gp_parameters[i] = 1e0;//1.1 * lb[i];
         .        if ( gp_parameters[i] >= ub[i] ) gp_parameters[i] = 0.9 * ub[i];
         .      }
         .    }
         .    //--------------------------------------------------
         .  
         .    //initialize optimizer from NLopt library
         .  //  nlopt::opt opt(nlopt::LD_CCSAQ, dim+1);
        55    nlopt::opt opt(nlopt::LN_BOBYQA, dim+1);
    37,434  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10x)
         .  //  nlopt::opt opt(nlopt::GN_DIRECT, dim+1);
         .  
        65  std::cout << lb.size() << std::endl;
     9,538  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
         .  
         .    //opt = nlopt_create(NLOPT_LN_COBYLA, dim+1);
        30    opt.set_lower_bounds( lb );
     4,527  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        30    opt.set_upper_bounds( ub );
     4,512  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .      
        30    opt.set_max_objective( parameter_estimation_objective, gp_pointer);
    21,718  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .  
        25    opt.set_xtol_abs(1e-6);
     3,713  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
        25    opt.set_xtol_rel(1e-6);
       245  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .  //set timeout to NLOPT_TIMEOUT seconds
        25    opt.set_maxtime(0.5);
       245  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .    //perform optimization to get correction factors
        40    int exitflag = opt.optimize(gp_parameters, optval);
181,604,845  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .  
         .    //std::cout << "exitflag = "<< exitflag<<std::endl;
        65    std::cout << "OPTVAL .... " << optval << std::endl;
    88,251  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15x)
       535    for ( int i = 0; i < gp_parameters.size(); ++i )
       630  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (45x)
       800      std::cout << "gp_param = " << gp_parameters[i] << std::endl;
   152,151  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
        25    std::cout << std::endl;
     3,680  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
         .   
         .        
        10    return;
        20  }
         .  //--------------------------------------------------------------------------------
         .  
         .  
         .  //--------------------------------------------------------------------------------
         .  double GaussianProcess::parameter_estimation_objective(std::vector<double> const &x, 
         .                                                         std::vector<double> &grad, 
         .                                                         void *data) 
     5,680  {
         .  
     1,420    GaussianProcess *d = reinterpret_cast<GaussianProcess*>(data);
         .  
     1,420    double noise_regularization = 0e-2;
         .  
    37,630    for (int i = 0; i < d->nb_gp_nodes; i++) {
   150,520      for (int j = 0; j <= i; j++) {
   869,040        d->L(i, j) = d->evaluate_kernel( d->gp_nodes[i], d->gp_nodes[j], x );
52,978,892  => ../src/GaussianProcess.cpp:GaussianProcess::evaluate_kernel(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (25560x)
 5,214,240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (76680x)
   494,160        if (i != j) d->L(j, i) = d->L(i, j);
 6,918,240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39760x)
   247,080        if (i == j) d->L(i, i) += pow( d->gp_noise(i) / 2e0 + noise_regularization, 2e0 );
 2,487,840  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (17040x)
         .      }
         .    }
         .  
         .  
     9,230    d->CholeskyFactorization::compute( d->L, d->pos, d->rho, d->nb_gp_nodes );
52,753,000  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/CholeskyFactorization.cpp:CholeskyFactorization::compute(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, int&, double&, int) (710x)
     8,520    Eigen::VectorXd alpha( d->gp_nodes.size() );
   468,717  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2130x)
     4,970    assert(d->pos == 0);
     4,260    alpha = d->scaled_function_values;
 1,044,410  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (710x)
     5,680    d->forward_substitution( d->L, alpha );
 9,959,170  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::forward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (710x)
     5,680    d->backward_substitution( d->L, alpha );
 9,959,880  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/TriangularMatrixOperations.cpp:TriangularMatrixOperations::backward_substitution(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) (710x)
     7,100    double result = -0.5*(d->scaled_function_values).dot(alpha) + 
 1,368,170  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (710x)
     7,100                    -0.5*((double)d->nb_gp_nodes)*log(6.28);
    37,630    for (int i = 0; i < d->nb_gp_nodes; ++i)
   119,280      result -= 0.5*log(d->L(i,i)); 
 1,248,373  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11360x)
         .  
         .  
         .  /*
         .    //Eigen::ColPivHouseholderQR<Eigen::MatrixXd> S;
         .    d->S = (d->L).fullPivHouseholderQr();
         .    //d->S = (d->L).colPivHouseholderQr();
         .    d->K0 = (d->S).solve(d->scaled_function_values);
         .  
-- line 302 ----------------------------------------
-- line 314 ----------------------------------------
         .            if (i != j) d->dK(j, i) = d->dK(i, j);
         .          }
         .        }
         .        grad[k] = 0.5*((d->K0*(d->K0.transpose()))*d->dK - d->S.solve(d->dK)).trace() - 
         .                  0.5*((double)d->nb_gp_nodes)*0e-6;
         .      }
         .    }
         .  */
     2,840    return result;
         .      
     4,279  }
       134  => ../src/GaussianProcess.cpp:__static_initialization_and_destruction_0(int, int) (1x)
         .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Householder/Householder.h
--------------------------------------------------------------------------------
    Ir 

-- line 34 ----------------------------------------
     .    * On output:
     .    * \param tau the scaling factor of the Householder transformation
     .    * \param beta the result of H * \c *this
     .    *
     .    * \sa MatrixBase::makeHouseholder(), MatrixBase::applyHouseholderOnTheLeft(),
     .    *     MatrixBase::applyHouseholderOnTheRight()
     .    */
     .  template<typename Derived>
12,236  void MatrixBase<Derived>::makeHouseholderInPlace(Scalar& tau, RealScalar& beta)
     .  {
22,724    VectorBlock<Derived, internal::decrement_size<Base::SizeAtCompileTime>::ret> essentialPart(derived(), 1, size()-1);
1,436,856  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5244x)
10,488    makeHouseholder(essentialPart, tau, beta);
19,941,736  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
 8,740  }
     .  
     .  /** Computes the elementary reflector H such that:
     .    * \f$ H *this = [ beta 0 ... 0]^T \f$
     .    * where the transformation H is:
     .    * \f$ H = I - tau v v^*\f$
     .    * and the vector v is:
     .    * \f$ v^T = [1 essential^T] \f$
     .    *
-- line 54 ----------------------------------------
-- line 57 ----------------------------------------
     .    * \param tau the scaling factor of the Householder transformation
     .    * \param beta the result of H * \c *this
     .    *
     .    * \sa MatrixBase::makeHouseholderInPlace(), MatrixBase::applyHouseholderOnTheLeft(),
     .    *     MatrixBase::applyHouseholderOnTheRight()
     .    */
     .  template<typename Derived>
     .  template<typename EssentialPart>
13,984  void MatrixBase<Derived>::makeHouseholder(
     .    EssentialPart& essential,
     .    Scalar& tau,
     .    RealScalar& beta) const
     .  {
     .    using std::sqrt;
     .    using numext::conj;
     .    
     .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(EssentialPart)
22,724    VectorBlock<const Derived, EssentialPart::SizeAtCompileTime> tail(derived(), 1, size()-1);
1,387,912  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5244x)
     .    
19,096    RealScalar tailSqNorm = size()==1 ? RealScalar(0) : tail.squaredNorm();
7,334,476  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3463x)
10,488    Scalar c0 = coeff(0);
157,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
     .  
16,460    if(tailSqNorm == RealScalar(0) && numext::imag(c0)==RealScalar(0))
 1,176  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56x)
     .    {
   168      tau = RealScalar(0);
   336      beta = numext::real(c0);
 1,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56x)
   168      essential.setZero();
109,397  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (56x)
     .    }
     .    else
     .    {
20,304      beta = sqrt(numext::abs2(c0) + tailSqNorm);
47,376  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3384x)
16,920      if (numext::real(c0)>=RealScalar(0))
37,224  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1692x)
 7,542        beta = -beta;
27,072      essential = tail / (c0 - beta);
10,638,905  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3384x)
23,688      tau = conj((beta - c0) / beta);
37,224  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1692x)
     .    }
 8,796  }
     .  
     .  /** Apply the elementary reflector H given by
     .    * \f$ H = I - tau v v^*\f$
     .    * with
     .    * \f$ v^T = [1 essential^T] \f$
     .    * from the left to a vector or matrix.
     .    *
     .    * On input:
-- line 101 ----------------------------------------
-- line 104 ----------------------------------------
     .    * \param workspace a pointer to working space with at least
     .    *                  this->cols() * essential.size() entries
     .    *
     .    * \sa MatrixBase::makeHouseholder(), MatrixBase::makeHouseholderInPlace(), 
     .    *     MatrixBase::applyHouseholderOnTheRight()
     .    */
     .  template<typename Derived>
     .  template<typename EssentialPart>
31,464  void MatrixBase<Derived>::applyHouseholderOnTheLeft(
     .    const EssentialPart& essential,
     .    const Scalar& tau,
     .    Scalar* workspace)
     .  {
24,472    if(rows() == 1)
66,424  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
     .    {
   660      *this *= Scalar(1)-tau;
37,224  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
     .    }
     .    else
     .    {
48,020      Map<typename internal::plain_row_type<PlainObject>::type> tmp(workspace,cols());
624,260  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
65,170      Block<Derived, EssentialPart::SizeAtCompileTime, Derived::ColsAtCompileTime> bottom(derived(), 1, 0, rows()-1, cols());
987,840  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
78,890      tmp.noalias() = essential.adjoint() * bottom;
102,308,503  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8575x)
37,730      tmp += this->row(0);
9,911,453  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
58,310      this->row(0) -= tau * tmp;
14,153,376  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
82,320      bottom.noalias() -= tau * essential * tmp;
604,050,098  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8575x)
     .    }
20,976  }
     .  
     .  /** Apply the elementary reflector H given by
     .    * \f$ H = I - tau v v^*\f$
     .    * with
     .    * \f$ v^T = [1 essential^T] \f$
     .    * from the right to a vector or matrix.
     .    *
     .    * On input:
-- line 138 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h
--------------------------------------------------------------------------------
        Ir 

-- line 24 ----------------------------------------
         .  
         .  namespace Eigen {
         .  
         .  typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE DenseIndex;
         .  
         .  namespace internal {
         .  
         .  //classes inheriting no_assignment_operator don't generate a default operator=.
 1,675,722  class no_assignment_operator
         .  {
         .    private:
         .      no_assignment_operator& operator=(const no_assignment_operator&);
         .  };
         .  
         .  /** \internal return the index type with the largest number of bits */
         .  template<typename I1, typename I2>
         .  struct promote_index_type
-- line 40 ----------------------------------------
-- line 44 ----------------------------------------
         .  
         .  /** \internal If the template parameter Value is Dynamic, this class is just a wrapper around a T variable that
         .    * can be accessed using value() and setValue().
         .    * Otherwise, this class is an empty structure and value() just returns the template parameter Value.
         .    */
         .  template<typename T, int Value> class variable_if_dynamic
         .  {
         .    public:
 6,070,085      EIGEN_EMPTY_STRUCT_CTOR(variable_if_dynamic)
 6,866,752      explicit variable_if_dynamic(T v) { EIGEN_ONLY_USED_FOR_DEBUG(v); assert(v == T(Value)); }
 5,686,345      static T value() { return T(Value); }
         .      void setValue(T) {}
         .  };
         .  
         .  template<typename T> class variable_if_dynamic<T, Dynamic>
         .  {
         .      T m_value;
         .      variable_if_dynamic() { assert(false); }
         .    public:
 6,218,220      explicit variable_if_dynamic(T value) : m_value(value) {}
22,961,554      T value() const { return m_value; }
         .      void setValue(T value) { m_value = value; }
         .  };
         .  
         .  /** \internal like variable_if_dynamic but for DynamicIndex
         .    */
         .  template<typename T, int Value> class variable_if_dynamicindex
         .  {
         .    public:
     3,472      EIGEN_EMPTY_STRUCT_CTOR(variable_if_dynamicindex)
    15,548      explicit variable_if_dynamicindex(T v) { EIGEN_ONLY_USED_FOR_DEBUG(v); assert(v == T(Value)); }
   193,260      static T value() { return T(Value); }
         .      void setValue(T) {}
         .  };
         .  
         .  template<typename T> class variable_if_dynamicindex<T, DynamicIndex>
         .  {
         .      T m_value;
         .      variable_if_dynamicindex() { assert(false); }
         .    public:
-- line 83 ----------------------------------------
-- line 336 ----------------------------------------
         .          int(CostEvalAsInteger) < int(CostNoEvalAsInteger)
         .        ),
         .        PlainObject,
         .        typename ref_selector<T>::type
         .    >::type type;
         .  };
         .  
         .  template<typename T>
 1,066,137  T* const_cast_ptr(const T* ptr)
         .  {
   355,379    return const_cast<T*>(ptr);
   710,758  }
         .  
         .  template<typename Derived, typename XprKind = typename traits<Derived>::XprKind>
         .  struct dense_xpr_base
         .  {
         .    /* dense_xpr_base should only ever be used on dense expressions, thus falling either into the MatrixXpr or into the ArrayXpr cases */
         .  };
         .  
         .  template<typename Derived>
-- line 355 ----------------------------------------
-- line 363 ----------------------------------------
         .  {
         .    typedef ArrayBase<Derived> type;
         .  };
         .  
         .  /** \internal Helper base class to add a scalar multiple operator
         .    * overloads for complex types */
         .  template<typename Derived,typename Scalar,typename OtherScalar,
         .           bool EnableIt = !is_same<Scalar,OtherScalar>::value >
 8,936,180  struct special_scalar_op_base : public DenseCoeffsBase<Derived>
    31,464  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
         .  {
         .    // dummy operator* so that the
         .    // "using special_scalar_op_base::operator*" compiles
         .    void operator*() const;
         .  };
         .  
         .  template<typename Derived,typename Scalar,typename OtherScalar>
         .  struct special_scalar_op_base<Derived,Scalar,OtherScalar,true>  : public DenseCoeffsBase<Derived>
-- line 379 ----------------------------------------

 3,315,680  <counts for unidentified lines in /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/XprHelper.h>

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h
--------------------------------------------------------------------------------
        Ir 

-- line 106 ----------------------------------------
         .  // Workaround MSVC 9 internal compiler error.
         .  // TODO: It has been detected with win64 builds (amd64), so let's check whether it also happens in 32bits+SSE mode
         .  // TODO: let's check whether there does not exist a better fix, like adding a pset0() function. (it crashed on pset1(0)).
         .  template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps(from,from,from,from); }
         .  template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set_pd(from,from); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set_epi32(from,from,from,from); }
         .  #else
         .  template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set1_ps(from); }
25,211,367  template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set1_pd(from); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set1_epi32(from); }
         .  #endif
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a) { return _mm_add_ps(pset1<Packet4f>(a), _mm_set_ps(3,2,1,0)); }
         .  template<> EIGEN_STRONG_INLINE Packet2d plset<double>(const double& a) { return _mm_add_pd(pset1<Packet2d>(a),_mm_set_pd(1,0)); }
         .  template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a) { return _mm_add_epi32(pset1<Packet4i>(a),_mm_set_epi32(3,2,1,0)); }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_add_ps(a,b); }
24,480,365  template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_add_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_add_epi32(a,b); }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_sub_ps(a,b); }
16,233,776  template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_sub_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_sub_epi32(a,b); }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)
         .  {
         .    const Packet4f mask = _mm_castsi128_ps(_mm_setr_epi32(0x80000000,0x80000000,0x80000000,0x80000000));
         .    return _mm_xor_ps(a,mask);
         .  }
         .  template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a)
   208,176  {
    13,011    const Packet2d mask = _mm_castsi128_pd(_mm_setr_epi32(0x0,0x80000000,0x0,0x80000000));
    78,066    return _mm_xor_pd(a,mask);
    26,022  }
         .  template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a)
         .  {
         .    return psub(_mm_setr_epi32(0,0,0,0), a);
         .  }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }
         .  template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }
         .  template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_mul_ps(a,b); }
57,433,519  template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_mul_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b)
         .  {
         .  #ifdef EIGEN_VECTORIZE_SSE4_1
         .    return _mm_mullo_epi32(a,b);
         .  #else
         .    // this version is slightly faster than 4 scalar products
         .    return vec4i_swizzle1(
         .              vec4i_swizzle2(
-- line 158 ----------------------------------------
-- line 160 ----------------------------------------
         .                _mm_mul_epu32(vec4i_swizzle1(a,1,0,3,2),
         .                              vec4i_swizzle1(b,1,0,3,2)),
         .                0,2,0,2),
         .              0,2,1,3);
         .  #endif
         .  }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_div_ps(a,b); }
   332,059  template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_div_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& /*a*/, const Packet4i& /*b*/)
         .  { eigen_assert(false && "packet integer division are not supported by SSE");
         .    return pset1<Packet4i>(0);
         .  }
         .  
         .  // for some weird raisons, it has to be overloaded for packet of integers
         .  template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_min_ps(a,b); }
       390  template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_min_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b)
         .  {
         .  #ifdef EIGEN_VECTORIZE_SSE4_1
         .    return _mm_min_epi32(a,b);
         .  #else
         .    // after some bench, this version *is* faster than a scalar implementation
         .    Packet4i mask = _mm_cmplt_epi32(a,b);
         .    return _mm_or_si128(_mm_and_si128(mask,a),_mm_andnot_si128(mask,b));
         .  #endif
         .  }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_max_ps(a,b); }
       390  template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_max_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b)
         .  {
         .  #ifdef EIGEN_VECTORIZE_SSE4_1
         .    return _mm_max_epi32(a,b);
         .  #else
         .    // after some bench, this version *is* faster than a scalar implementation
         .    Packet4i mask = _mm_cmpgt_epi32(a,b);
         .    return _mm_or_si128(_mm_and_si128(mask,a),_mm_andnot_si128(mask,b));
-- line 199 ----------------------------------------
-- line 212 ----------------------------------------
         .  template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_xor_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_xor_si128(a,b); }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_andnot_ps(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_andnot_pd(a,b); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_andnot_si128(a,b); }
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_ps(from); }
26,137,104  template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_pd(from); }
         .  template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_si128(reinterpret_cast<const Packet4i*>(from)); }
         .  
         .  #if defined(_MSC_VER)
         .    template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*  from) {
         .      EIGEN_DEBUG_UNALIGNED_LOAD
         .      #if (_MSC_VER==1600)
         .      // NOTE Some version of MSVC10 generates bad code when using _mm_loadu_ps
         .      // (i.e., it does not generate an unaligned load!!
-- line 228 ----------------------------------------
-- line 263 ----------------------------------------
         .  #else
         .    __m128d res;
         .    res =  _mm_load_sd((const double*)(from)) ;
         .    res =  _mm_loadh_pd(res, (const double*)(from+2)) ;
         .    return _mm_castpd_ps(res);
         .  #endif
         .  }
         .  template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)
 9,794,020  {
         .    EIGEN_DEBUG_UNALIGNED_LOAD
         .  #if EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS
         .    return _mm_loadu_pd(from);
         .  #else
         .    __m128d res;
 1,958,804    res = _mm_load_sd(from) ;
11,752,824    res = _mm_loadh_pd(res,from+1);
 1,958,804    return res;
         .  #endif
 3,917,608  }
         .  template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)
         .  {
         .    EIGEN_DEBUG_UNALIGNED_LOAD
         .  #if EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS
         .    return _mm_loadu_si128(reinterpret_cast<const Packet4i*>(from));
         .  #else
         .    __m128d res;
         .    res =  _mm_load_sd((const double*)(from)) ;
-- line 289 ----------------------------------------
-- line 302 ----------------------------------------
         .  template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)
         .  {
         .    Packet4i tmp;
         .    tmp = _mm_loadl_epi64(reinterpret_cast<const Packet4i*>(from));
         .    return vec4i_swizzle1(tmp, 0, 0, 1, 1);
         .  }
         .  
         .  template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_ps(to, from); }
19,747,944  template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_pd(to, from); }
         .  template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_si128(reinterpret_cast<Packet4i*>(to), from); }
         .  
   690,070  template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet2d& from) {
         .    EIGEN_DEBUG_UNALIGNED_STORE
 1,242,126    _mm_storel_pd((to), from);
   828,084    _mm_storeh_pd((to+1), from);
   414,042  }
         .  template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castps_pd(from)); }
         .  template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castsi128_pd(from)); }
         .  
         .  // some compilers might be tempted to perform multiple moves instead of using a vector path.
         .  template<> EIGEN_STRONG_INLINE void pstore1<Packet4f>(float* to, const float& a)
         .  {
         .    Packet4f pa = _mm_set_ss(a);
         .    pstore(to, vec4f_swizzle1(pa,0,0,0,0));
         .  }
         .  // some compilers might be tempted to perform multiple moves instead of using a vector path.
         .  template<> EIGEN_STRONG_INLINE void pstore1<Packet2d>(double* to, const double& a)
   146,040  {
   175,248    Packet2d pa = _mm_set_sd(a);
   233,664    pstore(to, vec2d_swizzle1(pa,0,0));
   467,328  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (29208x)
    87,624  }
         .  
         .  template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }
   473,888  template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }
         .  template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }
         .  
         .  #if defined(_MSC_VER) && defined(_WIN64) && !defined(__INTEL_COMPILER)
         .  // The temporary variable fixes an internal compilation error in vs <= 2008 and a wrong-result bug in vs 2010
         .  // Direct of the struct members fixed bug #62.
         .  template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return a.m128_f32[0]; }
         .  template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return a.m128d_f64[0]; }
         .  template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }
         .  #elif defined(_MSC_VER) && !defined(__INTEL_COMPILER)
         .  // The temporary variable fixes an internal compilation error in vs <= 2008 and a wrong-result bug in vs 2010
         .  template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float x = _mm_cvtss_f32(a); return x; }
         .  template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double x = _mm_cvtsd_f64(a); return x; }
         .  template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }
         .  #else
         .  template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return _mm_cvtss_f32(a); }
 1,379,785  template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return _mm_cvtsd_f64(a); }
         .  template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { return _mm_cvtsi128_si32(a); }
         .  #endif
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)
         .  { return _mm_shuffle_ps(a,a,0x1B); }
         .  template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)
         .  { return _mm_shuffle_pd(a,a,0x1); }
         .  template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)
-- line 359 ----------------------------------------
-- line 361 ----------------------------------------
         .  
         .  
         .  template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a)
         .  {
         .    const Packet4f mask = _mm_castsi128_ps(_mm_setr_epi32(0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF));
         .    return _mm_and_ps(a,mask);
         .  }
         .  template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a)
   166,656  {
    10,416    const Packet2d mask = _mm_castsi128_pd(_mm_setr_epi32(0xFFFFFFFF,0x7FFFFFFF,0xFFFFFFFF,0x7FFFFFFF));
    62,496    return _mm_and_pd(a,mask);
    20,832  }
         .  template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a)
         .  {
         .    #ifdef EIGEN_VECTORIZE_SSSE3
         .    return _mm_abs_epi32(a);
         .    #else
         .    Packet4i aux = _mm_srai_epi32(a,31);
         .    return _mm_sub_epi32(_mm_xor_si128(a,aux),aux);
         .    #endif
-- line 380 ----------------------------------------
-- line 405 ----------------------------------------
         .  // }
         .  
         .  template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)
         .  {
         .    Packet4f tmp0 = _mm_hadd_ps(a,a);
         .    return pfirst(_mm_hadd_ps(tmp0, tmp0));
         .  }
         .  
 2,186,910  template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return pfirst(_mm_hadd_pd(a, a)); }
 1,822,425  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (121495x)
         .  
         .  // SSSE3 version:
         .  // EIGEN_STRONG_INLINE float predux(const Packet4i& a)
         .  // {
         .  //   Packet4i tmp0 = _mm_hadd_epi32(a,a);
         .  //   return pfirst(_mm_hadd_epi32(tmp0, tmp0));
         .  // }
         .  #else
-- line 421 ----------------------------------------
-- line 494 ----------------------------------------
         .  
         .  // min
         .  template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)
         .  {
         .    Packet4f tmp = _mm_min_ps(a, _mm_movehl_ps(a,a));
         .    return pfirst(_mm_min_ss(tmp, _mm_shuffle_ps(tmp,tmp, 1)));
         .  }
         .  template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)
        40  {
       150    return pfirst(_mm_min_sd(a, _mm_unpackhi_pd(a,a)));
       150  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10x)
        30  }
         .  template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)
         .  {
         .    // after some experiments, it is seems this is the fastest way to implement it
         .    // for GCC (eg., it does not like using std::min after the pstore !!)
         .    EIGEN_ALIGN16 int aux[4];
         .    pstore(aux, a);
         .    int aux0 = aux[0]<aux[1] ? aux[0] : aux[1];
         .    int aux2 = aux[2]<aux[3] ? aux[2] : aux[3];
-- line 512 ----------------------------------------
-- line 515 ----------------------------------------
         .  
         .  // max
         .  template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)
         .  {
         .    Packet4f tmp = _mm_max_ps(a, _mm_movehl_ps(a,a));
         .    return pfirst(_mm_max_ss(tmp, _mm_shuffle_ps(tmp,tmp, 1)));
         .  }
         .  template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)
        40  {
       150    return pfirst(_mm_max_sd(a, _mm_unpackhi_pd(a,a)));
       150  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10x)
        30  }
         .  template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)
         .  {
         .    // after some experiments, it is seems this is the fastest way to implement it
         .    // for GCC (eg., it does not like using std::min after the pstore !!)
         .    EIGEN_ALIGN16 int aux[4];
         .    pstore(aux, a);
         .    int aux0 = aux[0]>aux[1] ? aux[0] : aux[1];
         .    int aux2 = aux[2]>aux[3] ? aux[2] : aux[3];
-- line 533 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.tcc
--------------------------------------------------------------------------------
       Ir 

-- line 319 ----------------------------------------
        .  			    __s, __b, __t, __c, __l, __f>::default_seed;
        .  
        .    template<typename _UIntType,
        .  	   size_t __w, size_t __n, size_t __m, size_t __r,
        .  	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
        .  	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
        .  	   _UIntType __f>
        .      void
       10      mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
        .  			    __s, __b, __t, __c, __l, __f>::
        .      seed(result_type __sd)
        .      {
        4        _M_x[0] = __detail::__mod<_UIntType,
        8  	__detail::_Shift<_UIntType, __w>::__value>(__sd);
       38  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        .  
    4,990        for (size_t __i = 1; __i < state_size; ++__i)
        .  	{
    6,230  	  _UIntType __x = _M_x[__i - 1];
    3,738  	  __x ^= __x >> (__w - 2);
    3,738  	  __x *= __f;
    4,984  	  __x += __detail::__mod<_UIntType, __n>(__i);
   37,380  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1246x)
    3,738  	  _M_x[__i] = __detail::__mod<_UIntType,
    4,984  	    __detail::_Shift<_UIntType, __w>::__value>(__x);
   23,674  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1246x)
        .  	}
        4        _M_p = state_size;
        6      }
        .  
        .    template<typename _UIntType,
        .  	   size_t __w, size_t __n, size_t __m, size_t __r,
        .  	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
        .  	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
        .  	   _UIntType __f>
        .      template<typename _Sseq>
        .        typename std::enable_if<std::is_class<_Sseq>::value>::type
-- line 352 ----------------------------------------
-- line 389 ----------------------------------------
        .        }
        .  
        .    template<typename _UIntType, size_t __w,
        .  	   size_t __n, size_t __m, size_t __r,
        .  	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
        .  	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
        .  	   _UIntType __f>
        .      void
    1,929      mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
        .  			    __s, __b, __t, __c, __l, __f>::
        .      _M_gen_rand(void)
        .      {
      643        const _UIntType __upper_mask = (~_UIntType()) << __r;
      643        const _UIntType __lower_mask = ~__upper_mask;
        .  
  585,773        for (size_t __k = 0; __k < (__n - __m); ++__k)
        .          {
  437,883  	  _UIntType __y = ((_M_x[__k] & __upper_mask)
1,313,649  			   | (_M_x[__k + 1] & __lower_mask));
2,554,309  	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
        .  		       ^ ((__y & 0x01) ? __a : 0));
        .          }
        .  
1,020,441        for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
        .  	{
  763,884  	  _UIntType __y = ((_M_x[__k] & __upper_mask)
2,291,652  			   | (_M_x[__k + 1] & __lower_mask));
4,455,823  	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
        .  		       ^ ((__y & 0x01) ? __a : 0));
        .  	}
        .  
    1,286        _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
    4,501  		       | (_M_x[0] & __lower_mask));
    8,677        _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
        .  		       ^ ((__y & 0x01) ? __a : 0));
    1,286        _M_p = 0;
    1,929      }
        .  
        .    template<typename _UIntType, size_t __w,
        .  	   size_t __n, size_t __m, size_t __r,
        .  	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
        .  	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
        .  	   _UIntType __f>
        .      void
        .      mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
-- line 433 ----------------------------------------
-- line 445 ----------------------------------------
        .    template<typename _UIntType, size_t __w,
        .  	   size_t __n, size_t __m, size_t __r,
        .  	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
        .  	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
        .  	   _UIntType __f>
        .      typename
        .      mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
        .  			    __s, __b, __t, __c, __l, __f>::result_type
1,601,088      mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
        .  			    __s, __b, __t, __c, __l, __f>::
        .      operator()()
        .      {
        .        // Reload the vector - cost is O(n) amortized over n calls.
1,601,088        if (_M_p >= state_size)
    1,929  	_M_gen_rand();
13,444,951  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (643x)
        .  
        .        // Calculate o(x(i)).
3,202,176        result_type __z = _M_x[_M_p++];
1,200,816        __z ^= (__z >> __u) & __d;
1,601,088        __z ^= (__z << __s) & __b;
1,601,088        __z ^= (__z << __t) & __c;
1,200,816        __z ^= (__z >> __l);
        .  
  400,272        return __z;
  800,544      }
        .  
        .    template<typename _UIntType, size_t __w,
        .  	   size_t __n, size_t __m, size_t __r,
        .  	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
        .  	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
        .  	   _UIntType __f, typename _CharT, typename _Traits>
        .      std::basic_ostream<_CharT, _Traits>&
        .      operator<<(std::basic_ostream<_CharT, _Traits>& __os,
-- line 477 ----------------------------------------
-- line 1926 ----------------------------------------
        .     * Polar method due to Marsaglia.
        .     *
        .     * Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
        .     * New York, 1986, Ch. V, Sect. 4.4.
        .     */
        .    template<typename _RealType>
        .      template<typename _UniformRandomNumberGenerator>
        .        typename normal_distribution<_RealType>::result_type
      630        normal_distribution<_RealType>::
        .        operator()(_UniformRandomNumberGenerator& __urng,
        .  		 const param_type& __param)
        .        {
        .  	result_type __ret;
        .  	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
      525  	  __aurng(__urng);
    1,155  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (105x)
        .  
      420  	if (_M_saved_available)
        .  	  {
      104  	    _M_saved_available = false;
      208  	    __ret = _M_saved;
        .  	  }
        .  	else
        .  	  {
        .  	    result_type __x, __y, __r2;
      794  	    do
        .  	      {
      476  		__x = result_type(2.0) * __aurng() - 1.0;
   41,585  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (68x)
      476  		__y = result_type(2.0) * __aurng() - 1.0;
   20,672  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (68x)
      476  		__r2 = __x * __x + __y * __y;
        .  	      }
        .  	    while (__r2 > 1.0 || __r2 == 0.0);
        .  
      742  	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
    2,402  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (106x)
      212  	    _M_saved = __x * __mult;
      106  	    _M_saved_available = true;
      159  	    __ret = __y * __mult;
        .  	  }
        .  
    1,470  	__ret = __ret * __param.stddev() + __param.mean();
    2,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (210x)
      210  	return __ret;
      315        }
        .  
        .    template<typename _RealType>
        .      template<typename _ForwardIterator,
        .  	     typename _UniformRandomNumberGenerator>
        .        void
        .        normal_distribution<_RealType>::
        .        __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
        .  		      _UniformRandomNumberGenerator& __urng,
-- line 1974 ----------------------------------------
-- line 3456 ----------------------------------------
        .  	  __begin[(__k + __q) % __n] ^= __r4;
        .  	  __begin[__k % __n] = __r4;
        .  	}
        .      }
        .  
        .    template<typename _RealType, size_t __bits,
        .  	   typename _UniformRandomNumberGenerator>
        .      _RealType
1,000,680      generate_canonical(_UniformRandomNumberGenerator& __urng)
        .      {
        .        static_assert(std::is_floating_point<_RealType>::value,
        .  		    "template argument not a floating point type");
        .  
        .        const size_t __b
        .  	= std::min(static_cast<size_t>(std::numeric_limits<_RealType>::digits),
1,801,224                     __bits);
2,801,904  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200136x)
        .        const long double __r = static_cast<long double>(__urng.max())
2,801,904  			    - static_cast<long double>(__urng.min()) + 1.0L;
2,401,632  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (400272x)
4,202,856        const size_t __log2r = std::log(__r) / std::log(2.0L);
8,428,086  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (400272x)
3,002,040        size_t __k = std::max<size_t>(1UL, (__b + __log2r - 1UL) / __log2r);
3,002,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200136x)
  400,272        _RealType __sum = _RealType(0);
  400,272        _RealType __tmp = _RealType(1);
2,001,360        for (; __k != 0; --__k)
        .  	{
6,804,624  	  __sum += _RealType(__urng() - __urng.min()) * __tmp;
29,457,760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (800544x)
1,601,088  	  __tmp *= __r;
        .  	}
  600,408        return __sum / __tmp;
  800,544      }
        .  
        .  _GLIBCXX_END_NAMESPACE_VERSION
        .  } // namespace
        .  
        .  #endif

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/VectorBlock.h
--------------------------------------------------------------------------------
       Ir 

-- line 67 ----------------------------------------
        .      };
        .    public:
        .      EIGEN_DENSE_PUBLIC_INTERFACE(VectorBlock)
        .  
        .      using Base::operator=;
        .  
        .      /** Dynamic-size constructor
        .        */
1,130,430      inline VectorBlock(VectorType& vector, Index start, Index size)
        .        : Base(vector,
        .               IsColVector ? start : 0, IsColVector ? 0 : start,
1,474,421               IsColVector ? size  : 1, IsColVector ? 1 : size)
13,552,095  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (21011x)
        .      {
        .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(VectorBlock);
  484,470      }
        .  
        .      /** Fixed-size constructor
        .        */
        .      inline VectorBlock(VectorType& vector, Index start)
        .        : Base(vector, IsColVector ? start : 0, IsColVector ? 0 : start)
        .      {
        .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(VectorBlock);
        .      }
-- line 89 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h
--------------------------------------------------------------------------------
       Ir 

-- line 36 ----------------------------------------
        .  /** \internal the return type of imag() */
        .  typedef CwiseUnaryView<internal::scalar_imag_ref_op<Scalar>, Derived> NonConstImagReturnType;
        .  
        .  #endif // not EIGEN_PARSED_BY_DOXYGEN
        .  
        .  /** \returns an expression of the opposite of \c *this
        .    */
        .  inline const CwiseUnaryOp<internal::scalar_opposite_op<typename internal::traits<Derived>::Scalar>, const Derived>
   61,940  operator-() const { return derived(); }
   72,416  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1488x)
        .  
        .  
        .  /** \returns an expression of \c *this scaled by the scalar factor \a scalar */
        .  inline const ScalarMultipleReturnType
  929,934  operator*(const Scalar& scalar) const
        .  {
        .    return CwiseUnaryOp<internal::scalar_multiple_op<Scalar>, const Derived>
2,169,846      (derived(), internal::scalar_multiple_op<Scalar>(scalar));
9,899,340  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (89994x)
  464,967  }
        .  
        .  #ifdef EIGEN_PARSED_BY_DOXYGEN
        .  const ScalarMultipleReturnType operator*(const RealScalar& scalar) const;
        .  #endif
        .  
        .  /** \returns an expression of \c *this divided by the scalar value \a scalar */
        .  inline const CwiseUnaryOp<internal::scalar_quotient1_op<typename internal::traits<Derived>::Scalar>, const Derived>
   17,712  operator/(const Scalar& scalar) const
        .  {
        .    return CwiseUnaryOp<internal::scalar_quotient1_op<Scalar>, const Derived>
   41,328      (derived(), internal::scalar_quotient1_op<Scalar>(scalar));
3,809,030  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1680x)
    8,856  }
        .  
        .  /** Overloaded for efficient real matrix times complex scalar value */
        .  inline const CwiseUnaryOp<internal::scalar_multiple2_op<Scalar,std::complex<Scalar> >, const Derived>
        .  operator*(const std::complex<Scalar>& scalar) const
        .  {
        .    return CwiseUnaryOp<internal::scalar_multiple2_op<Scalar,std::complex<Scalar> >, const Derived>
        .      (*static_cast<const Derived*>(this), internal::scalar_multiple2_op<Scalar,std::complex<Scalar> >(scalar));
        .  }
        .  
        .  inline friend const ScalarMultipleReturnType
  904,734  operator*(const Scalar& scalar, const StorageBaseType& matrix)
1,357,101  { return matrix*scalar; }
1,032,430  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
        .  
        .  inline friend const CwiseUnaryOp<internal::scalar_multiple2_op<Scalar,std::complex<Scalar> >, const Derived>
        .  operator*(const std::complex<Scalar>& scalar, const StorageBaseType& matrix)
        .  { return matrix*scalar; }
        .  
        .  /** \returns an expression of *this with the \a Scalar type casted to
        .    * \a NewScalar.
        .    *
-- line 85 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/util/BlasUtil.h
--------------------------------------------------------------------------------
        Ir 

-- line 44 ----------------------------------------
         .    template<typename T>
         .    inline T operator()(const T& x) { return numext::conj(x); }
         .    template<typename T>
         .    inline T pconj(const T& x) { return internal::pconj(x); }
         .  };
         .  
         .  template<> struct conj_if<false> {
         .    template<typename T>
   559,160    inline const T& operator()(const T& x) { return x; }
         .    template<typename T>
   142,968    inline const T& pconj(const T& x) { return x; }
         .  };
         .  
         .  template<typename Scalar> struct conj_helper<Scalar,Scalar,false,false>
         .  {
18,415,435    EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const { return internal::pmadd(x,y,c); }
   114,240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2240x)
 3,832,591    EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const { return internal::pmul(x,y); }
 2,441,872  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (152617x)
         .  };
         .  
         .  template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, false,true>
         .  {
         .    typedef std::complex<RealScalar> Scalar;
         .    EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const
         .    { return c + pmul(x,y); }
         .  
-- line 68 ----------------------------------------
-- line 108 ----------------------------------------
         .    { return x*conj_if<Conj>()(y); }
         .  };
         .  
         .  template<typename From,typename To> struct get_factor {
         .    static EIGEN_STRONG_INLINE To run(const From& x) { return x; }
         .  };
         .  
         .  template<typename Scalar> struct get_factor<Scalar,typename NumTraits<Scalar>::Real> {
     6,160    static EIGEN_STRONG_INLINE typename NumTraits<Scalar>::Real run(const Scalar& x) { return numext::real(x); }
    12,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
         .  };
         .  
         .  // Lightweight helper class to access matrix coefficients.
         .  // Yes, this is somehow redundant with Map<>, but this version is much much lighter,
         .  // and so I hope better compilation performance (time and code quality).
         .  template<typename Scalar, typename Index, int StorageOrder>
         .  class blas_data_mapper
         .  {
         .    public:
       462      blas_data_mapper(Scalar* data, Index stride) : m_data(data), m_stride(stride) {}
   309,915      EIGEN_STRONG_INLINE Scalar& operator()(Index i, Index j)
   743,796      { return m_data[StorageOrder==RowMajor ? j + i*m_stride : i + j*m_stride]; }
         .    protected:
         .      Scalar* EIGEN_RESTRICT m_data;
         .      Index m_stride;
         .  };
         .  
         .  // lightweight helper class to access matrix coefficients (const version)
         .  template<typename Scalar, typename Index, int StorageOrder>
         .  class const_blas_data_mapper
         .  {
         .    public:
     6,300      const_blas_data_mapper(const Scalar* data, Index stride) : m_data(data), m_stride(stride) {}
   277,935      EIGEN_STRONG_INLINE const Scalar& operator()(Index i, Index j) const
   667,044      { return m_data[StorageOrder==RowMajor ? j + i*m_stride : i + j*m_stride]; }
         .    protected:
         .      const Scalar* EIGEN_RESTRICT m_data;
         .      Index m_stride;
         .  };
         .  
         .  
         .  /* Helper class to analyze the factors of a Product expression.
         .   * In particular it allows to pop out operator-, scalar multiples,
-- line 149 ----------------------------------------
-- line 161 ----------------------------------------
         .                                && (   bool(XprType::IsVectorAtCompileTime)
         .                                    || int(inner_stride_at_compile_time<XprType>::ret) == 1)
         .                               ) ?  1 : 0
         .    };
         .    typedef typename conditional<bool(HasUsableDirectAccess),
         .      ExtractType,
         .      typename _ExtractType::PlainObject
         .      >::type DirectLinearAccessType;
   324,072    static inline ExtractType extract(const XprType& x) { return x; }
    86,240    static inline const Scalar extractScalarFactor(const XprType&) { return Scalar(1); }
         .  };
         .  
         .  // pop conjugate
         .  template<typename Scalar, typename NestedXpr>
         .  struct blas_traits<CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> >
         .   : blas_traits<NestedXpr>
         .  {
         .    typedef blas_traits<NestedXpr> Base;
-- line 178 ----------------------------------------
-- line 225 ----------------------------------------
         .    typedef Transpose<const typename Base::_ExtractType> _ExtractType;
         .    typedef typename conditional<bool(Base::HasUsableDirectAccess),
         .      ExtractType,
         .      typename ExtractType::PlainObject
         .      >::type DirectLinearAccessType;
         .    enum {
         .      IsTransposed = Base::IsTransposed ? 0 : 1
         .    };
   267,697    static inline ExtractType extract(const XprType& x) { return Base::extract(x.nestedExpression()); }
 1,077,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
   151,970    static inline Scalar extractScalarFactor(const XprType& x) { return Base::extractScalarFactor(x.nestedExpression()); }
    54,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
         .  };
         .  
         .  template<typename T>
         .  struct blas_traits<const T>
         .       : blas_traits<T>
         .  {};
         .  
         .  template<typename T, bool HasUsableDirectAccess=blas_traits<T>::HasUsableDirectAccess>
         .  struct extract_data_selector {
   146,564    static const typename T::Scalar* run(const T& m)
         .    {
   188,932      return blas_traits<T>::extract(m).data();
   327,900  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (26232x)
    73,282    }
         .  };
         .  
         .  template<typename T>
         .  struct extract_data_selector<T,false> {
   107,022    static typename T::Scalar* run(const T&) { return 0; }
         .  };
         .  
   217,912  template<typename T> const typename T::Scalar* extract_data(const T& m)
         .  {
   163,434    return extract_data_selector<T>::run(m);
   124,859  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (17837x)
   108,956  }
         .  
         .  } // end namespace internal
         .  
         .  } // end namespace Eigen
         .  
         .  #endif // EIGEN_BLASUTIL_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h
--------------------------------------------------------------------------------
       Ir 

-- line 15 ----------------------------------------
        .  namespace internal {
        .  
        .  template<typename _LhsScalar, typename _RhsScalar, bool _ConjLhs=false, bool _ConjRhs=false>
        .  class gebp_traits;
        .  
        .  
        .  /** \internal \returns b if a<=0, and returns a otherwise. */
        .  inline std::ptrdiff_t manage_caching_sizes_helper(std::ptrdiff_t a, std::ptrdiff_t b)
        8  {
        6    return a<=0 ? b : a;
        4  }
        .  
        .  /** \internal */
        .  inline void manage_caching_sizes(Action action, std::ptrdiff_t* l1=0, std::ptrdiff_t* l2=0)
      396  {
        .    static std::ptrdiff_t m_l1CacheSize = 0;
        .    static std::ptrdiff_t m_l2CacheSize = 0;
      264    if(m_l2CacheSize==0)
        .    {
        8      m_l1CacheSize = manage_caching_sizes_helper(queryL1CacheSize(),8 * 1024);
      398  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        8      m_l2CacheSize = manage_caching_sizes_helper(queryTopLevelCacheSize(),1*1024*1024);
      419  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        .    }
        .    
      132    if(action==SetAction)
        .    {
        .      // set the cpu cache size and cache all block sizes from a global cache size in byte
        .      eigen_internal_assert(l1!=0 && l2!=0);
        .      m_l1CacheSize = *l1;
        .      m_l2CacheSize = *l2;
        .    }
      132    else if(action==GetAction)
        .    {
        .      eigen_internal_assert(l1!=0 && l2!=0);
      264      *l1 = m_l1CacheSize;
      264      *l2 = m_l2CacheSize;
        .    }
        .    else
        .    {
        .      eigen_internal_assert(false);
        .    }
      198  }
        .  
        .  /** \brief Computes the blocking parameters for a m x k times k x n matrix product
        .    *
        .    * \param[in,out] k Input: the third dimension of the product. Output: the blocking size along the same dimension.
        .    * \param[in,out] m Input: the number of rows of the left hand side. Output: the blocking size along the same dimension.
        .    * \param[in,out] n Input: the number of columns of the right hand side. Output: the blocking size along the same dimension.
        .    *
        .    * Given a m x k times k x n matrix product of scalar types \c LhsScalar and \c RhsScalar,
-- line 63 ----------------------------------------
-- line 65 ----------------------------------------
        .    * for matrix products and related algorithms. The blocking sizes depends on various
        .    * parameters:
        .    * - the L1 and L2 cache sizes,
        .    * - the register level blocking sizes defined by gebp_traits,
        .    * - the number of scalars that fit into a packet (when vectorization is enabled).
        .    *
        .    * \sa setCpuCacheSizes */
        .  template<typename LhsScalar, typename RhsScalar, int KcFactor, typename SizeType>
      198  void computeProductBlockingSizes(SizeType& k, SizeType& m, SizeType& n)
        .  {
       99    EIGEN_UNUSED_VARIABLE(n);
      231  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
        .    // Explanations:
        .    // Let's recall the product algorithms form kc x nc horizontal panels B' on the rhs and
        .    // mc x kc blocks A' on the lhs. A' has to fit into L2 cache. Moreover, B' is processed
        .    // per kc x nr vertical small panels where nr is the blocking size along the n dimension
        .    // at the register level. For vectorization purpose, these small vertical panels are unpacked,
        .    // e.g., each coefficient is replicated to fit a packet. This small vertical panel has to
        .    // stay in L1 cache.
        .    std::ptrdiff_t l1, l2;
-- line 83 ----------------------------------------
-- line 85 ----------------------------------------
        .    typedef gebp_traits<LhsScalar,RhsScalar> Traits;
        .    enum {
        .      kdiv = KcFactor * 2 * Traits::nr
        .           * Traits::RhsProgress * sizeof(RhsScalar),
        .      mr = gebp_traits<LhsScalar,RhsScalar>::mr,
        .      mr_mask = (0xffffffff/mr)*mr
        .    };
        .  
      165    manage_caching_sizes(GetAction, &l1, &l2);
    1,691  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      462    k = std::min<SizeType>(k, l1/kdiv);
      462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      495    SizeType _m = k>0 ? l2/(4 * sizeof(LhsScalar) * k) : 0;
      132    if(_m<m) m = _m & mr_mask;
       99  }
        .  
        .  template<typename LhsScalar, typename RhsScalar, typename SizeType>
        .  inline void computeProductBlockingSizes(SizeType& k, SizeType& m, SizeType& n)
        .  {
        .    computeProductBlockingSizes<LhsScalar,RhsScalar,1>(k, m, n);
        .  }
        .  
        .  #ifdef EIGEN_HAS_FUSE_CJMADD
-- line 105 ----------------------------------------
-- line 113 ----------------------------------------
        .      {
        .        c = cj.pmadd(a,b,c);
        .      }
        .    };
        .  
        .    template<typename CJ, typename T> struct gebp_madd_selector<CJ,T,T,T,T> {
        .      EIGEN_ALWAYS_INLINE static void run(const CJ& cj, T& a, T& b, T& c, T& t)
        .      {
  338,520        t = b; t = cj.pmul(a,t); c = padd(c,t);
  709,280  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (32240x)
        .      }
        .    };
        .  
        .    template<typename CJ, typename A, typename B, typename C, typename T>
  290,160    EIGEN_STRONG_INLINE void gebp_madd(const CJ& cj, A& a, B& b, C& c, T& t)
        .    {
        .      gebp_madd_selector<CJ,A,B,C,T>::run(cj,a,b,c,t);
   48,360    }
        .  
        .    #define MADD(CJ,A,B,C,T)  gebp_madd(CJ,A,B,C,T);
        .  //   #define MADD(CJ,A,B,C,T)  T = B; T = CJ.pmul(A,T); C = padd(C,T);
        .  #endif
        .  
        .  /* Vectorization logic
        .   *  real*real: unpack rhs to constant packets, ...
        .   * 
-- line 137 ----------------------------------------
-- line 177 ----------------------------------------
        .    typedef typename packet_traits<ResScalar>::type  _ResPacket;
        .  
        .    typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;
        .    typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;
        .    typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;
        .  
        .    typedef ResPacket AccPacket;
        .    
  477,640    EIGEN_STRONG_INLINE void initAcc(AccPacket& p)
        .    {
  668,696      p = pset1<ResPacket>(ResScalar(0));
1,050,808  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (95528x)
  286,584    }
        .  
   15,981    EIGEN_STRONG_INLINE void unpackRhs(DenseIndex n, const RhsScalar* rhs, RhsScalar* b)
        .    {
  155,172      for(DenseIndex k=0; k<n; k++)
  350,496        pstore1<RhsPacket>(&b[k*RhsPacketSize], rhs[k]);
1,255,944  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (29208x)
    6,849    }
        .  
1,186,560    EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacket& dest) const
        .    {
  988,800      dest = pload<RhsPacket>(b);
2,175,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (197760x)
  593,280    }
        .  
  711,696    EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacket& dest) const
        .    {
  593,080      dest = pload<LhsPacket>(a);
1,304,776  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (118616x)
  355,848    }
        .  
3,056,896    EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, AccPacket& tmp) const
        .    {
6,878,016      tmp = b; tmp = pmul(a,tmp); c = padd(c,tmp);
12,227,584  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (764224x)
1,146,336    }
        .  
  668,696    EIGEN_STRONG_INLINE void acc(const AccPacket& c, const ResPacket& alpha, ResPacket& r) const
        .    {
  764,224      r = pmadd(c,alpha,r);
4,967,456  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (95528x)
  286,584    }
        .  
        .  protected:
        .  //   conj_helper<LhsScalar,RhsScalar,ConjLhs,ConjRhs> cj;
        .  //   conj_helper<LhsPacket,RhsPacket,ConjLhs,ConjRhs> pcj;
        .  };
        .  
        .  template<typename RealScalar, bool _ConjLhs>
        .  class gebp_traits<std::complex<RealScalar>, RealScalar, _ConjLhs, false>
-- line 222 ----------------------------------------
-- line 529 ----------------------------------------
        .  
        .    EIGEN_DONT_INLINE
        .    void operator()(ResScalar* res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index rows, Index depth, Index cols, ResScalar alpha,
        .                    Index strideA=-1, Index strideB=-1, Index offsetA=0, Index offsetB=0, RhsScalar* unpackedB=0);
        .  };
        .  
        .  template<typename LhsScalar, typename RhsScalar, typename Index, int mr, int nr, bool ConjugateLhs, bool ConjugateRhs>
        .  EIGEN_DONT_INLINE
    4,170  void gebp_kernel<LhsScalar,RhsScalar,Index,mr,nr,ConjugateLhs,ConjugateRhs>
        .    ::operator()(ResScalar* res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index rows, Index depth, Index cols, ResScalar alpha,
        .                 Index strideA, Index strideB, Index offsetA, Index offsetB, RhsScalar* unpackedB)
        .    {
        .      Traits traits;
        .      
      834      if(strideA==-1) strideA = depth;
      834      if(strideB==-1) strideB = depth;
        .      conj_helper<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> cj;
        .  //     conj_helper<LhsPacket,RhsPacket,ConjugateLhs,ConjugateRhs> pcj;
    2,919      Index packet_cols = (cols/nr) * nr;
    2,919      const Index peeled_mc = (rows/mr)*mr;
        .      // FIXME:
    3,526      const Index peeled_mc2 = peeled_mc + (rows-peeled_mc >= LhsProgress ? LhsProgress : 0);
    2,919      const Index peeled_kc = (depth/4)*4;
        .  
      834      if(unpackedB==0)
        .        unpackedB = const_cast<RhsScalar*>(blockB - strideB * nr * RhsProgress);
        .  
        .      // loops on each micro vertical panel of rhs (depth x nr)
   10,033      for(Index j2=0; j2<packet_cols; j2+=nr)
        .      {
   26,768        traits.unpackRhs(depth*nr,&blockB[j2*strideB+offsetB*nr],unpackedB); 
1,631,175  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1673x)
        .  
        .        // loops on each largest micro horizontal panel of lhs (mr x depth)
        .        // => we select a mr x nr micro block of res which is entirely
        .        //    stored into mr/packet_size x nr registers.
   59,792        for(Index i=0; i<peeled_mc; i+=mr)
        .        {
   95,580          const LhsScalar* blA = &blockA[i*strideA+offsetA*mr];
   31,860          prefetch(&blA[0]);
   95,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .  
        .          // gets res block as register
        .          AccPacket C0, C1, C2, C3, C4, C5, C6, C7;
   53,100                    traits.initAcc(C0);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100                    traits.initAcc(C1);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100          if(nr==4) traits.initAcc(C2);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100          if(nr==4) traits.initAcc(C3);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100                    traits.initAcc(C4);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100                    traits.initAcc(C5);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100          if(nr==4) traits.initAcc(C6);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100          if(nr==4) traits.initAcc(C7);
  286,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .  
   95,580          ResScalar* r0 = &res[(j2+0)*resStride + i];
   53,100          ResScalar* r1 = r0 + resStride;
   53,100          ResScalar* r2 = r1 + resStride;
   53,100          ResScalar* r3 = r2 + resStride;
        .  
   42,480          prefetch(r0+16);
   95,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   42,480          prefetch(r1+16);
   95,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   42,480          prefetch(r2+16);
   95,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   42,480          prefetch(r3+16);
   95,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .  
        .          // performs "inner" product
        .          // TODO let's check wether the folowing peeled loop could not be
        .          //      optimized via optimal prefetching from one loop to the other
   21,240          const RhsScalar* blB = unpackedB;
   95,580          for(Index k=0; k<peeled_kc; k+=4)
        .          {
        .            if(nr==2)
        .            {
        .              LhsPacket A0, A1;
        .              RhsPacket B_0;
        .              RhsPacket T0;
        .              
        .  EIGEN_ASM_COMMENT("mybegin2");
-- line 602 ----------------------------------------
-- line 639 ----------------------------------------
        .            }
        .            else
        .            {
        .  EIGEN_ASM_COMMENT("mybegin4");
        .              LhsPacket A0, A1;
        .              RhsPacket B_0, B1, B2, B3;
        .              RhsPacket T0;
        .              
   63,720              traits.loadLhs(&blA[0*LhsProgress], A0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadLhs(&blA[1*LhsProgress], A1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720              traits.loadRhs(&blB[0*RhsProgress], B_0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[1*RhsProgress], B1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .  
   84,960              traits.madd(A0,B_0,C0,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[2*RhsProgress], B2);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B_0,C4,B_0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[3*RhsProgress], B3);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[4*RhsProgress], B_0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B1,C1,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B1,C5,B1);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[5*RhsProgress], B1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B2,C2,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B2,C6,B2);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[6*RhsProgress], B2);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B3,C3,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadLhs(&blA[2*LhsProgress], A0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B3,C7,B3);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadLhs(&blA[3*LhsProgress], A1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[7*RhsProgress], B3);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B_0,C0,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B_0,C4,B_0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[8*RhsProgress], B_0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B1,C1,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B1,C5,B1);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[9*RhsProgress], B1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B2,C2,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B2,C6,B2);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[10*RhsProgress], B2);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B3,C3,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadLhs(&blA[4*LhsProgress], A0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B3,C7,B3);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadLhs(&blA[5*LhsProgress], A1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[11*RhsProgress], B3);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .  
   84,960              traits.madd(A0,B_0,C0,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B_0,C4,B_0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[12*RhsProgress], B_0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B1,C1,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B1,C5,B1);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[13*RhsProgress], B1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B2,C2,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B2,C6,B2);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[14*RhsProgress], B2);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B3,C3,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadLhs(&blA[6*LhsProgress], A0);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B3,C7,B3);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadLhs(&blA[7*LhsProgress], A1);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   74,340              traits.loadRhs(&blB[15*RhsProgress], B3);
  276,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B_0,C0,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B_0,C4,B_0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B1,C1,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B1,C5,B1);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B2,C2,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B2,C6,B2);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A0,B3,C3,T0);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   84,960              traits.madd(A1,B3,C7,B3);
  658,440  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .            }
        .  
   10,620            blB += 4*nr*RhsProgress;
   10,620            blA += 4*mr;
        .          }
        .          // process remaining peeled loop
   53,100          for(Index k=peeled_kc; k<depth; k++)
        .          {
        .            if(nr==2)
        .            {
        .              LhsPacket A0, A1;
        .              RhsPacket B_0;
        .              RhsPacket T0;
        .  
        .              traits.loadLhs(&blA[0*LhsProgress], A0);
-- line 719 ----------------------------------------
-- line 750 ----------------------------------------
        .  
        .            blB += nr*RhsProgress;
        .            blA += mr;
        .          }
        .  
        .          if(nr==4)
        .          {
        .            ResPacket R0, R1, R2, R3, R4, R5, R6;
   42,480            ResPacket alphav = pset1<ResPacket>(alpha);
  116,820  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .  
   42,480            R0 = ploadu<ResPacket>(r0);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   42,480            R1 = ploadu<ResPacket>(r1);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   42,480            R2 = ploadu<ResPacket>(r2);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   42,480            R3 = ploadu<ResPacket>(r3);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100            R4 = ploadu<ResPacket>(r0 + ResPacketSize);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100            R5 = ploadu<ResPacket>(r1 + ResPacketSize);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100            R6 = ploadu<ResPacket>(r2 + ResPacketSize);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            traits.acc(C0, alphav, R0);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100            pstoreu(r0, R0);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100            R0 = ploadu<ResPacket>(r3 + ResPacketSize);
  254,880  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .  
   63,720            traits.acc(C1, alphav, R1);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            traits.acc(C2, alphav, R2);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            traits.acc(C3, alphav, R3);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            traits.acc(C4, alphav, R4);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            traits.acc(C5, alphav, R5);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            traits.acc(C6, alphav, R6);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            traits.acc(C7, alphav, R0);
  754,020  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .            
   53,100            pstoreu(r1, R1);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100            pstoreu(r2, R2);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   53,100            pstoreu(r3, R3);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            pstoreu(r0 + ResPacketSize, R4);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            pstoreu(r1 + ResPacketSize, R5);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            pstoreu(r2 + ResPacketSize, R6);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
   63,720            pstoreu(r3 + ResPacketSize, R0);
  361,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10620x)
        .          }
        .          else
        .          {
        .            ResPacket R0, R1, R4;
        .            ResPacket alphav = pset1<ResPacket>(alpha);
        .  
        .            R0 = ploadu<ResPacket>(r0);
        .            R1 = ploadu<ResPacket>(r1);
-- line 793 ----------------------------------------
-- line 800 ----------------------------------------
        .            traits.acc(C5, alphav, R0);
        .            pstoreu(r1, R1);
        .            pstoreu(r0 + ResPacketSize, R4);
        .            pstoreu(r1 + ResPacketSize, R0);
        .          }
        .          
        .        }
        .        
    6,692        if(rows-peeled_mc>=LhsProgress)
        .        {
    1,436          Index i = peeled_mc;
    6,462          const LhsScalar* blA = &blockA[i*strideA+offsetA*LhsProgress];
    2,154          prefetch(&blA[0]);
    6,462  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
        .          // gets res block as register
        .          AccPacket C0, C1, C2, C3;
    3,590                    traits.initAcc(C0);
   19,386  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    3,590                    traits.initAcc(C1);
   19,386  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    3,590          if(nr==4) traits.initAcc(C2);
   19,386  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    3,590          if(nr==4) traits.initAcc(C3);
   19,386  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
        .          // performs "inner" product
    1,436          const RhsScalar* blB = unpackedB;
    6,462          for(Index k=0; k<peeled_kc; k+=4)
        .          {
        .            if(nr==2)
        .            {
        .              LhsPacket A0;
        .              RhsPacket B_0, B1;
        .  
        .              traits.loadLhs(&blA[0*LhsProgress], A0);
        .              traits.loadRhs(&blB[0*RhsProgress], B_0);
-- line 831 ----------------------------------------
-- line 848 ----------------------------------------
        .              traits.madd(A0,B_0,C0,B_0);
        .              traits.madd(A0,B1,C1,B1);
        .            }
        .            else
        .            {
        .              LhsPacket A0;
        .              RhsPacket B_0, B1, B2, B3;
        .  
    4,308              traits.loadLhs(&blA[0*LhsProgress], A0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    4,308              traits.loadRhs(&blB[0*RhsProgress], B_0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[1*RhsProgress], B1);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
    5,744              traits.madd(A0,B_0,C0,B_0);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[2*RhsProgress], B2);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[3*RhsProgress], B3);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[4*RhsProgress], B_0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B1,C1,B1);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[5*RhsProgress], B1);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B2,C2,B2);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[6*RhsProgress], B2);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B3,C3,B3);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadLhs(&blA[1*LhsProgress], A0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[7*RhsProgress], B3);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B_0,C0,B_0);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[8*RhsProgress], B_0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B1,C1,B1);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[9*RhsProgress], B1);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B2,C2,B2);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[10*RhsProgress], B2);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B3,C3,B3);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadLhs(&blA[2*LhsProgress], A0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[11*RhsProgress], B3);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
    5,744              traits.madd(A0,B_0,C0,B_0);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[12*RhsProgress], B_0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B1,C1,B1);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[13*RhsProgress], B1);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B2,C2,B2);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[14*RhsProgress], B2);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B3,C3,B3);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
    5,026              traits.loadLhs(&blA[3*LhsProgress], A0);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,026              traits.loadRhs(&blB[15*RhsProgress], B3);
   18,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B_0,C0,B_0);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B1,C1,B1);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B2,C2,B2);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    5,744              traits.madd(A0,B3,C3,B3);
   44,516  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .            }
        .  
      718            blB += nr*4*RhsProgress;
      718            blA += 4*LhsProgress;
        .          }
        .          // process remaining peeled loop
    3,590          for(Index k=peeled_kc; k<depth; k++)
        .          {
        .            if(nr==2)
        .            {
        .              LhsPacket A0;
        .              RhsPacket B_0, B1;
        .  
        .              traits.loadLhs(&blA[0*LhsProgress], A0);
        .              traits.loadRhs(&blB[0*RhsProgress], B_0);
-- line 909 ----------------------------------------
-- line 928 ----------------------------------------
        .              traits.madd(A0,B3,C3,B3);
        .            }
        .  
        .            blB += nr*RhsProgress;
        .            blA += LhsProgress;
        .          }
        .  
        .          ResPacket R0, R1, R2, R3;
    2,872          ResPacket alphav = pset1<ResPacket>(alpha);
    7,898  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
    6,462          ResScalar* r0 = &res[(j2+0)*resStride + i];
    3,590          ResScalar* r1 = r0 + resStride;
    3,590          ResScalar* r2 = r1 + resStride;
    3,590          ResScalar* r3 = r2 + resStride;
        .  
    2,872                    R0 = ploadu<ResPacket>(r0);
   17,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    2,872                    R1 = ploadu<ResPacket>(r1);
   17,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    2,872          if(nr==4) R2 = ploadu<ResPacket>(r2);
   17,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    2,872          if(nr==4) R3 = ploadu<ResPacket>(r3);
   17,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
    4,308                    traits.acc(C0, alphav, R0);
   50,978  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    4,308                    traits.acc(C1, alphav, R1);
   50,978  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    4,308          if(nr==4) traits.acc(C2, alphav, R2);
   50,978  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    4,308          if(nr==4) traits.acc(C3, alphav, R3);
   50,978  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .  
    3,590                    pstoreu(r0, R0);
   24,412  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    3,590                    pstoreu(r1, R1);
   24,412  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    3,590          if(nr==4) pstoreu(r2, R2);
   24,412  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
    3,590          if(nr==4) pstoreu(r3, R3);
   24,412  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (718x)
        .        }
   12,865        for(Index i=peeled_mc2; i<rows; i++)
        .        {
    8,100          const LhsScalar* blA = &blockA[i*strideA+offsetA];
    2,700          prefetch(&blA[0]);
    8,100  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (900x)
        .  
        .          // gets a 1 x nr res block as registers
    7,200          ResScalar C0(0), C1(0), C2(0), C3(0);
        .          // TODO directly use blockB ???
    8,100          const RhsScalar* blB = &blockB[j2*strideB+offsetB*nr];
   21,600          for(Index k=0; k<depth; k++)
        .          {
        .            if(nr==2)
        .            {
        .              LhsScalar A0;
        .              RhsScalar B_0, B1;
        .  
        .              A0 = blA[k];
        .              B_0 = blB[0];
-- line 975 ----------------------------------------
-- line 977 ----------------------------------------
        .              MADD(cj,A0,B_0,C0,B_0);
        .              MADD(cj,A0,B1,C1,B1);
        .            }
        .            else
        .            {
        .              LhsScalar A0;
        .              RhsScalar B_0, B1, B2, B3;
        .  
   21,600              A0 = blA[k];
   10,800              B_0 = blB[0];
   14,400              B1 = blB[1];
   14,400              B2 = blB[2];
   14,400              B3 = blB[3];
        .  
   28,800              MADD(cj,A0,B_0,C0,B_0);
  313,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3600x)
   28,800              MADD(cj,A0,B1,C1,B1);
  313,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3600x)
   28,800              MADD(cj,A0,B2,C2,B2);
  313,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3600x)
   28,800              MADD(cj,A0,B3,C3,B3);
  313,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3600x)
        .            }
        .  
    3,600            blB += nr;
        .          }
   19,800                    res[(j2+0)*resStride + i] += alpha*C0;
   21,600                    res[(j2+1)*resStride + i] += alpha*C1;
   21,600          if(nr==4) res[(j2+2)*resStride + i] += alpha*C2;
   21,600          if(nr==4) res[(j2+3)*resStride + i] += alpha*C3;
        .        }
        .      }
        .      // process remaining rhs/res columns one at a time
        .      // => do the same but with nr==1
    5,135      for(Index j2=packet_cols; j2<cols; j2++)
        .      {
        .        // unpack B
    9,150        traits.unpackRhs(depth, &blockB[j2*strideB+offsetB], unpackedB);
  155,550  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (610x)
        .  
   20,480        for(Index i=0; i<peeled_mc; i+=mr)
        .        {
   32,472          const LhsScalar* blA = &blockA[i*strideA+offsetA*mr];
   10,824          prefetch(&blA[0]);
   32,472  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
        .  
        .          // TODO move the res loads to the stores
        .  
        .          // get res block as registers
        .          AccPacket C0, C4;
   18,040          traits.initAcc(C0);
   97,416  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
   18,040          traits.initAcc(C4);
   97,416  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
        .  
    7,216          const RhsScalar* blB = unpackedB;
   86,592          for(Index k=0; k<depth; k++)
        .          {
        .            LhsPacket A0, A1;
        .            RhsPacket B_0;
        .            RhsPacket T0;
        .  
   86,592            traits.loadLhs(&blA[0*LhsProgress], A0);
  375,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14432x)
  101,024            traits.loadLhs(&blA[1*LhsProgress], A1);
  375,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14432x)
   86,592            traits.loadRhs(&blB[0*RhsProgress], B_0);
  375,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14432x)
  115,456            traits.madd(A0,B_0,C0,T0);
  894,784  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14432x)
  115,456            traits.madd(A1,B_0,C4,B_0);
  894,784  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14432x)
        .  
   14,432            blB += RhsProgress;
   14,432            blA += 2*LhsProgress;
        .          }
        .          ResPacket R0, R4;
   14,432          ResPacket alphav = pset1<ResPacket>(alpha);
   39,688  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
        .  
   32,472          ResScalar* r0 = &res[(j2+0)*resStride + i];
        .  
   14,432          R0 = ploadu<ResPacket>(r0);
   86,592  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
   18,040          R4 = ploadu<ResPacket>(r0+ResPacketSize);
   86,592  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
        .  
   21,648          traits.acc(C0, alphav, R0);
  256,168  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
   21,648          traits.acc(C4, alphav, R4);
  256,168  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
        .  
   18,040          pstoreu(r0,               R0);
  122,672  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
   21,648          pstoreu(r0+ResPacketSize, R4);
  122,672  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3608x)
        .        }
    2,440        if(rows-peeled_mc>=LhsProgress)
        .        {
      960          Index i = peeled_mc;
    4,320          const LhsScalar* blA = &blockA[i*strideA+offsetA*LhsProgress];
    1,440          prefetch(&blA[0]);
    4,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
        .  
        .          AccPacket C0;
    2,400          traits.initAcc(C0);
   12,960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
        .  
      960          const RhsScalar* blB = unpackedB;
   11,520          for(Index k=0; k<depth; k++)
        .          {
        .            LhsPacket A0;
        .            RhsPacket B_0;
   11,520            traits.loadLhs(blA, A0);
   49,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1920x)
   11,520            traits.loadRhs(blB, B_0);
   49,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1920x)
   15,360            traits.madd(A0, B_0, C0, B_0);
  119,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1920x)
    1,920            blB += RhsProgress;
    1,920            blA += LhsProgress;
        .          }
        .  
    1,920          ResPacket alphav = pset1<ResPacket>(alpha);
    5,280  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
    5,280          ResPacket R0 = ploadu<ResPacket>(&res[(j2+0)*resStride + i]);
   11,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
    2,880          traits.acc(C0, alphav, R0);
   34,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
    5,760          pstoreu(&res[(j2+0)*resStride + i], R0);
   16,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
        .        }
    5,200        for(Index i=peeled_mc2; i<rows; i++)
        .        {
    3,870          const LhsScalar* blA = &blockA[i*strideA+offsetA];
    1,290          prefetch(&blA[0]);
    3,870  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (430x)
        .  
        .          // gets a 1 x 1 res block as registers
      860          ResScalar C0(0);
        .          // FIXME directly use blockB ??
    3,870          const RhsScalar* blB = &blockB[j2*strideB+offsetB];
   10,320          for(Index k=0; k<depth; k++)
        .          {
   10,320            LhsScalar A0 = blA[k];
   10,320            RhsScalar B_0 = blB[k];
   13,760            MADD(cj, A0, B_0, C0, B_0);
  149,640  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1720x)
        .          }
    9,460          res[(j2+0)*resStride + i] += alpha*C0;
        .        }
        .      }
    1,251    }
        .  
        .  
        .  #undef CJMADD
        .  
        .  // pack a block of the lhs
        .  // The traversal is as follow (mr==4):
        .  //   0  4  8 12 ...
        .  //   1  5  9 13 ...
-- line 1106 ----------------------------------------
-- line 1116 ----------------------------------------
        .  //  36 36 38 39 ...
        .  template<typename Scalar, typename Index, int Pack1, int Pack2, int StorageOrder, bool Conjugate, bool PanelMode>
        .  struct gemm_pack_lhs
        .  {
        .    EIGEN_DONT_INLINE void operator()(Scalar* blockA, const Scalar* EIGEN_RESTRICT _lhs, Index lhsStride, Index depth, Index rows, Index stride=0, Index offset=0);
        .  };
        .  
        .  template<typename Scalar, typename Index, int Pack1, int Pack2, int StorageOrder, bool Conjugate, bool PanelMode>
    4,170  EIGEN_DONT_INLINE void gemm_pack_lhs<Scalar, Index, Pack1, Pack2, StorageOrder, Conjugate, PanelMode>
        .    ::operator()(Scalar* blockA, const Scalar* EIGEN_RESTRICT _lhs, Index lhsStride, Index depth, Index rows, Index stride, Index offset)
        .  {
        .    typedef typename packet_traits<Scalar>::type Packet;
        .    enum { PacketSize = packet_traits<Scalar>::size };
        .  
        .    EIGEN_ASM_COMMENT("EIGEN PRODUCT PACK LHS");
      834    EIGEN_UNUSED_VARIABLE(stride)
    2,919  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (417x)
    1,251    EIGEN_UNUSED_VARIABLE(offset)
    2,919  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (417x)
    5,004    eigen_assert(((!PanelMode) && stride==0 && offset==0) || (PanelMode && stride>=depth && offset<=stride));
        .    eigen_assert( (StorageOrder==RowMajor) || ((Pack1%PacketSize)==0 && Pack1<=4*PacketSize) );
        .    conj_if<NumTraits<Scalar>::IsComplex && Conjugate> cj;
    2,502    const_blas_data_mapper<Scalar, Index, StorageOrder> lhs(_lhs,lhsStride);
    6,255  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (417x)
      417    Index count = 0;
    2,919    Index peeled_mc = (rows/Pack1)*Pack1;
   14,433    for(Index i=0; i<peeled_mc; i+=Pack1)
        .    {
        .      if(PanelMode) count += Pack1 * offset;
        .  
        .      if(StorageOrder==ColMajor)
        .      {
   61,272        for(Index k=0; k<depth; k++)
        .        {
        .          Packet A, B, C, D;
   91,908          if(Pack1>=1*PacketSize) A = ploadu<Packet>(&lhs(i+0*PacketSize, k));
  428,904  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20424x)
  102,120          if(Pack1>=2*PacketSize) B = ploadu<Packet>(&lhs(i+1*PacketSize, k));
  428,904  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20424x)
        .          if(Pack1>=3*PacketSize) C = ploadu<Packet>(&lhs(i+2*PacketSize, k));
        .          if(Pack1>=4*PacketSize) D = ploadu<Packet>(&lhs(i+3*PacketSize, k));
  142,968          if(Pack1>=1*PacketSize) { pstore(blockA+count, cj.pconj(A)); count+=PacketSize; }
  245,088  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20424x)
  142,968          if(Pack1>=2*PacketSize) { pstore(blockA+count, cj.pconj(B)); count+=PacketSize; }
  245,088  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20424x)
        .          if(Pack1>=3*PacketSize) { pstore(blockA+count, cj.pconj(C)); count+=PacketSize; }
        .          if(Pack1>=4*PacketSize) { pstore(blockA+count, cj.pconj(D)); count+=PacketSize; }
        .        }
        .      }
        .      else
        .      {
        .        for(Index k=0; k<depth; k++)
        .        {
-- line 1161 ----------------------------------------
-- line 1174 ----------------------------------------
        .          }
        .          if(Pack1%4)
        .            for(;w<Pack1;++w)
        .              blockA[count++] = cj(lhs(i+w, k));
        .        }
        .      }
        .      if(PanelMode) count += Pack1 * (stride-offset-depth);
        .    }
    1,668    if(rows-peeled_mc>=Pack2)
        .    {
        .      if(PanelMode) count += Pack2*offset;
    4,560      for(Index k=0; k<depth; k++)
    8,360        for(Index w=0; w<Pack2; w++)
   31,920          blockA[count++] = cj(lhs(peeled_mc+w, k));
   39,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3040x)
        .      if(PanelMode) count += Pack2 * (stride-offset-depth);
      190      peeled_mc += Pack2;
        .    }
    3,235    for(Index i=peeled_mc; i<rows; i++)
        .    {
        .      if(PanelMode) count += offset;
    5,520      for(Index k=0; k<depth; k++)
   17,480        blockA[count++] = cj(lhs(i, k));
   23,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1840x)
        .      if(PanelMode) count += (stride-offset-depth);
        .    }
    2,085  }
        .  
        .  // copy a complete panel of the rhs
        .  // this version is optimized for column major matrices
        .  // The traversal order is as follow: (nr==4):
        .  //  0  1  2  3   12 13 14 15   24 27
        .  //  4  5  6  7   16 17 18 19   25 28
        .  //  8  9 10 11   20 21 22 23   26 29
        .  //  .  .  .  .    .  .  .  .    .  .
-- line 1206 ----------------------------------------
-- line 1208 ----------------------------------------
        .  struct gemm_pack_rhs<Scalar, Index, nr, ColMajor, Conjugate, PanelMode>
        .  {
        .    typedef typename packet_traits<Scalar>::type Packet;
        .    enum { PacketSize = packet_traits<Scalar>::size };
        .    EIGEN_DONT_INLINE void operator()(Scalar* blockB, const Scalar* rhs, Index rhsStride, Index depth, Index cols, Index stride=0, Index offset=0);
        .  };
        .  
        .  template<typename Scalar, typename Index, int nr, bool Conjugate, bool PanelMode>
    4,500  EIGEN_DONT_INLINE void gemm_pack_rhs<Scalar, Index, nr, ColMajor, Conjugate, PanelMode>
        .    ::operator()(Scalar* blockB, const Scalar* rhs, Index rhsStride, Index depth, Index cols, Index stride, Index offset)
        .  {
        .    EIGEN_ASM_COMMENT("EIGEN PRODUCT PACK RHS COLMAJOR");
      900    EIGEN_UNUSED_VARIABLE(stride)
    3,150  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (450x)
    1,350    EIGEN_UNUSED_VARIABLE(offset)
    3,150  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (450x)
    5,850    eigen_assert(((!PanelMode) && stride==0 && offset==0) || (PanelMode && stride>=depth && offset<=stride));
        .    conj_if<NumTraits<Scalar>::IsComplex && Conjugate> cj;
    3,150    Index packet_cols = (cols/nr) * nr;
      450    Index count = 0;
   10,805    for(Index j2=0; j2<packet_cols; j2+=nr)
        .    {
        .      // skip what we have before
    5,403      if(PanelMode) count += nr * offset;
   10,806      const Scalar* b0 = &rhs[(j2+0)*rhsStride];
   12,607      const Scalar* b1 = &rhs[(j2+1)*rhsStride];
   12,607      const Scalar* b2 = &rhs[(j2+2)*rhsStride];
   12,607      const Scalar* b3 = &rhs[(j2+3)*rhsStride];
   42,214      for(Index k=0; k<depth; k++)
        .      {
   98,028                  blockB[count+0] = cj(b0[k]);
   56,016  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7002x)
  105,030                  blockB[count+1] = cj(b1[k]);
   56,016  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7002x)
  105,030        if(nr==4) blockB[count+2] = cj(b2[k]);
   56,016  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7002x)
  105,030        if(nr==4) blockB[count+3] = cj(b3[k]);
   56,016  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7002x)
    7,002        count += nr;
        .      }
        .      // skip what we have after
   12,607      if(PanelMode) count += nr * (stride-offset-depth);
        .    }
        .  
        .    // copy the remaining columns one at a time (nr==1)
    5,540    for(Index j2=packet_cols; j2<cols; ++j2)
        .    {
    1,316      if(PanelMode) count += offset;
    3,948      const Scalar* b0 = &rhs[(j2+0)*rhsStride];
   15,382      for(Index k=0; k<depth; k++)
        .      {
   35,700        blockB[count] = cj(b0[k]);
   20,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2550x)
    2,550        count += 1;
        .      }
    3,948      if(PanelMode) count += (stride-offset-depth);
        .    }
    2,250  }
        .  
        .  // this version is optimized for row major matrices
        .  template<typename Scalar, typename Index, int nr, bool Conjugate, bool PanelMode>
        .  struct gemm_pack_rhs<Scalar, Index, nr, RowMajor, Conjugate, PanelMode>
        .  {
        .    enum { PacketSize = packet_traits<Scalar>::size };
        .    EIGEN_DONT_INLINE void operator()(Scalar* blockB, const Scalar* rhs, Index rhsStride, Index depth, Index cols, Index stride=0, Index offset=0);
        .  };
-- line 1266 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Transpose.h
--------------------------------------------------------------------------------
       Ir 

-- line 49 ----------------------------------------
        .      InnerStrideAtCompileTime = inner_stride_at_compile_time<MatrixType>::ret,
        .      OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret
        .    };
        .  };
        .  }
        .  
        .  template<typename MatrixType, typename StorageKind> class TransposeImpl;
        .  
  222,950  template<typename MatrixType> class Transpose
  361,865  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .    : public TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>
        .  {
        .    public:
        .  
        .      typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;
        .      EIGEN_GENERIC_PUBLIC_INTERFACE(Transpose)
        .  
  891,986      inline Transpose(MatrixType& a_matrix) : m_matrix(a_matrix) {}
  974,120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
        .  
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Transpose)
        .  
  588,327      inline Index rows() const { return m_matrix.cols(); }
  149,205  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
  605,197      inline Index cols() const { return m_matrix.rows(); }
    2,964  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (156x)
        .  
        .      /** \returns the nested expression */
        .      const typename internal::remove_all<typename MatrixType::Nested>::type&
1,728,998      nestedExpression() const { return m_matrix; }
        .  
        .      /** \returns the nested expression */
        .      typename internal::remove_all<typename MatrixType::Nested>::type&
   59,271      nestedExpression() { return m_matrix.const_cast_derived(); }
   24,010  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
        .  
        .    protected:
        .      typename MatrixType::Nested m_matrix;
        .  };
        .  
        .  namespace internal {
        .  
        .  template<typename MatrixType, bool HasDirectAccess = has_direct_access<MatrixType>::ret>
-- line 86 ----------------------------------------
-- line 92 ----------------------------------------
        .  template<typename MatrixType>
        .  struct TransposeImpl_base<MatrixType, false>
        .  {
        .    typedef typename dense_xpr_base<Transpose<MatrixType> >::type type;
        .  };
        .  
        .  } // end namespace internal
        .  
  503,350  template<typename MatrixType> class TransposeImpl<MatrixType,Dense>
  212,660  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
        .    : public internal::TransposeImpl_base<MatrixType>::type
        .  {
        .    public:
        .  
        .      typedef typename internal::TransposeImpl_base<MatrixType>::type Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE(Transpose<MatrixType>)
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(TransposeImpl)
        .  
   44,590      inline Index innerStride() const { return derived().nestedExpression().innerStride(); }
   72,030  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10290x)
   62,790      inline Index outerStride() const { return derived().nestedExpression().outerStride(); }
  100,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
        .  
        .      typedef typename internal::conditional<
        .                         internal::is_lvalue<MatrixType>::value,
        .                         Scalar,
        .                         const Scalar
        .                       >::type ScalarWithConstIfNotLvalue;
        .  
   81,562      inline ScalarWithConstIfNotLvalue* data() { return derived().nestedExpression().data(); }
  120,615  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8415x)
  330,330      inline const Scalar* data() const { return derived().nestedExpression().data(); }
  257,250  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15435x)
        .  
        .      inline ScalarWithConstIfNotLvalue& coeffRef(Index rowId, Index colId)
        .      {
        .        EIGEN_STATIC_ASSERT_LVALUE(MatrixType)
        .        return derived().nestedExpression().const_cast_derived().coeffRef(colId, rowId);
        .      }
        .  
        .      inline ScalarWithConstIfNotLvalue& coeffRef(Index index)
-- line 127 ----------------------------------------
-- line 135 ----------------------------------------
        .        return derived().nestedExpression().coeffRef(colId, rowId);
        .      }
        .  
        .      inline const Scalar& coeffRef(Index index) const
        .      {
        .        return derived().nestedExpression().coeffRef(index);
        .      }
        .  
  833,784      inline CoeffReturnType coeff(Index rowId, Index colId) const
        .      {
1,528,604        return derived().nestedExpression().coeff(colId, rowId);
  191,394  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4557x)
  277,928      }
        .  
  325,000      inline CoeffReturnType coeff(Index index) const
        .      {
  715,000        return derived().nestedExpression().coeff(index);
2,795,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (195000x)
  195,000      }
        .  
        .      template<int LoadMode>
        .      inline const PacketScalar packet(Index rowId, Index colId) const
        .      {
        .        return derived().nestedExpression().template packet<LoadMode>(colId, rowId);
        .      }
        .  
        .      template<int LoadMode>
-- line 159 ----------------------------------------
-- line 191 ----------------------------------------
        .    * which gives Eigen good opportunities for optimization, or alternatively you can also do:
        .    * \code
        .    * m = m.transpose().eval();
        .    * \endcode
        .    *
        .    * \sa transposeInPlace(), adjoint() */
        .  template<typename Derived>
        .  inline Transpose<Derived>
   17,015  DenseBase<Derived>::transpose()
        .  {
   38,157    return derived();
  445,730  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8410x)
    8,527  }
        .  
        .  /** This is the const version of transpose().
        .    *
        .    * Make sure you read the warning for transpose() !
        .    *
        .    * \sa transposeInPlace(), adjoint() */
        .  template<typename Derived>
        .  inline typename DenseBase<Derived>::ConstTransposeReturnType
  140,635  DenseBase<Derived>::transpose() const
        .  {
  225,016    return ConstTransposeReturnType(derived());
2,372,321  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35674x)
   84,381  }
        .  
        .  /** \returns an expression of the adjoint (i.e. conjugate transpose) of *this.
        .    *
        .    * Example: \include MatrixBase_adjoint.cpp
        .    * Output: \verbinclude MatrixBase_adjoint.out
        .    *
        .    * \warning If you want to replace a matrix by its own adjoint, do \b NOT do this:
        .    * \code
-- line 222 ----------------------------------------
-- line 229 ----------------------------------------
        .    * which gives Eigen good opportunities for optimization, or alternatively you can also do:
        .    * \code
        .    * m = m.adjoint().eval();
        .    * \endcode
        .    *
        .    * \sa adjointInPlace(), transpose(), conjugate(), class Transpose, class internal::scalar_conjugate_op */
        .  template<typename Derived>
        .  inline const typename MatrixBase<Derived>::AdjointReturnType
   17,150  MatrixBase<Derived>::adjoint() const
        .  {
   17,150    return this->transpose(); // in the complex case, the .conjugate() is be implicit here
  533,365  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .                              // due to implicit conversion to return type
   10,290  }
        .  
        .  /***************************************************************************
        .  * "in place" transpose implementation
        .  ***************************************************************************/
        .  
        .  namespace internal {
        .  
        .  template<typename MatrixType,
-- line 249 ----------------------------------------
-- line 351 ----------------------------------------
        .    enum { ret =    bool(blas_traits<DerivedA>::IsTransposed) != DestIsTransposed
        .                 || bool(blas_traits<DerivedB>::IsTransposed) != DestIsTransposed
        .    };
        .  };
        .  
        .  template<typename Scalar, bool DestIsTransposed, typename OtherDerived>
        .  struct check_transpose_aliasing_run_time_selector
        .  {
  103,405    static bool run(const Scalar* dest, const OtherDerived& src)
        .    {
  165,448      return (bool(blas_traits<OtherDerived>::IsTransposed) != DestIsTransposed) && (dest!=0 && dest==(const Scalar*)extract_data(src));
    7,839  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (39x)
   41,362    }
        .  };
        .  
        .  template<typename Scalar, bool DestIsTransposed, typename BinOp, typename DerivedA, typename DerivedB>
        .  struct check_transpose_aliasing_run_time_selector<Scalar,DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >
        .  {
        .    static bool run(const Scalar* dest, const CwiseBinaryOp<BinOp,DerivedA,DerivedB>& src)
        .    {
        .      return ((blas_traits<DerivedA>::IsTransposed != DestIsTransposed) && (dest!=0 && dest==(const Scalar*)extract_data(src.lhs())))
-- line 370 ----------------------------------------
-- line 380 ----------------------------------------
        .  
        .  template<typename Derived, typename OtherDerived,
        .           bool MightHaveTransposeAliasing
        .                   = check_transpose_aliasing_compile_time_selector
        .                       <blas_traits<Derived>::IsTransposed,OtherDerived>::ret
        .          >
        .  struct checkTransposeAliasing_impl
        .  {
  103,405      static void run(const Derived& dst, const OtherDerived& other)
        .      {
  227,491          eigen_assert((!check_transpose_aliasing_run_time_selector
1,248,590  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (35674x)
        .                        <typename Derived::Scalar,blas_traits<Derived>::IsTransposed,OtherDerived>
        .                        ::run(extract_data(dst), other))
        .            && "aliasing detected during transposition, use transposeInPlace() "
        .               "or evaluate the rhs into a temporary using .eval()");
        .  
   62,043      }
        .  };
        .  
        .  template<typename Derived, typename OtherDerived>
        .  struct checkTransposeAliasing_impl<Derived, OtherDerived, false>
        .  {
  685,284      static void run(const Derived&, const OtherDerived&)
        .      {
  513,963      }
        .  };
        .  
        .  } // end namespace internal
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
  960,010  void DenseBase<Derived>::checkTransposeAliasing(const OtherDerived& other) const
        .  {
1,536,016      internal::checkTransposeAliasing_impl<Derived, OtherDerived>::run(derived(), other);
    6,105  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (814x)
  576,006  }
        .  #endif
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_TRANSPOSE_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Functors.h
--------------------------------------------------------------------------------
        Ir 

-- line 17 ----------------------------------------
         .  // associative functors:
         .  
         .  /** \internal
         .    * \brief Template functor to compute the sum of two scalars
         .    *
         .    * \sa class CwiseBinaryOp, MatrixBase::operator+, class VectorwiseOp, MatrixBase::sum()
         .    */
         .  template<typename Scalar> struct scalar_sum_op {
   484,854    EIGEN_EMPTY_STRUCT_CTOR(scalar_sum_op)
 2,999,472    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a + b; }
         .    template<typename Packet>
 1,041,528    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
 1,215,116    { return internal::padd(a,b); }
 2,777,408  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (173588x)
         .    template<typename Packet>
   183,815    EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const
   257,341    { return internal::predux(a); }
 1,323,468  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (36763x)
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_sum_op<Scalar> > {
         .    enum {
         .      Cost = NumTraits<Scalar>::AddCost,
         .      PacketAccess = packet_traits<Scalar>::HasAdd
         .    };
         .  };
-- line 40 ----------------------------------------
-- line 45 ----------------------------------------
         .    * \sa class CwiseBinaryOp, Cwise::operator*(), class VectorwiseOp, MatrixBase::redux()
         .    */
         .  template<typename LhsScalar,typename RhsScalar> struct scalar_product_op {
         .    enum {
         .      // TODO vectorize mixed product
         .      Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasMul && packet_traits<RhsScalar>::HasMul
         .    };
         .    typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;
   511,396    EIGEN_EMPTY_STRUCT_CTOR(scalar_product_op)
   243,040    EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a * b; }
         .    template<typename Packet>
   201,600    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
   235,200    { return internal::pmul(a,b); }
   537,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33600x)
         .    template<typename Packet>
         .    EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const
         .    { return internal::predux_mul(a); }
         .  };
         .  template<typename LhsScalar,typename RhsScalar>
         .  struct functor_traits<scalar_product_op<LhsScalar,RhsScalar> > {
         .    enum {
         .      Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost)/2, // rough estimate!
-- line 65 ----------------------------------------
-- line 75 ----------------------------------------
         .  template<typename LhsScalar,typename RhsScalar> struct scalar_conj_product_op {
         .  
         .    enum {
         .      Conj = NumTraits<LhsScalar>::IsComplex
         .    };
         .    
         .    typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;
         .    
   374,387    EIGEN_EMPTY_STRUCT_CTOR(scalar_conj_product_op)
    94,254    EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const
   157,090    { return conj_helper<LhsScalar,RhsScalar,Conj,false>().pmul(a,b); }
   471,270  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (15709x)
         .    
         .    template<typename Packet>
   875,382    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
 1,167,176    { return conj_helper<Packet,Packet,Conj,false>().pmul(a,b); }
 4,376,910  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (145897x)
         .  };
         .  template<typename LhsScalar,typename RhsScalar>
         .  struct functor_traits<scalar_conj_product_op<LhsScalar,RhsScalar> > {
         .    enum {
         .      Cost = NumTraits<LhsScalar>::MulCost,
         .      PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMul
         .    };
         .  };
         .  
         .  /** \internal
         .    * \brief Template functor to compute the min of two scalars
         .    *
         .    * \sa class CwiseBinaryOp, MatrixBase::cwiseMin, class VectorwiseOp, MatrixBase::minCoeff()
         .    */
         .  template<typename Scalar> struct scalar_min_op {
        60    EIGEN_EMPTY_STRUCT_CTOR(scalar_min_op)
         .    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { using std::min; return (min)(a, b); }
         .    template<typename Packet>
       180    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
       210    { return internal::pmin(a,b); }
       480  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30x)
         .    template<typename Packet>
        50    EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const
        70    { return internal::predux_min(a); }
       420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10x)
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_min_op<Scalar> > {
         .    enum {
         .      Cost = NumTraits<Scalar>::AddCost,
         .      PacketAccess = packet_traits<Scalar>::HasMin
         .    };
         .  };
         .  
         .  /** \internal
         .    * \brief Template functor to compute the max of two scalars
         .    *
         .    * \sa class CwiseBinaryOp, MatrixBase::cwiseMax, class VectorwiseOp, MatrixBase::maxCoeff()
         .    */
         .  template<typename Scalar> struct scalar_max_op {
     3,036    EIGEN_EMPTY_STRUCT_CTOR(scalar_max_op)
    47,616    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { using std::max; return (max)(a, b); }
    42,346  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2976x)
         .    template<typename Packet>
       180    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
       210    { return internal::pmax(a,b); }
       480  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (30x)
         .    template<typename Packet>
        50    EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const
        70    { return internal::predux_max(a); }
       420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10x)
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_max_op<Scalar> > {
         .    enum {
         .      Cost = NumTraits<Scalar>::AddCost,
         .      PacketAccess = packet_traits<Scalar>::HasMax
         .    };
         .  };
-- line 143 ----------------------------------------
-- line 181 ----------------------------------------
         .  // other binary functors:
         .  
         .  /** \internal
         .    * \brief Template functor to compute the difference of two scalars
         .    *
         .    * \sa class CwiseBinaryOp, MatrixBase::operator-
         .    */
         .  template<typename Scalar> struct scalar_difference_op {
   711,678    EIGEN_EMPTY_STRUCT_CTOR(scalar_difference_op)
 2,481,696    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a - b; }
         .    template<typename Packet>
 7,492,512    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
 8,741,264    { return internal::psub(a,b); }
19,980,032  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1248752x)
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_difference_op<Scalar> > {
         .    enum {
         .      Cost = NumTraits<Scalar>::AddCost,
         .      PacketAccess = packet_traits<Scalar>::HasSub
         .    };
         .  };
-- line 201 ----------------------------------------
-- line 262 ----------------------------------------
         .  // unary functors:
         .  
         .  /** \internal
         .    * \brief Template functor to compute the opposite of a scalar
         .    *
         .    * \sa class CwiseUnaryOp, MatrixBase::operator-
         .    */
         .  template<typename Scalar> struct scalar_opposite_op {
    40,261    EIGEN_EMPTY_STRUCT_CTOR(scalar_opposite_op)
    72,876    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return -a; }
         .    template<typename Packet>
    65,055    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
    65,055    { return internal::pnegate(a); }
   533,451  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (13011x)
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_opposite_op<Scalar> >
         .  { enum {
         .      Cost = NumTraits<Scalar>::AddCost,
         .      PacketAccess = packet_traits<Scalar>::HasNegate };
         .  };
         .  
         .  /** \internal
         .    * \brief Template functor to compute the absolute value of a scalar
         .    *
         .    * \sa class CwiseUnaryOp, Cwise::abs
         .    */
         .  template<typename Scalar> struct scalar_abs_op {
    67,860    EIGEN_EMPTY_STRUCT_CTOR(scalar_abs_op)
         .    typedef typename NumTraits<Scalar>::Real result_type;
22,526,959    EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { using std::abs; return abs(a); }
19,061,273  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1732843x)
         .    template<typename Packet>
    52,080    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
    52,080    { return internal::pabs(a); }
   427,056  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10416x)
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_abs_op<Scalar> >
         .  {
         .    enum {
         .      Cost = NumTraits<Scalar>::AddCost,
         .      PacketAccess = packet_traits<Scalar>::HasAbs
         .    };
-- line 302 ----------------------------------------
-- line 303 ----------------------------------------
         .  };
         .  
         .  /** \internal
         .    * \brief Template functor to compute the squared absolute value of a scalar
         .    *
         .    * \sa class CwiseUnaryOp, Cwise::abs2
         .    */
         .  template<typename Scalar> struct scalar_abs2_op {
   104,325    EIGEN_EMPTY_STRUCT_CTOR(scalar_abs2_op)
         .    typedef typename NumTraits<Scalar>::Real result_type;
    86,100    EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs2(a); }
   179,375  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7175x)
         .    template<typename Packet>
   207,160    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
   290,024    { return internal::pmul(a,a); }
   662,912  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (41432x)
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_abs2_op<Scalar> >
         .  { enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };
         .  
         .  /** \internal
         .    * \brief Template functor to compute the conjugate of a complex value
         .    *
-- line 324 ----------------------------------------
-- line 458 ----------------------------------------
         .   *  - on the other hand GCC is able to moves the pset1() outside the loop :)
         .   *  - simpler code ;)
         .   * (ICC and gcc 4.4 seems to perform well in both cases, the issue is visible with y = a*x + b*y)
         .   */
         .  template<typename Scalar>
         .  struct scalar_multiple_op {
         .    typedef typename packet_traits<Scalar>::type Packet;
         .    // FIXME default copy constructors seems bugged with std::complex<>
 5,140,432    EIGEN_STRONG_INLINE scalar_multiple_op(const scalar_multiple_op& other) : m_other(other.m_other) { }
 1,704,879    EIGEN_STRONG_INLINE scalar_multiple_op(const Scalar& other) : m_other(other) { }
 4,770,571    EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a * m_other; }
12,437,585    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
27,362,687    { return internal::pmul(a, pset1<Packet>(m_other)); }
67,162,959  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4975034x)
         .    typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_multiple_op<Scalar> >
         .  { enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };
         .  
         .  template<typename Scalar1, typename Scalar2>
         .  struct scalar_multiple2_op {
-- line 478 ----------------------------------------
-- line 493 ----------------------------------------
         .    * a scalar where the scalar type is not necessarily a floating point type.
         .    *
         .    * \sa class CwiseUnaryOp, MatrixBase::operator/
         .    */
         .  template<typename Scalar>
         .  struct scalar_quotient1_op {
         .    typedef typename packet_traits<Scalar>::type Packet;
         .    // FIXME default copy constructors seems bugged with std::complex<>
    32,472    EIGEN_STRONG_INLINE scalar_quotient1_op(const scalar_quotient1_op& other) : m_other(other.m_other) { }
    32,472    EIGEN_STRONG_INLINE scalar_quotient1_op(const Scalar& other) : m_other(other) {}
    39,637    EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a / m_other; }
   127,715    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
   280,973    { return internal::pdiv(a, pset1<Packet>(m_other)); }
   689,661  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (51086x)
         .    typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_quotient1_op<Scalar> >
         .  { enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };
         .  
         .  // nullary functors
         .  
         .  template<typename Scalar>
         .  struct scalar_constant_op {
         .    typedef typename packet_traits<Scalar>::type Packet;
   484,297    EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }
   287,364    EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }
         .    template<typename Index>
   802,747    EIGEN_STRONG_INLINE const Scalar operator() (Index, Index = 0) const { return m_other; }
         .    template<typename Index>
   964,282    EIGEN_STRONG_INLINE const Packet packetOp(Index, Index = 0) const { return internal::pset1<Packet>(m_other); }
   964,282  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (87662x)
         .    const Scalar m_other;
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_constant_op<Scalar> >
         .  // FIXME replace this packet test by a safe one
         .  { enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };
         .  
         .  template<typename Scalar> struct scalar_identity_op {
    57,888    EIGEN_EMPTY_STRUCT_CTOR(scalar_identity_op)
         .    template<typename Index>
 1,380,736    EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const { return row==col ? Scalar(1) : Scalar(0); }
         .  };
         .  template<typename Scalar>
         .  struct functor_traits<scalar_identity_op<Scalar> >
         .  { enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };
         .  
         .  template <typename Scalar, bool RandomAccess> struct linspaced_op_impl;
         .  
         .  // linear access for packet ops:
-- line 541 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/stl_iterator.h
--------------------------------------------------------------------------------
     Ir 

-- line 732 ----------------------------------------
      .        typedef typename __traits_type::difference_type 	difference_type;
      .        typedef typename __traits_type::reference 	reference;
      .        typedef typename __traits_type::pointer   	pointer;
      .  
      .        _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      .        : _M_current(_Iterator()) { }
      .  
      .        explicit
163,776        __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
286,608        : _M_current(__i) { }
      .  
      .        // Allow iterator to const_iterator conversion
      .        template<typename _Iter>
      .          __normal_iterator(const __normal_iterator<_Iter,
      .  			  typename __enable_if<
      .        	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
      .  		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
      .          : _M_current(__i.base()) { }
      .  
      .        // Forward iterator requirements
      .        reference
    102        operator*() const _GLIBCXX_NOEXCEPT
    136        { return *_M_current; }
      .  
      .        pointer
      .        operator->() const _GLIBCXX_NOEXCEPT
      .        { return _M_current; }
      .  
      .        __normal_iterator&
      .        operator++() _GLIBCXX_NOEXCEPT
      .        {
-- line 762 ----------------------------------------
-- line 793 ----------------------------------------
      .        operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
      .        { return __normal_iterator(_M_current + __n); }
      .  
      .        __normal_iterator&
      .        operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
      .        { _M_current -= __n; return *this; }
      .  
      .        __normal_iterator
    170        operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    510        { return __normal_iterator(_M_current - __n); }
    408  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (34x)
      .  
      .        const _Iterator&
 92,064        base() const _GLIBCXX_NOEXCEPT
 92,064        { return _M_current; }
      .      };
      .  
      .    // Note: In what follows, the left- and right-hand-side iterators are
      .    // allowed to vary in types (conceptually in cv-qualification) so that
      .    // comparison between cv-qualified and non-cv-qualified iterators be
      .    // valid.  However, the greedy and unfriendly operators in std::rel_ops
      .    // will make overload resolution ambiguous (when in scope) if we don't
      .    // provide overloads whose operands are of the same type.  Can someone
-- line 814 ----------------------------------------
-- line 819 ----------------------------------------
      .      inline bool
      .      operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
      .  	       const __normal_iterator<_IteratorR, _Container>& __rhs)
      .      _GLIBCXX_NOEXCEPT
      .      { return __lhs.base() == __rhs.base(); }
      .  
      .    template<typename _Iterator, typename _Container>
      .      inline bool
 43,992      operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      .  	       const __normal_iterator<_Iterator, _Container>& __rhs)
      .      _GLIBCXX_NOEXCEPT
102,648      { return __lhs.base() == __rhs.base(); }
102,648  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14664x)
      .  
      .    template<typename _IteratorL, typename _IteratorR, typename _Container>
      .      inline bool
      .      operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
      .  	       const __normal_iterator<_IteratorR, _Container>& __rhs)
      .      _GLIBCXX_NOEXCEPT
      .      { return __lhs.base() != __rhs.base(); }
      .  
      .    template<typename _Iterator, typename _Container>
      .      inline bool
     72      operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      .  	       const __normal_iterator<_Iterator, _Container>& __rhs)
      .      _GLIBCXX_NOEXCEPT
    168      { return __lhs.base() != __rhs.base(); }
    168  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (24x)
      .  
      .    // Random access iterator requirements
      .    template<typename _IteratorL, typename _IteratorR, typename _Container>
      .      inline bool
      .      operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
      .  	      const __normal_iterator<_IteratorR, _Container>& __rhs)
      .      _GLIBCXX_NOEXCEPT
      .      { return __lhs.base() < __rhs.base(); }
-- line 852 ----------------------------------------
-- line 976 ----------------------------------------
      .        typedef typename conditional<is_reference<__base_ref>::value,
      .  			 typename remove_reference<__base_ref>::type&&,
      .  			 __base_ref>::type		reference;
      .  
      .        move_iterator()
      .        : _M_current() { }
      .  
      .        explicit
  2,296        move_iterator(iterator_type __i)
  3,444        : _M_current(__i) { }
      .  
      .        template<typename _Iter>
      .  	move_iterator(const move_iterator<_Iter>& __i)
      .  	: _M_current(__i.base()) { }
      .  
      .        iterator_type
  4,236        base() const
  5,648        { return _M_current; }
      .  
      .        reference
  1,257        operator*() const
  1,676        { return static_cast<reference>(*_M_current); }
      .  
      .        pointer
      .        operator->() const
      .        { return _M_current; }
      .  
      .        move_iterator&
  1,257        operator++()
      .        {
  2,095  	++_M_current;
    419  	return *this;
    838        }
      .  
      .        move_iterator
      .        operator++(int)
      .        {
      .  	move_iterator __tmp = *this;
      .  	++_M_current;
      .  	return __tmp;
      .        }
-- line 1016 ----------------------------------------
-- line 1063 ----------------------------------------
      .    template<typename _IteratorL, typename _IteratorR>
      .      inline bool
      .      operator==(const move_iterator<_IteratorL>& __x,
      .  	       const move_iterator<_IteratorR>& __y)
      .      { return __x.base() == __y.base(); }
      .  
      .    template<typename _Iterator>
      .      inline bool
  2,874      operator==(const move_iterator<_Iterator>& __x,
      .  	       const move_iterator<_Iterator>& __y)
  6,227      { return __x.base() == __y.base(); }
  7,392  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (924x)
      .  
      .    template<typename _IteratorL, typename _IteratorR>
      .      inline bool
      .      operator!=(const move_iterator<_IteratorL>& __x,
      .  	       const move_iterator<_IteratorR>& __y)
      .      { return !(__x == __y); }
      .  
      .    template<typename _Iterator>
      .      inline bool
  2,395      operator!=(const move_iterator<_Iterator>& __x,
      .  	       const move_iterator<_Iterator>& __y)
  3,832      { return !(__x == __y); }
    396  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (11x)
      .  
      .    template<typename _IteratorL, typename _IteratorR>
      .      inline bool
      .      operator<(const move_iterator<_IteratorL>& __x,
      .  	      const move_iterator<_IteratorR>& __y)
      .      { return __x.base() < __y.base(); }
      .  
      .    template<typename _Iterator>
-- line 1093 ----------------------------------------
-- line 1158 ----------------------------------------
      .      make_move_iterator(_Iterator __i)
      .      { return move_iterator<_Iterator>(__i); }
      .  
      .    template<typename _Iterator, typename _ReturnType
      .      = typename conditional<__move_if_noexcept_cond
      .        <typename iterator_traits<_Iterator>::value_type>::value,
      .                  _Iterator, move_iterator<_Iterator>>::type>
      .      inline _ReturnType
  2,428      __make_move_if_noexcept_iterator(_Iterator __i)
  4,724      { return _ReturnType(__i); }
    352  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (32x)
      .  
      .    // @} group iterators
      .  
      .  _GLIBCXX_END_NAMESPACE_VERSION
      .  } // namespace
      .  
      .  #define _GLIBCXX_MAKE_MOVE_ITERATOR(_Iter) std::make_move_iterator(_Iter)
      .  #define _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(_Iter) \
-- line 1175 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Matrix.h
--------------------------------------------------------------------------------
        Ir 

-- line 119 ----------------------------------------
         .      Options = _Options,
         .      InnerStrideAtCompileTime = 1,
         .      OuterStrideAtCompileTime = (Options&RowMajor) ? ColsAtCompileTime : RowsAtCompileTime
         .    };
         .  };
         .  }
         .  
         .  template<typename _Scalar, int _Rows, int _Cols, int _Options, int _MaxRows, int _MaxCols>
   188,190  class Matrix
   321,015  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3509x)
         .    : public PlainObjectBase<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >
         .  {
         .    public:
         .  
         .      /** \brief Base class typedef.
         .        * \sa PlainObjectBase
         .        */
         .      typedef PlainObjectBase<Matrix> Base;
-- line 135 ----------------------------------------
-- line 146 ----------------------------------------
         .      /**
         .        * \brief Assigns matrices to each other.
         .        *
         .        * \note This is a special case of the templated operator=. Its purpose is
         .        * to prevent a default operator= from hiding the templated operator=.
         .        *
         .        * \callgraph
         .        */
    25,770      EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)
         .      {
    25,770        return Base::_set(other);
 8,587,264  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (281x)
    10,308      }
         .  
         .      /** \internal
         .        * \brief Copies the value of the expression \a other into \c *this with automatic resizing.
         .        *
         .        * *this might be resized to match the dimensions of \a other. If *this was a null matrix (not already initialized),
         .        * it will be initialized.
         .        *
         .        * Note that copying a row-vector into a vector (and conversely) is allowed.
         .        * The resizing, if any, is then done in the appropriate way so that row-vectors
         .        * remain row-vectors and vectors remain vectors.
         .        */
         .      template<typename OtherDerived>
    94,815      EIGEN_STRONG_INLINE Matrix& operator=(const MatrixBase<OtherDerived>& other)
         .      {
    94,815        return Base::_set(other);
 2,632,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
    37,926      }
         .  
         .      /* Here, doxygen failed to copy the brief information when using \copydoc */
         .  
         .      /**
         .        * \brief Copies the generic expression \a other into *this.
         .        * \copydetails DenseBase::operator=(const EigenBase<OtherDerived> &other)
         .        */
         .      template<typename OtherDerived>
         .      EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)
         .      {
         .        return Base::operator=(other);
         .      }
         .  
         .      template<typename OtherDerived>
    22,430      EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)
         .      {
    22,430        return Base::operator=(func);
512,360,277  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
     8,972      }
         .  
         .      /** \brief Default constructor.
         .        *
         .        * For fixed-size matrices, does nothing.
         .        *
         .        * For dynamic-size matrices, creates an empty matrix of size 0. Does not allocate any array. Such a matrix
         .        * is called a null matrix. This constructor is the unique way to create null matrices: resizing
         .        * a matrix to 0 is not supported.
         .        *
         .        * \sa resize(Index,Index)
         .        */
    86,023      EIGEN_STRONG_INLINE Matrix() : Base()
   343,900  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3439x)
         .      {
    12,289        Base::_check_template_params();
    20,634  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3439x)
         .        EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
    36,867      }
         .  
         .      // FIXME is it still needed
         .      Matrix(internal::constructor_without_unaligned_array_assert)
         .        : Base(internal::constructor_without_unaligned_array_assert())
         .      { Base::_check_template_params(); EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED }
         .  
         .      /** \brief Constructs a vector or row-vector with given dimension. \only_for_vectors
         .        *
         .        * Note that this is only useful for dynamic-size vectors. For fixed-size vectors,
         .        * it is redundant to pass the dimension here, so it makes more sense to use the default
         .        * constructor Matrix() instead.
         .        */
     5,646      EIGEN_STRONG_INLINE explicit Matrix(Index dim)
     5,778        : Base(dim, RowsAtCompileTime == 1 ? 1 : dim, ColsAtCompileTime == 1 ? 1 : dim)
   247,579  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (776x)
         .      {
       941        Base::_check_template_params();
     4,656  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (776x)
         .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(Matrix)
     4,705        eigen_assert(dim >= 0);
         .        eigen_assert(SizeAtCompileTime == Dynamic || SizeAtCompileTime == dim);
         .        EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
     4,705      }
         .  
         .      #ifndef EIGEN_PARSED_BY_DOXYGEN
         .      template<typename T0, typename T1>
     1,351      EIGEN_STRONG_INLINE Matrix(const T0& x, const T1& y)
       579      {
    19,300  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (193x)
       193        Base::_check_template_params();
     1,158  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (193x)
     1,544        Base::template _init2<T0,T1>(x, y);
   108,210  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (193x)
       965      }
         .      #else
         .      /** \brief Constructs an uninitialized matrix with \a rows rows and \a cols columns.
         .        *
         .        * This is useful for dynamic-size matrices. For fixed-size matrices,
         .        * it is redundant to pass these parameters, so one should use the default constructor
         .        * Matrix() instead. */
         .      Matrix(Index rows, Index cols);
         .      /** \brief Constructs an initialized 2D vector with given coefficients */
-- line 244 ----------------------------------------
-- line 264 ----------------------------------------
         .        m_storage.data()[2] = z;
         .        m_storage.data()[3] = w;
         .      }
         .  
         .      explicit Matrix(const Scalar *data);
         .  
         .      /** \brief Constructor copying the value of the expression \a other */
         .      template<typename OtherDerived>
    23,064      EIGEN_STRONG_INLINE Matrix(const MatrixBase<OtherDerived>& other)
    63,426               : Base(other.rows() * other.cols(), other.rows(), other.cols())
    35,514  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (260x)
         .      {
         .        // This test resides here, to bring the error messages closer to the user. Normally, these checks
         .        // are performed deeply within the library, thus causing long and scary error traces.
         .        EIGEN_STATIC_ASSERT((internal::is_same<Scalar, typename OtherDerived::Scalar>::value),
         .          YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
         .  
     2,883        Base::_check_template_params();
       312  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (52x)
    14,415        Base::_set_noalias(other);
   125,138  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (52x)
    20,181      }
         .      /** \brief Copy constructor */
     3,264      EIGEN_STRONG_INLINE Matrix(const Matrix& other)
     8,976              : Base(other.rows() * other.cols(), other.rows(), other.cols())
    69,480  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (630x)
         .      {
       408        Base::_check_template_params();
       756  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (126x)
     2,040        Base::_set_noalias(other);
 2,735,187  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (126x)
     2,856      }
         .      /** \brief Copy constructor with in-place evaluation */
         .      template<typename OtherDerived>
    12,630      EIGEN_STRONG_INLINE Matrix(const ReturnByValue<OtherDerived>& other)
     6,315      {
   206,290  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2105x)
     2,105        Base::_check_template_params();
    12,630  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2105x)
    27,365        Base::resize(other.rows(), other.cols());
   927,021  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6315x)
    10,525        other.evalTo(*this);
59,392,575  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2105x)
    10,525      }
         .  
         .      /** \brief Copy constructor for generic expressions.
         .        * \sa MatrixBase::operator=(const EigenBase<OtherDerived>&)
         .        */
         .      template<typename OtherDerived>
         .      EIGEN_STRONG_INLINE Matrix(const EigenBase<OtherDerived> &other)
         .        : Base(other.derived().rows() * other.derived().cols(), other.derived().rows(), other.derived().cols())
         .      {
-- line 305 ----------------------------------------
-- line 310 ----------------------------------------
         .        *this = other;
         .      }
         .  
         .      /** \internal
         .        * \brief Override MatrixBase::swap() since for dynamic-sized matrices
         .        * of same type it is enough to swap the data pointers.
         .        */
         .      template<typename OtherDerived>
       800      void swap(MatrixBase<OtherDerived> const & other)
     1,760      { this->_swap(other.derived()); }
    36,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (320x)
         .  
37,521,450      inline Index innerStride() const { return 1; }
 5,143,185      inline Index outerStride() const { return this->innerSize(); }
23,534,874  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (500742x)
         .  
         .      /////////// Geometry module ///////////
         .  
         .      template<typename OtherDerived>
         .      explicit Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
         .      template<typename OtherDerived>
         .      Matrix& operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
         .  
-- line 330 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Visitor.h
--------------------------------------------------------------------------------
        Ir 

-- line 37 ----------------------------------------
         .      return visitor.init(mat.coeff(0, 0), 0, 0);
         .    }
         .  };
         .  
         .  template<typename Visitor, typename Derived>
         .  struct visitor_impl<Visitor, Derived, Dynamic>
         .  {
         .    typedef typename Derived::Index Index;
     8,740    static inline void run(const Derived& mat, Visitor& visitor)
         .    {
    22,724      visitor.init(mat.coeff(0,0), 0, 0);
   384,560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
   426,805      for(Index i = 1; i < mat.rows(); ++i)
 1,380,893  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (47617x)
   642,166        visitor(mat.coeff(i, 0), i, 0);
 9,984,209  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (91738x)
   426,805      for(Index j = 1; j < mat.cols(); ++j)
 1,380,893  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (47617x)
15,502,738        for(Index i = 0; i < mat.rows(); ++i)
50,101,067  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1727623x)
23,544,556          visitor(mat.coeff(i, j), i, j);
364,981,478  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3363508x)
     5,244    }
         .  };
         .  
         .  } // end namespace internal
         .  
         .  /** Applies the visitor \a visitor to the whole coefficients of the matrix or vector.
         .    *
         .    * The template parameter \a Visitor is the type of the visitor and provides the following interface:
         .    * \code
-- line 61 ----------------------------------------
-- line 69 ----------------------------------------
         .    *
         .    * \note compared to one or two \em for \em loops, visitors offer automatic
         .    * unrolling for small fixed size matrix.
         .    *
         .    * \sa minCoeff(Index*,Index*), maxCoeff(Index*,Index*), DenseBase::redux()
         .    */
         .  template<typename Derived>
         .  template<typename Visitor>
     8,740  void DenseBase<Derived>::visit(Visitor& visitor) const
         .  {
         .    enum { unroll = SizeAtCompileTime != Dynamic
         .                     && CoeffReadCost != Dynamic
         .                     && (SizeAtCompileTime == 1 || internal::functor_traits<Visitor>::Cost != Dynamic)
         .                     && SizeAtCompileTime * CoeffReadCost + (SizeAtCompileTime-1) * internal::functor_traits<Visitor>::Cost
         .                        <= EIGEN_UNROLLING_LIMIT };
         .    return internal::visitor_impl<Visitor, Derived,
         .        unroll ? int(SizeAtCompileTime) : Dynamic
    13,984      >::run(derived(), visitor);
468,806,862  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3496x)
     3,496  }
         .  
         .  namespace internal {
         .  
         .  /** \internal
         .    * \brief Base class to implement min and max visitors
         .    */
         .  template <typename Derived>
         .  struct coeff_visitor
         .  {
         .    typedef typename Derived::Index Index;
         .    typedef typename Derived::Scalar Scalar;
         .    Index row, col;
         .    Scalar res;
    10,488    inline void init(const Scalar& value, Index i, Index j)
         .    {
     6,992      res = value;
     5,244      row = i;
     5,244      col = j;
     5,244    }
         .  };
         .  
         .  /** \internal
         .    * \brief Visitor computing the min coefficient with its value and coordinates
         .    *
         .    * \sa DenseBase::minCoeff(Index*, Index*)
         .    */
         .  template <typename Derived>
-- line 114 ----------------------------------------
-- line 139 ----------------------------------------
         .    *
         .    * \sa DenseBase::maxCoeff(Index*, Index*)
         .    */
         .  template <typename Derived>
         .  struct max_coeff_visitor : coeff_visitor<Derived>
         .  {
         .    typedef typename Derived::Index Index;
         .    typedef typename Derived::Scalar Scalar;
10,365,738    void operator() (const Scalar& value, Index i, Index j)
         .    {
10,365,738      if(value > this->res)
         .      {
    31,776        this->res = value;
    23,832        this->row = i;
    23,832        this->col = j;
         .      }
 6,902,548    }
         .  };
         .  
         .  template<typename Scalar>
         .  struct functor_traits<max_coeff_visitor<Scalar> > {
         .    enum {
         .      Cost = NumTraits<Scalar>::AddCost
         .    };
         .  };
-- line 163 ----------------------------------------
-- line 201 ----------------------------------------
         .  /** \returns the maximum of all coefficients of *this and puts in *row and *col its location.
         .    * \warning the result is undefined if \c *this contains NaN. 
         .    *
         .    * \sa DenseBase::minCoeff(IndexType*,IndexType*), DenseBase::visitor(), DenseBase::maxCoeff()
         .    */
         .  template<typename Derived>
         .  template<typename IndexType>
         .  typename internal::traits<Derived>::Scalar
    10,488  DenseBase<Derived>::maxCoeff(IndexType* rowPtr, IndexType* colPtr) const
         .  {
         .    internal::max_coeff_visitor<Derived> maxVisitor;
     8,740    this->visit(maxVisitor);
468,834,830  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1748x)
     5,244    *rowPtr = maxVisitor.row;
     8,740    if (colPtr) *colPtr = maxVisitor.col;
     3,496    return maxVisitor.res;
     5,244  }
         .  
         .  /** \returns the maximum of all coefficients of *this and puts in *index its location.
         .    * \warning the result is undefined if \c *this contains NaN.
         .    *
         .    * \sa DenseBase::maxCoeff(IndexType*,IndexType*), DenseBase::minCoeff(IndexType*,IndexType*), DenseBase::visitor(), DenseBase::maxCoeff()
         .    */
         .  template<typename Derived>
         .  template<typename IndexType>
-- line 224 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GeneralProduct.h
--------------------------------------------------------------------------------
       Ir 

-- line 220 ----------------------------------------
        .  /***********************************************************************
        .  *  Implementation of Outer Vector Vector Product
        .  ***********************************************************************/
        .  
        .  namespace internal {
        .  
        .  // Column major
        .  template<typename ProductType, typename Dest, typename Func>
   27,440  EIGEN_DONT_INLINE void outer_product_selector_run(const ProductType& prod, Dest& dest, const Func& func, const false_type&)
        .  {
        .    typedef typename Dest::Index Index;
        .    // FIXME make sure lhs is sequentially stored
        .    // FIXME not very good if rhs is real and lhs complex while alpha is real too
   13,720    const Index cols = dest.cols();
   32,585  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
  393,055    for (Index j=0; j<cols; ++j)
2,276,010      func(dest.col(j), prod.rhs().coeff(j) * prod.lhs());
315,749,748  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (179988x)
   17,150  }
        .  
        .  // Row major
        .  template<typename ProductType, typename Dest, typename Func>
        .  EIGEN_DONT_INLINE void outer_product_selector_run(const ProductType& prod, Dest& dest, const Func& func, const true_type&) {
        .    typedef typename Dest::Index Index;
        .    // FIXME make sure rhs is sequentially stored
        .    // FIXME not very good if lhs is real and rhs complex while alpha is real too
        .    const Index rows = dest.rows();
-- line 244 ----------------------------------------
-- line 249 ----------------------------------------
        .  template<typename Lhs, typename Rhs>
        .  struct traits<GeneralProduct<Lhs,Rhs,OuterProduct> >
        .   : traits<ProductBase<GeneralProduct<Lhs,Rhs,OuterProduct>, Lhs, Rhs> >
        .  {};
        .  
        .  }
        .  
        .  template<typename Lhs, typename Rhs>
   34,300  class GeneralProduct<Lhs, Rhs, OuterProduct>
  183,505  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .    : public ProductBase<GeneralProduct<Lhs,Rhs,OuterProduct>, Lhs, Rhs>
        .  {
        .      template<typename T> struct IsRowMajor : internal::conditional<(int(T::Flags)&RowMajorBit), internal::true_type, internal::false_type>::type {};
        .      
        .    public:
        .      EIGEN_PRODUCT_PUBLIC_INTERFACE(GeneralProduct)
        .  
   41,160      GeneralProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)
1,087,310  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .      {
        .        EIGEN_STATIC_ASSERT((internal::is_same<typename Lhs::RealScalar, typename Rhs::RealScalar>::value),
        .          YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
   10,290      }
        .      
        .      struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };
        .      struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };
1,289,739      struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };
287,371,640  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (59996x)
        .      struct adds {
        .        Scalar m_scale;
        .        adds(const Scalar& s) : m_scale(s) {}
        .        template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const {
        .          dst.const_cast_derived() += m_scale * src;
        .        }
        .      };
        .      
-- line 281 ----------------------------------------
-- line 285 ----------------------------------------
        .      }
        .      
        .      template<typename Dest>
        .      inline void addTo(Dest& dest) const {
        .        internal::outer_product_selector_run(*this, dest, add(), IsRowMajor<Dest>());
        .      }
        .  
        .      template<typename Dest>
   17,150      inline void subTo(Dest& dest) const {
   20,580        internal::outer_product_selector_run(*this, dest, sub(), IsRowMajor<Dest>());
601,908,063  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
   10,290      }
        .  
        .      template<typename Dest> void scaleAndAddTo(Dest& dest, const Scalar& alpha) const
        .      {
        .        internal::outer_product_selector_run(*this, dest, adds(alpha), IsRowMajor<Dest>());
        .      }
        .  };
        .  
        .  /***********************************************************************
-- line 303 ----------------------------------------
-- line 319 ----------------------------------------
        .  {};
        .  
        .  template<int Side, int StorageOrder, bool BlasCompatible>
        .  struct gemv_selector;
        .  
        .  } // end namespace internal
        .  
        .  template<typename Lhs, typename Rhs>
   88,200  class GeneralProduct<Lhs, Rhs, GemvProduct>
  178,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .    : public ProductBase<GeneralProduct<Lhs,Rhs,GemvProduct>, Lhs, Rhs>
        .  {
        .    public:
        .      EIGEN_PRODUCT_PUBLIC_INTERFACE(GeneralProduct)
        .  
        .      typedef typename Lhs::Scalar LhsScalar;
        .      typedef typename Rhs::Scalar RhsScalar;
        .  
  105,840      GeneralProduct(const Lhs& a_lhs, const Rhs& a_rhs) : Base(a_lhs,a_rhs)
  847,210  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .      {
        .  //       EIGEN_STATIC_ASSERT((internal::is_same<typename Lhs::Scalar, typename Rhs::Scalar>::value),
        .  //         YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
   26,460      }
        .  
        .      enum { Side = Lhs::IsVectorAtCompileTime ? OnTheLeft : OnTheRight };
        .      typedef typename internal::conditional<int(Side)==OnTheRight,_LhsNested,_RhsNested>::type MatrixType;
        .  
   37,730      template<typename Dest> void scaleAndAddTo(Dest& dst, const Scalar& alpha) const
        .      {
  135,310        eigen_assert(m_lhs.rows() == dst.rows() && m_rhs.cols() == dst.cols());
  130,340  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
   32,340        internal::gemv_selector<Side,(int(MatrixType::Flags)&RowMajorBit) ? RowMajor : ColMajor,
94,561,174  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .                         bool(internal::blas_traits<MatrixType>::HasUsableDirectAccess)>::run(*this, dst, alpha);
   26,950      }
        .  };
        .  
        .  namespace internal {
        .  
        .  // The vector is on the left => transposition
        .  template<int StorageOrder, bool BlasCompatible>
        .  struct gemv_selector<OnTheLeft,StorageOrder,BlasCompatible>
        .  {
        .    template<typename ProductType, typename Dest>
   24,010    static void run(const ProductType& prod, Dest& dest, const typename ProductType::Scalar& alpha)
        .    {
   17,150      Transpose<Dest> destT(dest);
  430,465  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
        .      enum { OtherStorageOrder = StorageOrder == RowMajor ? ColMajor : RowMajor };
   20,580      gemv_selector<OnTheRight,OtherStorageOrder,BlasCompatible>
92,122,444  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
   85,750        ::run(GeneralProduct<Transpose<const typename ProductType::_RhsNested>,Transpose<const typename ProductType::_LhsNested>, GemvProduct>
1,924,230  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10290x)
        .          (prod.rhs().transpose(), prod.lhs().transpose()), destT, alpha);
   17,150    }
        .  };
        .  
        .  template<typename Scalar,int Size,int MaxSize,bool Cond> struct gemv_static_vector_if;
        .  
        .  template<typename Scalar,int Size,int MaxSize>
        .  struct gemv_static_vector_if<Scalar,Size,MaxSize,false>
        .  {
        .    EIGEN_STRONG_INLINE  Scalar* data() { eigen_internal_assert(false && "should never be called"); return 0; }
-- line 375 ----------------------------------------
-- line 401 ----------------------------------------
        .              : m_data.array;
        .    }
        .    #endif
        .  };
        .  
        .  template<> struct gemv_selector<OnTheRight,ColMajor,true>
        .  {
        .    template<typename ProductType, typename Dest>
    6,160    static inline void run(const ProductType& prod, Dest& dest, const typename ProductType::Scalar& alpha)
        .    {
        .      typedef typename ProductType::Index Index;
        .      typedef typename ProductType::LhsScalar   LhsScalar;
        .      typedef typename ProductType::RhsScalar   RhsScalar;
        .      typedef typename ProductType::Scalar      ResScalar;
        .      typedef typename ProductType::RealScalar  RealScalar;
        .      typedef typename ProductType::ActualLhsType ActualLhsType;
        .      typedef typename ProductType::ActualRhsType ActualRhsType;
        .      typedef typename ProductType::LhsBlasTraits LhsBlasTraits;
        .      typedef typename ProductType::RhsBlasTraits RhsBlasTraits;
        .      typedef Map<Matrix<ResScalar,Dynamic,1>, Aligned> MappedDest;
        .  
    3,360      ActualLhsType actualLhs = LhsBlasTraits::extract(prod.lhs());
    8,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
    3,360      ActualRhsType actualRhs = RhsBlasTraits::extract(prod.rhs());
    8,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
        .  
    3,360      ResScalar actualAlpha = alpha * LhsBlasTraits::extractScalarFactor(prod.lhs())
    9,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
    8,400                                    * RhsBlasTraits::extractScalarFactor(prod.rhs());
    9,520  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
        .  
        .      enum {
        .        // FIXME find a way to allow an inner stride on the result if packet_traits<Scalar>::size==1
        .        // on, the other hand it is good for the cache to pack the vector anyways...
        .        EvalToDestAtCompileTime = Dest::InnerStrideAtCompileTime==1,
        .        ComplexByReal = (NumTraits<LhsScalar>::IsComplex) && (!NumTraits<RhsScalar>::IsComplex),
        .        MightCannotUseDest = (Dest::InnerStrideAtCompileTime!=1) || ComplexByReal
        .      };
        .  
        .      gemv_static_vector_if<ResScalar,Dest::SizeAtCompileTime,Dest::MaxSizeAtCompileTime,MightCannotUseDest> static_dest;
        .  
      560      bool alphaIsCompatible = (!ComplexByReal) || (numext::imag(actualAlpha)==RealScalar(0));
    1,120      bool evalToDest = EvalToDestAtCompileTime && alphaIsCompatible;
        .      
    2,800      RhsScalar compatibleAlpha = get_factor<ResScalar,RhsScalar>::run(actualAlpha);
   19,040  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
        .  
   24,640      ei_declare_aligned_stack_constructed_variable(ResScalar,actualDestPtr,dest.size(),
  166,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3920x)
        .                                                    evalToDest ? dest.data() : static_dest.data());
        .      
    2,240      if(!evalToDest)
        .      {
        .        #ifdef EIGEN_DENSE_STORAGE_CTOR_PLUGIN
        .        int size = dest.size();
        .        EIGEN_DENSE_STORAGE_CTOR_PLUGIN
        .        #endif
        .        if(!alphaIsCompatible)
        .        {
        .          MappedDest(actualDestPtr, dest.size()).setZero();
        .          compatibleAlpha = RhsScalar(1);
        .        }
        .        else
        .          MappedDest(actualDestPtr, dest.size()) = dest;
        .      }
        .  
    6,160      general_matrix_vector_product
2,056,320  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (560x)
   13,440        <Index,LhsScalar,ColMajor,LhsBlasTraits::NeedToConjugate,RhsScalar,RhsBlasTraits::NeedToConjugate>::run(
   76,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3360x)
        .          actualLhs.rows(), actualLhs.cols(),
        .          actualLhs.data(), actualLhs.outerStride(),
        .          actualRhs.data(), actualRhs.innerStride(),
        .          actualDestPtr, 1,
        .          compatibleAlpha);
        .  
    2,240      if (!evalToDest)
        .      {
        .        if(!alphaIsCompatible)
        .          dest += actualAlpha * MappedDest(actualDestPtr, dest.size());
        .        else
        .          dest = MappedDest(actualDestPtr, dest.size());
        .      }
    5,040    }
        .  };
        .  
        .  template<> struct gemv_selector<OnTheRight,RowMajor,true>
        .  {
        .    template<typename ProductType, typename Dest>
   53,130    static void run(const ProductType& prod, Dest& dest, const typename ProductType::Scalar& alpha)
        .    {
        .      typedef typename ProductType::LhsScalar LhsScalar;
        .      typedef typename ProductType::RhsScalar RhsScalar;
        .      typedef typename ProductType::Scalar    ResScalar;
        .      typedef typename ProductType::Index Index;
        .      typedef typename ProductType::ActualLhsType ActualLhsType;
        .      typedef typename ProductType::ActualRhsType ActualRhsType;
        .      typedef typename ProductType::_ActualRhsType _ActualRhsType;
        .      typedef typename ProductType::LhsBlasTraits LhsBlasTraits;
        .      typedef typename ProductType::RhsBlasTraits RhsBlasTraits;
        .  
   35,840      typename add_const<ActualLhsType>::type actualLhs = LhsBlasTraits::extract(prod.lhs());
  179,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
   35,840      typename add_const<ActualRhsType>::type actualRhs = RhsBlasTraits::extract(prod.rhs());
   21,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
        .  
   28,980      ResScalar actualAlpha = alpha * LhsBlasTraits::extractScalarFactor(prod.lhs())
   53,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
   72,450                                    * RhsBlasTraits::extractScalarFactor(prod.rhs());
   23,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
        .  
        .      enum {
        .        // FIXME find a way to allow an inner stride on the result if packet_traits<Scalar>::size==1
        .        // on, the other hand it is good for the cache to pack the vector anyways...
        .        DirectlyUseRhs = _ActualRhsType::InnerStrideAtCompileTime==1
        .      };
        .  
        .      gemv_static_vector_if<RhsScalar,_ActualRhsType::SizeAtCompileTime,_ActualRhsType::MaxSizeAtCompileTime,!DirectlyUseRhs> static_rhs;
        .  
  154,560      ei_declare_aligned_stack_constructed_variable(RhsScalar,actualRhsPtr,actualRhs.size(),
  415,800  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9800x)
        .          DirectlyUseRhs ? const_cast<RhsScalar*>(actualRhs.data()) : static_rhs.data());
        .  
        .      if(!DirectlyUseRhs)
        .      {
        .        #ifdef EIGEN_DENSE_STORAGE_CTOR_PLUGIN
        .        int size = actualRhs.size();
        .        EIGEN_DENSE_STORAGE_CTOR_PLUGIN
        .        #endif
        .        Map<typename _ActualRhsType::PlainObject>(actualRhsPtr, actualRhs.size()) = actualRhs;
        .      }
        .  
   57,960      general_matrix_vector_product
5,089,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
  115,920        <Index,LhsScalar,RowMajor,LhsBlasTraits::NeedToConjugate,RhsScalar,RhsBlasTraits::NeedToConjugate>::run(
  302,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8400x)
        .          actualLhs.rows(), actualLhs.cols(),
        .          actualLhs.data(), actualLhs.outerStride(),
        .          actualRhsPtr, 1,
        .          dest.data(), dest.innerStride(),
        .          actualAlpha);
   43,470    }
        .  };
        .  
        .  template<> struct gemv_selector<OnTheRight,ColMajor,false>
        .  {
        .    template<typename ProductType, typename Dest>
        .    static void run(const ProductType& prod, Dest& dest, const typename ProductType::Scalar& alpha)
        .    {
        .      typedef typename Dest::Index Index;
-- line 535 ----------------------------------------
-- line 563 ----------------------------------------
        .    *
        .    * \note If instead of the matrix product you want the coefficient-wise product, see Cwise::operator*().
        .    *
        .    * \sa lazyProduct(), operator*=(const MatrixBase&), Cwise::operator*()
        .    */
        .  template<typename Derived>
        .  template<typename OtherDerived>
        .  inline const typename ProductReturnType<Derived, OtherDerived>::Type
   61,740  MatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const
        .  {
        .    // A note regarding the function declaration: In MSVC, this function will sometimes
        .    // not be inlined since DenseStorage is an unwindable object for dynamic
        .    // matrices and product types are holding a member to store the result.
        .    // Thus it does not help tagging this function with EIGEN_STRONG_INLINE.
        .    enum {
        .      ProductIsValid =  Derived::ColsAtCompileTime==Dynamic
        .                     || OtherDerived::RowsAtCompileTime==Dynamic
-- line 579 ----------------------------------------
-- line 587 ----------------------------------------
        .    EIGEN_STATIC_ASSERT(ProductIsValid || !(AreVectors && SameSizes),
        .      INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS)
        .    EIGEN_STATIC_ASSERT(ProductIsValid || !(SameSizes && !AreVectors),
        .      INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION)
        .    EIGEN_STATIC_ASSERT(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
        .  #ifdef EIGEN_DEBUG_PRODUCT
        .    internal::product_type<Derived,OtherDerived>::debug();
        .  #endif
  114,660    return typename ProductReturnType<Derived,OtherDerived>::Type(derived(), other.derived());
1,090,740  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
   44,100  }
        .  
        .  /** \returns an expression of the matrix product of \c *this and \a other without implicit evaluation.
        .    *
        .    * The returned product will behave like any other expressions: the coefficients of the product will be
        .    * computed once at a time as requested. This might be useful in some extremely rare cases when only
        .    * a small and no coherent fraction of the result's coefficients have to be computed.
        .    *
        .    * \warning This version of the matrix product can be much much slower. So use it only if you know
-- line 604 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h
--------------------------------------------------------------------------------
     Ir 

-- line 19 ----------------------------------------
      .  EIGEN_MAKE_CWISE_BINARY_OP(operator-,internal::scalar_difference_op)
      .  
      .  /** \returns an expression of the sum of \c *this and \a other
      .    *
      .    * \note If you want to add a given scalar to all coefficients, see Cwise::operator+().
      .    *
      .    * \sa class CwiseBinaryOp, operator+=()
      .    */
387,034  EIGEN_MAKE_CWISE_BINARY_OP(operator+,internal::scalar_sum_op)
686,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8576x)
      .  
      .  /** \returns an expression of a custom coefficient-wise operator \a func of *this and \a other
      .    *
      .    * The template parameter \a CustomBinaryOp is the type of the functor
      .    * of the custom operator (see class CwiseBinaryOp for an example)
      .    *
      .    * Here is an example illustrating the use of custom functors:
      .    * \include class_CwiseBinaryOp.cpp
      .    * Output: \verbinclude class_CwiseBinaryOp.out
      .    *
      .    * \sa class CwiseBinaryOp, operator+(), operator-(), cwiseProduct()
      .    */
      .  template<typename CustomBinaryOp, typename OtherDerived>
      .  EIGEN_STRONG_INLINE const CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived>
230,392  binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp()) const
      .  {
403,186    return CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived>(derived(), other.derived(), func);
3,027,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10500x)
143,995  }
      .  

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/../plugins/BlockMethods.h
--------------------------------------------------------------------------------
       Ir 

-- line 48 ----------------------------------------
        .    * Output: \verbinclude MatrixBase_block_int_int_int_int.out
        .    *
        .    * \note Even though the returned expression has dynamic size, in the case
        .    * when it is applied to a fixed-size matrix, it inherits a fixed maximal size,
        .    * which means that evaluating it does not cause a dynamic memory allocation.
        .    *
        .    * \sa class Block, block(Index,Index)
        .    */
    7,920  inline Block<Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols)
        .  {
   12,320    return Block<Derived>(derived(), startRow, startCol, blockRows, blockCols);
  410,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1760x)
    2,640  }
        .  
        .  /** This is the const version of block(Index,Index,Index,Index). */
        .  inline const Block<const Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols) const
        .  {
        .    return Block<const Derived>(derived(), startRow, startCol, blockRows, blockCols);
        .  }
        .  
        .  
-- line 67 ----------------------------------------
-- line 148 ----------------------------------------
        .    * \param cRows the number of rows in the corner
        .    * \param cCols the number of columns in the corner
        .    *
        .    * Example: \include MatrixBase_topLeftCorner_int_int.cpp
        .    * Output: \verbinclude MatrixBase_topLeftCorner_int_int.out
        .    *
        .    * \sa class Block, block(Index,Index,Index,Index)
        .    */
      273  inline Block<Derived> topLeftCorner(Index cRows, Index cCols)
        .  {
      507    return Block<Derived>(derived(), 0, 0, cRows, cCols);
   18,174  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (78x)
      117  }
        .  
        .  /** This is the const version of topLeftCorner(Index, Index).*/
      231  inline const Block<const Derived> topLeftCorner(Index cRows, Index cCols) const
        .  {
      429    return Block<const Derived>(derived(), 0, 0, cRows, cCols);
   14,454  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (66x)
       99  }
        .  
        .  /** \returns an expression of a fixed-size top-left corner of *this.
        .    *
        .    * The template parameters CRows and CCols are the number of rows and columns in the corner.
        .    *
        .    * Example: \include MatrixBase_template_int_int_topLeftCorner.cpp
        .    * Output: \verbinclude MatrixBase_template_int_int_topLeftCorner.out
        .    *
-- line 173 ----------------------------------------
-- line 223 ----------------------------------------
        .    * \param cRows the number of rows in the corner
        .    * \param cCols the number of columns in the corner
        .    *
        .    * Example: \include MatrixBase_bottomRightCorner_int_int.cpp
        .    * Output: \verbinclude MatrixBase_bottomRightCorner_int_int.out
        .    *
        .    * \sa class Block, block(Index,Index,Index,Index)
        .    */
   47,196  inline Block<Derived> bottomRightCorner(Index cRows, Index cCols)
        .  {
  120,612    return Block<Derived>(derived(), rows() - cRows, cols() - cCols, cRows, cCols);
2,831,760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20976x)
   31,464  }
        .  
        .  /** This is the const version of bottomRightCorner(Index, Index).*/
        .  inline const Block<const Derived> bottomRightCorner(Index cRows, Index cCols) const
        .  {
        .    return Block<const Derived>(derived(), rows() - cRows, cols() - cCols, cRows, cCols);
        .  }
        .  
        .  /** \returns an expression of a fixed-size bottom-right corner of *this.
-- line 242 ----------------------------------------
-- line 372 ----------------------------------------
        .    *
        .    * \param n the number of rows in the block
        .    *
        .    * Example: \include MatrixBase_topRows_int.cpp
        .    * Output: \verbinclude MatrixBase_topRows_int.out
        .    *
        .    * \sa class Block, block(Index,Index,Index,Index)
        .    */
      231  inline RowsBlockXpr topRows(Index n)
        .  {
      528    return RowsBlockXpr(derived(), 0, 0, n, cols());
   16,599  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (99x)
      165  }
        .  
        .  /** This is the const version of topRows(Index).*/
        .  inline ConstRowsBlockXpr topRows(Index n) const
        .  {
        .    return ConstRowsBlockXpr(derived(), 0, 0, n, cols());
        .  }
        .  
        .  /** \returns a block consisting of the top rows of *this.
-- line 391 ----------------------------------------
-- line 724 ----------------------------------------
        .  }
        .  
        .  /** \returns an expression of the \a i-th column of *this. Note that the numbering starts at 0.
        .    *
        .    * Example: \include MatrixBase_col.cpp
        .    * Output: \verbinclude MatrixBase_col.out
        .    *
        .    * \sa row(), class Block */
  498,786  inline ColXpr col(Index i)
        .  {
  748,179    return ColXpr(derived(), i);
  257,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1120x)
  249,393  }
        .  
        .  /** This is the const version of col(). */
  397,416  inline ConstColXpr col(Index i) const
        .  {
  596,124    return ConstColXpr(derived(), i);
10,714,160  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (53840x)
  198,708  }
        .  
        .  /** \returns an expression of the \a i-th row of *this. Note that the numbering starts at 0.
        .    *
        .    * Example: \include MatrixBase_row.cpp
        .    * Output: \verbinclude MatrixBase_row.out
        .    *
        .    * \sa col(), class Block */
  209,178  inline RowXpr row(Index i)
        .  {
  313,767    return RowXpr(derived(), i);
3,258,500  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (13720x)
  104,589  }
        .  
        .  /** This is the const version of row(). */
        .  inline ConstRowXpr row(Index i) const
        .  {
        .    return ConstRowXpr(derived(), i);
        .  }
        .  
        .  /** \returns a dynamic-size expression of a segment (i.e. a vector block) in *this.
-- line 760 ----------------------------------------
-- line 776 ----------------------------------------
        .  inline SegmentReturnType segment(Index start, Index n)
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
        .    return SegmentReturnType(derived(), start, n);
        .  }
        .  
        .  
        .  /** This is the const version of segment(Index,Index).*/
  275,212  inline ConstSegmentReturnType segment(Index start, Index n) const
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
  353,844    return ConstSegmentReturnType(derived(), start, n);
27,678,464  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (78632x)
  117,948  }
        .  
        .  /** \returns a dynamic-size expression of the first coefficients of *this.
        .    *
        .    * \only_for_vectors
        .    *
        .    * \param n the number of coefficients in the segment
        .    *
        .    * Example: \include MatrixBase_start_int.cpp
-- line 796 ----------------------------------------
-- line 797 ----------------------------------------
        .    * Output: \verbinclude MatrixBase_start_int.out
        .    *
        .    * \note Even though the returned expression has dynamic size, in the case
        .    * when it is applied to a fixed-size vector, it inherits a fixed maximal size,
        .    * which means that evaluating it does not cause a dynamic memory allocation.
        .    *
        .    * \sa class Block, block(Index,Index)
        .    */
  100,938  inline SegmentReturnType head(Index n)
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
  168,230    return SegmentReturnType(derived(), 0, n);
9,252,650  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33646x)
   50,469  }
        .  
        .  /** This is the const version of head(Index).*/
        .  inline ConstSegmentReturnType head(Index n) const
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
        .    return ConstSegmentReturnType(derived(), 0, n);
        .  }
        .  
-- line 817 ----------------------------------------
-- line 825 ----------------------------------------
        .    * Output: \verbinclude MatrixBase_end_int.out
        .    *
        .    * \note Even though the returned expression has dynamic size, in the case
        .    * when it is applied to a fixed-size vector, it inherits a fixed maximal size,
        .    * which means that evaluating it does not cause a dynamic memory allocation.
        .    *
        .    * \sa class Block, block(Index,Index)
        .    */
  548,849  inline SegmentReturnType tail(Index n)
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
1,176,105    return SegmentReturnType(derived(), this->size() - n, n);
16,010,382  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (63033x)
  392,035  }
        .  
        .  /** This is the const version of tail(Index).*/
  164,136  inline ConstSegmentReturnType tail(Index n) const
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
  351,720    return ConstSegmentReturnType(derived(), this->size() - n, n);
15,686,712  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (70344x)
  117,240  }
        .  
        .  /** \returns a fixed-size expression of a segment (i.e. a vector block) in \c *this
        .    *
        .    * \only_for_vectors
        .    *
        .    * \tparam N the number of coefficients in the segment as specified at compile-time
        .    * \param start the index of the first element in the segment
        .    * \param n the number of coefficients in the segment as specified at compile-time
-- line 852 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/SolveTriangular.h
--------------------------------------------------------------------------------
     Ir 

-- line 49 ----------------------------------------
      .  template<typename Lhs, typename Rhs, int Side, int Mode>
      .  struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,1>
      .  {
      .    typedef typename Lhs::Scalar LhsScalar;
      .    typedef typename Rhs::Scalar RhsScalar;
      .    typedef blas_traits<Lhs> LhsProductTraits;
      .    typedef typename LhsProductTraits::ExtractType ActualLhsType;
      .    typedef Map<Matrix<RhsScalar,Dynamic,1>, Aligned> MappedRhs;
 45,906    static void run(const Lhs& lhs, Rhs& rhs)
      .    {
 26,232      ActualLhsType actualLhs = LhsProductTraits::extract(lhs);
 19,908  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2844x)
      .  
      .      // FIXME find a way to allow an inner stride if packet_traits<Scalar>::size==1
      .  
  6,558      bool useRhsDirectly = Rhs::InnerStrideAtCompileTime==1 || rhs.innerStride()==1;
      .  
288,552      ei_declare_aligned_stack_constructed_variable(RhsScalar,actualRhs,rhs.size(),
844,668  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (19908x)
      .                                                    (useRhsDirectly ? rhs.data() : 0));
      .                                                    
 26,232      if(!useRhsDirectly)
      .        MappedRhs(actualRhs,rhs.size()) = rhs;
      .  
 32,790      triangular_solve_vector<LhsScalar, RhsScalar, typename Lhs::Index, Side, Mode, LhsProductTraits::NeedToConjugate,
73,146,444  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2844x)
      .                              (int(Lhs::Flags) & RowMajorBit) ? RowMajor : ColMajor>
 78,696        ::run(actualLhs.cols(), actualLhs.data(), actualLhs.outerStride(), actualRhs);
264,492  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8532x)
      .  
 26,232      if(!useRhsDirectly)
      .        rhs = MappedRhs(actualRhs, rhs.size());
 39,348    }
      .  };
      .  
      .  // the rhs is a matrix
      .  template<typename Lhs, typename Rhs, int Side, int Mode>
      .  struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,Dynamic>
      .  {
      .    typedef typename Rhs::Scalar Scalar;
      .    typedef typename Rhs::Index Index;
      .    typedef blas_traits<Lhs> LhsProductTraits;
      .    typedef typename LhsProductTraits::DirectLinearAccessType ActualLhsType;
      .  
    264    static void run(const Lhs& lhs, Rhs& rhs)
      .    {
    132      typename internal::add_const_on_value_type<ActualLhsType>::type actualLhs = LhsProductTraits::extract(lhs);
    231  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .  
    132      const Index size = lhs.rows();
    627  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
    132      const Index othersize = Side==OnTheLeft? rhs.cols() : rhs.rows();
    627  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .  
      .      typedef internal::gemm_blocking_space<(Rhs::Flags&RowMajorBit) ? RowMajor : ColMajor,Scalar,Scalar,
      .                Rhs::MaxRowsAtCompileTime, Rhs::MaxColsAtCompileTime, Lhs::MaxRowsAtCompileTime,4> BlockingType;
      .  
    561      BlockingType blocking(rhs.rows(), rhs.cols(), size);
 14,429  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (132x)
      .  
    396      triangular_solve_matrix<Scalar,Index,Side,Mode,LhsProductTraits::NeedToConjugate,(int(Lhs::Flags) & RowMajorBit) ? RowMajor : ColMajor,
67,234,511  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .                                 (Rhs::Flags&RowMajorBit) ? RowMajor : ColMajor>
    660        ::run(size, othersize, &actualLhs.coeffRef(0,0), actualLhs.outerStride(), &rhs.coeffRef(0,0), rhs.outerStride(), blocking);
  7,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (132x)
    231    }
      .  };
      .  
      .  /***************************************************************************
      .  * meta-unrolling implementation
      .  ***************************************************************************/
      .  
      .  template<typename Lhs, typename Rhs, int Mode, int Index, int Size,
      .           bool Stop = Index==Size>
-- line 112 ----------------------------------------
-- line 166 ----------------------------------------
      .    *
      .    * \warning The parameter is only marked 'const' to make the C++ compiler accept a temporary expression here.
      .    * This function will const_cast it, so constness isn't honored here.
      .    *
      .    * See TriangularView:solve() for the details.
      .    */
      .  template<typename MatrixType, unsigned int Mode>
      .  template<int Side, typename OtherDerived>
 39,546  void TriangularView<MatrixType,Mode>::solveInPlace(const MatrixBase<OtherDerived>& _other) const
      .  {
 26,364    OtherDerived& other = _other.const_cast_derived();
    231  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
184,548    eigen_assert( cols() == rows() && ((Side==OnTheLeft && cols() == other.rows()) || (Side==OnTheRight && cols() == other.cols())) );
  3,498  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (132x)
      .    eigen_assert((!(Mode & ZeroDiag)) && bool(Mode & (Upper|Lower)));
      .  
      .    enum { copy = internal::traits<OtherDerived>::Flags & RowMajorBit  && OtherDerived::IsVectorAtCompileTime };
      .    typedef typename internal::conditional<copy,
      .      typename internal::plain_matrix_type_column_major<OtherDerived>::type, OtherDerived&>::type OtherCopy;
 13,182    OtherCopy otherCopy(other);
      .  
 26,364    internal::triangular_solver_selector<MatrixType, typename internal::remove_reference<OtherCopy>::type,
67,260,886  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
 26,364      Side, Mode>::run(nestedExpression(), otherCopy);
    231  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
      .  
      .    if (copy)
      .      other = otherCopy;
 32,955  }
      .  
      .  /** \returns the product of the inverse of \c *this with \a other, \a *this being triangular.
      .    *
      .    * This function computes the inverse-matrix matrix product inverse(\c *this) * \a other if
      .    * \a Side==OnTheLeft (the default), or the right-inverse-multiply  \a other * inverse(\c *this) if
      .    * \a Side==OnTheRight.
      .    *
      .    * The matrix \c *this must be triangular and invertible (i.e., all the coefficients of the
-- line 198 ----------------------------------------
-- line 208 ----------------------------------------
      .    * For users coming from BLAS, this function (and more specifically solveInPlace()) offer
      .    * all the operations supported by the \c *TRSV and \c *TRSM BLAS routines.
      .    *
      .    * \sa TriangularView::solveInPlace()
      .    */
      .  template<typename Derived, unsigned int Mode>
      .  template<int Side, typename Other>
      .  const internal::triangular_solve_retval<Side,TriangularView<Derived,Mode>,Other>
 32,790  TriangularView<Derived,Mode>::solve(const MatrixBase<Other>& other) const
      .  {
 72,138    return internal::triangular_solve_retval<Side,TriangularView,Other>(*this, other.derived());
404,826  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7428x)
 13,116  }
      .  
      .  namespace internal {
      .  
      .  
      .  template<int Side, typename TriangularType, typename Rhs>
      .  struct traits<triangular_solve_retval<Side, TriangularType, Rhs> >
      .  {
      .    typedef typename internal::plain_matrix_type_column_major<Rhs>::type ReturnType;
-- line 227 ----------------------------------------
-- line 229 ----------------------------------------
      .  
      .  template<int Side, typename TriangularType, typename Rhs> struct triangular_solve_retval
      .   : public ReturnByValue<triangular_solve_retval<Side, TriangularType, Rhs> >
      .  {
      .    typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;
      .    typedef ReturnByValue<triangular_solve_retval> Base;
      .    typedef typename Base::Index Index;
      .  
 39,348    triangular_solve_retval(const TriangularType& tri, const Rhs& rhs)
 59,022      : m_triangularMatrix(tri), m_rhs(rhs)
236,052  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2844x)
 19,674    {}
      .  
 65,580    inline Index rows() const { return m_rhs.rows(); }
 66,852  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3714x)
 65,580    inline Index cols() const { return m_rhs.cols(); }
 39,816  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2844x)
      .  
 39,348    template<typename Dest> inline void evalTo(Dest& dst) const
      .    {
 78,696      if(!(is_same<RhsNestedCleaned,Dest>::value && extract_data(dst) == extract_data(m_rhs)))
349,116  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7428x)
 22,284        dst = m_rhs;
5,259,024  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3714x)
 39,348      m_triangularMatrix.template solveInPlace<Side>(dst);
98,996,670  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3714x)
 32,790    }
      .  
      .    protected:
      .      const TriangularType& m_triangularMatrix;
      .      typename Rhs::Nested m_rhs;
      .  };
      .  
      .  } // namespace internal
      .  
-- line 257 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/Cellar/gcc/5.2.0/include/c++/5.2.0/bits/random.h
--------------------------------------------------------------------------------
       Ir 

-- line 130 ----------------------------------------
        .  
        .      // Special cases:
        .      // - for m == 2^n or m == 0, unsigned integer overflow is safe.
        .      // - a * (m - 1) + c fits in _Tp, there is no overflow.
        .      template<typename _Tp, _Tp __m, _Tp __a, _Tp __c, bool __s>
        .        struct _Mod<_Tp, __m, __a, __c, true, __s>
        .        {
        .  	static _Tp
    7,482  	__calc(_Tp __x)
        .  	{
    4,988  	  _Tp __res = __a * __x + __c;
        .  	  if (__m)
   13,706  	    __res %= __m;
    2,494  	  return __res;
    4,988  	}
        .        };
        .  
        .      template<typename _Tp, _Tp __m, _Tp __a = 1, _Tp __c = 0>
        .        inline _Tp
    9,976        __mod(_Tp __x)
   12,470        { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
   11,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1248x)
        .  
        .      /* Determine whether number is a power of 2.  */
        .      template<typename _Tp>
        .        inline bool
        .        _Power_of_2(_Tp __x)
        .        {
        .  	return ((__x - 1) & __x) == 0;
        .        };
-- line 158 ----------------------------------------
-- line 163 ----------------------------------------
        .       */
        .      template<typename _Engine, typename _DInputType>
        .        struct _Adaptor
        .        {
        .  	static_assert(std::is_floating_point<_DInputType>::value,
        .  		      "template argument not a floating point type");
        .  
        .        public:
  800,420  	_Adaptor(_Engine& __g)
1,200,630  	: _M_g(__g) { }
        .  
        .  	_DInputType
        .  	min() const
        .  	{ return _DInputType(0); }
        .  
        .  	_DInputType
        .  	max() const
        .  	{ return _DInputType(1); }
        .  
        .  	/*
        .  	 * Converts a value generated by the adapted random number generator
        .  	 * into a value in the input domain for the dependent random number
        .  	 * distribution.
        .  	 */
        .  	_DInputType
  800,544  	operator()()
        .  	{
        .  	  return std::generate_canonical<_DInputType,
        .  	                            std::numeric_limits<_DInputType>::digits,
1,000,680  	                            _Engine>(_M_g);
71,708,830  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200136x)
  600,408  	}
        .  
        .        private:
        .  	_Engine& _M_g;
        .        };
        .  
        .    _GLIBCXX_END_NAMESPACE_VERSION
        .    } // namespace __detail
        .  
-- line 201 ----------------------------------------
-- line 507 ----------------------------------------
        .         *        engine seeded from the seed sequence @p __q.
        .         *
        .         * @param __q the seed sequence.
        .         */
        .        template<typename _Sseq, typename = typename
        .          std::enable_if<!std::is_same<_Sseq, mersenne_twister_engine>::value>
        .  	       ::type>
        .          explicit
       10          mersenne_twister_engine(_Sseq& __q)
       20          { seed(__q); }
   93,528  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
        .  
        .        void
        .        seed(result_type __sd = default_seed);
        .  
        .        template<typename _Sseq>
        .  	typename std::enable_if<std::is_class<_Sseq>::value>::type
        .          seed(_Sseq& __q);
        .  
        .        /**
        .         * @brief Gets the smallest possible value in the output range.
        .         */
        .        static constexpr result_type
1,200,816        min()
1,801,224        { return 0; };
        .  
        .        /**
        .         * @brief Gets the largest possible value in the output range.
        .         */
        .        static constexpr result_type
  400,272        max()
  600,408        { return __detail::_Shift<_UIntType, __w>::__value - 1; }
        .  
        .        /**
        .         * @brief Discard a sequence of random numbers.
        .         */
        .        void
        .        discard(unsigned long long __z);
        .  
        .        result_type
-- line 545 ----------------------------------------
-- line 1872 ----------------------------------------
        .        /** The type of the range of the distribution. */
        .        typedef _RealType result_type;
        .        /** Parameter type. */
        .        struct param_type
        .        {
        .  	typedef uniform_real_distribution<_RealType> distribution_type;
        .  
        .  	explicit
        5  	param_type(_RealType __a = _RealType(0),
        .  		   _RealType __b = _RealType(1))
        6  	: _M_a(__a), _M_b(__b)
        .  	{
        .  	  _GLIBCXX_DEBUG_ASSERT(_M_a <= _M_b);
        3  	}
        .  
        .  	result_type
1,200,000  	a() const
2,400,000  	{ return _M_a; }
        .  
        .  	result_type
  600,000  	b() const
1,200,000  	{ return _M_b; }
        .  
        .  	friend bool
        .  	operator==(const param_type& __p1, const param_type& __p2)
        .  	{ return __p1._M_a == __p2._M_a && __p1._M_b == __p2._M_b; }
        .  
        .        private:
        .  	_RealType _M_a;
        .  	_RealType _M_b;
-- line 1901 ----------------------------------------
-- line 1904 ----------------------------------------
        .      public:
        .        /**
        .         * @brief Constructs a uniform_real_distribution object.
        .         *
        .         * @param __a [IN]  The lower bound of the distribution.
        .         * @param __b [IN]  The upper bound of the distribution.
        .         */
        .        explicit
        6        uniform_real_distribution(_RealType __a = _RealType(0),
        .  				_RealType __b = _RealType(1))
        7        : _M_param(__a, __b)
       15  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        3        { }
        .  
        .        explicit
        .        uniform_real_distribution(const param_type& __p)
        .        : _M_param(__p)
        .        { }
        .  
        .        /**
        .         * @brief Resets the distribution state.
-- line 1923 ----------------------------------------
-- line 1964 ----------------------------------------
        .        max() const
        .        { return this->b(); }
        .  
        .        /**
        .         * @brief Generating functions.
        .         */
        .        template<typename _UniformRandomNumberGenerator>
        .  	result_type
1,000,000  	operator()(_UniformRandomNumberGenerator& __urng)
2,000,000          { return this->operator()(__urng, _M_param); }
91,448,341  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200000x)
        .  
        .        template<typename _UniformRandomNumberGenerator>
        .  	result_type
1,600,000  	operator()(_UniformRandomNumberGenerator& __urng,
        .  		   const param_type& __p)
        .  	{
        .  	  __detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1,000,000  	    __aurng(__urng);
2,200,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (200000x)
5,000,000  	  return (__aurng() * (__p.b() - __p.a())) + __p.a();
80,248,341  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (800000x)
1,200,000  	}
        .  
        .        template<typename _ForwardIterator,
        .  	       typename _UniformRandomNumberGenerator>
        .  	void
        .  	__generate(_ForwardIterator __f, _ForwardIterator __t,
        .  		   _UniformRandomNumberGenerator& __urng)
        .  	{ this->__generate(__f, __t, __urng, _M_param); }
        .  
-- line 1991 ----------------------------------------
-- line 2090 ----------------------------------------
        .        /** The type of the range of the distribution. */
        .        typedef _RealType result_type;
        .        /** Parameter type. */
        .        struct param_type
        .        {
        .  	typedef normal_distribution<_RealType> distribution_type;
        .  
        .  	explicit
        5  	param_type(_RealType __mean = _RealType(0),
        .  		   _RealType __stddev = _RealType(1))
        6  	: _M_mean(__mean), _M_stddev(__stddev)
        .  	{
        .  	  _GLIBCXX_DEBUG_ASSERT(_M_stddev > _RealType(0));
        3  	}
        .  
        .  	_RealType
      315  	mean() const
      630  	{ return _M_mean; }
        .  
        .  	_RealType
      315  	stddev() const
      630  	{ return _M_stddev; }
        .  
        .  	friend bool
        .  	operator==(const param_type& __p1, const param_type& __p2)
        .  	{ return (__p1._M_mean == __p2._M_mean
        .  		  && __p1._M_stddev == __p2._M_stddev); }
        .  
        .        private:
        .  	_RealType _M_mean;
-- line 2119 ----------------------------------------
-- line 2121 ----------------------------------------
        .        };
        .  
        .      public:
        .        /**
        .         * Constructs a normal distribution with parameters @f$mean@f$ and
        .         * standard deviation.
        .         */
        .        explicit
        6        normal_distribution(result_type __mean = result_type(0),
        .  			  result_type __stddev = result_type(1))
        9        : _M_param(__mean, __stddev), _M_saved_available(false)
       15  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
        3        { }
        .  
        .        explicit
        .        normal_distribution(const param_type& __p)
        .        : _M_param(__p), _M_saved_available(false)
        .        { }
        .  
        .        /**
        .         * @brief Resets the distribution state.
-- line 2140 ----------------------------------------
-- line 2186 ----------------------------------------
        .        max() const
        .        { return std::numeric_limits<result_type>::max(); }
        .  
        .        /**
        .         * @brief Generating functions.
        .         */
        .        template<typename _UniformRandomNumberGenerator>
        .  	result_type
      525  	operator()(_UniformRandomNumberGenerator& __urng)
    1,050  	{ return this->operator()(__urng, _M_param); }
   75,342  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (105x)
        .  
        .        template<typename _UniformRandomNumberGenerator>
        .  	result_type
        .  	operator()(_UniformRandomNumberGenerator& __urng,
        .  		   const param_type& __p);
        .  
        .        template<typename _ForwardIterator,
        .  	       typename _UniformRandomNumberGenerator>
-- line 2203 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: ../src/GaussianProcessSupport.cpp
--------------------------------------------------------------------------------
     Ir 

-- line 2 ----------------------------------------
      .  #include <iostream>
      .  #include <cassert>
      .  #include <fstream>
      .  
      .  //--------------------------------------------------------------------------------
      .  void GaussianProcessSupport::initialize ( const int dim, const int number_processes_input,
      .    double &delta_input, std::vector<double> const &update_at_evaluations_input,
      .    int update_interval_length_input ) 
     10  {
      2    nb_values = 0;
      3    delta = &delta_input;
      3    number_processes = number_processes_input;
      3    update_interval_length = update_interval_length_input;
     44    for (size_t i = 0; i < update_at_evaluations_input.size(); i++ )
     70  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
     56      update_at_evaluations.push_back( update_at_evaluations_input.at( i ) );
  4,950  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
      8    GaussianProcess gp ( dim );
  5,389  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
  9,849  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcess.cpp:GaussianProcess::GaussianProcess(int) (1x)
      5    gaussian_process_nodes.resize( 0 );
     57  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
      8    values.resize( number_processes );
  1,545  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
      8    noise.resize( number_processes );
  1,545  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
     35    for ( int i = 0; i < number_processes; i++) {
     30      gaussian_processes.push_back ( gp );
430,825  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
      .    }
      7    rescaled_node.resize( dim );
  1,413  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
      2    return;
      4  }
      .  //--------------------------------------------------------------------------------
      .  
      .  //--------------------------------------------------------------------------------
      .  void GaussianProcessSupport::update_data ( BlackboxData &evaluations ) 
    306  {
  1,785    for (int j = 0; j < number_processes; ++j) {
  7,335      for (size_t i = nb_values; i < evaluations.values[j].size(); ++i) {
 13,195  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (910x)
  4,600        values[j].push_back( evaluations.values[j].at(i) );    
 99,420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (800x)
  4,600        noise[j].push_back( evaluations.noise[j].at(i) );    
 96,352  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (800x)
      .      }
      .    }
    510    nb_values = evaluations.values[0].size( );
  1,479  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (102x)
      .  
      .    //assert ( nb_values == evaluations.nodes.size() );
      .    //assert ( nb_values == values[0].size() );
      .    //assert ( nb_values == noise[0].size() );
      .  
     51    return;
    204  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  void GaussianProcessSupport::update_gaussian_processes ( BlackboxData &evaluations ) 
    408  {
    510    if ( nb_values >= next_update && update_interval_length > 0 ) {
      .      do_parameter_estimation = true;
      .      next_update += update_interval_length;
      .    } 
    408    if ( update_at_evaluations.size( ) > 0 ) {
    714  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (51x)
    612      if ( nb_values >= update_at_evaluations[0] ) {
    612  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (51x)
      .        do_parameter_estimation = true;
      .        update_at_evaluations.erase( update_at_evaluations.begin() );
      .      }
      .    }
      .  
    204    if ( do_parameter_estimation ) {
      4      gaussian_process_active_index.clear( );
     80  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
      4      gaussian_process_nodes.clear( );
     84  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1x)
      5      delta_tmp = (*delta);// * 10e0;
      .  //    if (delta_tmp < 0.1) delta_tmp = 0.1;
      4      best_index = evaluations.best_index;
     78      for ( int i = 0; i < nb_values; ++i ) {
    152        if ( diff_norm ( evaluations.nodes[ i ],
    120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
 11,791  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::diff_norm(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) (8x)
    104                         evaluations.nodes[ best_index ] ) <= 3e0 * (delta_tmp) ) {
    120  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
     48          gaussian_process_active_index.push_back ( i );
  6,421  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
    200          rescale ( 1e0/(delta_tmp), evaluations.nodes[i], evaluations.nodes[best_index],
    240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (16x)
     32                    rescaled_node);
 12,560  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::rescale(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (8x)
      .  //        gaussian_process_nodes.push_back( evaluations.nodes[ i ] );
     56          gaussian_process_nodes.push_back( rescaled_node );
 18,916  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8x)
      .        }
      .      }
      .  /*
      .      std::cout << "number nodes = " << gaussian_process_nodes.size() << std::endl;
      .      std::cout << "number nodes = " << evaluations.nodes.size() << std::endl;
      .  */
      .  
     10      gaussian_process_values.resize( gaussian_process_active_index.size( ) );
    441  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
     10      gaussian_process_noise.resize( gaussian_process_active_index.size( ) );
    441  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2x)
      .  
     35      for ( int j = 0; j < number_processes; j++ ) {
    445        for ( size_t i = 0; i < gaussian_process_active_index.size(); ++i ) {
    630  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (45x)
  1,080          gaussian_process_values( i ) = values[ j ].at( gaussian_process_active_index[i] );
  9,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
  1,080          gaussian_process_noise( i )  = noise[ j ].at( gaussian_process_active_index[i] );
  9,360  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
      .        }
     65        gaussian_processes[j].estimate_hyper_parameters( gaussian_process_nodes,
     60  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
      .                                                         gaussian_process_values,
     20                                                         gaussian_process_noise );
182,114,374  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcess.cpp:GaussianProcess::estimate_hyper_parameters(std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) (5x)
     65        gaussian_processes[j].build( gaussian_process_nodes,
     60  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5x)
      .                                     gaussian_process_values,
     25                                     gaussian_process_noise );
1,141,591  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcess.cpp:GaussianProcess::build(std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) (5x)
      .      }
      .    } else {
  1,166      for ( size_t i = last_included; i < values[0].size(); ++i ) {
  2,378  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (164x)
    256        gaussian_process_active_index.push_back ( i );
 10,249  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (32x)
    768        rescale ( 1e0/(delta_tmp), evaluations.nodes[i], evaluations.nodes[best_index],
    960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (64x)
    128                  rescaled_node);
 50,240  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::rescale(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (32x)
  1,120        for ( int j = 0; j < number_processes; ++j ) {
      .  //        gaussian_processes[j].update( evaluations.nodes[ i ],
  1,600          gaussian_processes[j].update( rescaled_node,
  1,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
  2,080                                        values[ j ].at( i ),
 12,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (320x)
  3,200                                        noise[ j ].at( i ) );
98,071,051  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcess.cpp:GaussianProcess::update(std::vector<double, std::allocator<double> > const&, double&, double&) (160x)
 12,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (320x)
      .        }
      .      }
      .  
      .    }
      .  
    357    last_included = evaluations.nodes.size();
    867  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (51x)
     51    return;
    306  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  void GaussianProcessSupport::smooth_data ( BlackboxData &evaluations ) 
    357  {  
      .  
      .  
    255    update_data( evaluations );
229,837  => ../src/GaussianProcessSupport.cpp:GaussianProcessSupport::update_data(BlackboxData&) (51x)
      .  
    255    update_gaussian_processes( evaluations );
281,506,336  => ../src/GaussianProcessSupport.cpp:GaussianProcessSupport::update_gaussian_processes(BlackboxData&) (51x)
      .  
  9,029    for ( size_t i = 0; i < evaluations.surrogate_nodes_index.size( ); ++i ) {
 12,712  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (908x)
 18,854      rescale ( 1e0/(delta_tmp), evaluations.nodes[evaluations.surrogate_nodes_index[i]], 
 23,139  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1714x)
 11,141                evaluations.nodes[best_index], rescaled_node );
 12,855  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (857x)
1,345,490  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/VectorOperations.cpp:VectorOperations::rescale(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> >&) (857x)
 29,995      for ( int j = 0; j < number_processes; ++j ) {
 77,130        gaussian_processes[j].evaluate( rescaled_node, mean, variance );
 51,420  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4285x)
1,029,190,686  => /Users/Florian/home/sandbox/surrogate_models_cpp/build/../src/GaussianProcess.cpp:GaussianProcess::evaluate(std::vector<double, std::allocator<double> > const&, double&, double&) (4285x)
      .  //    gaussian_processes[j].evaluate( 
      .  //        evaluations.nodes[ evaluations.surrogate_nodes_index[ i ] ],
      .  //        mean, variance );
      .  //      std::cout << i << ", "<< j <<" -- variance " << variance << std::endl;
 38,565        assert ( variance >= 0e0 );
      .  
 51,420        weight = exp( - 1e0*sqrt(variance) );
192,825  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8570x)
      .  /*      
      .        tmpdbl = 2e0*sqrt(variance);
      .        if (tmpdbl  >noise[j].at(evaluations.surrogate_nodes_index[i])) weight = 1e0;
      .        else
      .        weight = (noise[j].at(evaluations.surrogate_nodes_index[i]) - tmpdbl )/
      .                 noise[j].at(evaluations.surrogate_nodes_index[i]);
      .        
      .  */
      .  //std::cout << " weight = " << weight << std::endl;
      .  
 81,415        evaluations.values[ j ].at( evaluations.surrogate_nodes_index [ i ] ) = 
372,795  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12855x)
 29,995          weight * mean  + 
111,410          (1e0-weight) * ( values[ j ].at( evaluations.surrogate_nodes_index [ i ] ) );
372,795  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12855x)
 81,415        evaluations.noise[ j ].at( evaluations.surrogate_nodes_index [ i ] ) = 
372,795  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12855x)
 59,990          weight * 2e0 * sqrt (variance)  + 
 12,855  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4285x)
111,410          (1e0-weight) * ( noise[ j ].at( evaluations.surrogate_nodes_index [ i ] ) );
372,795  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (12855x)
      .  
      .  
      .      }
      .    }
      .  
    102    do_parameter_estimation = false;
      .  
      .  
     51    return;
    255  }
      .  //--------------------------------------------------------------------------------
      .  
      .  
      .  //--------------------------------------------------------------------------------
      .  double GaussianProcessSupport::evaluate_objective ( BlackboxData const &evaluations) 
      .  {
      .    rescale ( 1e0/(delta_tmp), evaluations.nodes[evaluations.best_index], 
      .              evaluations.nodes[best_index], rescaled_node );
      .    gaussian_processes[0].evaluate( rescaled_node, mean, variance );
      .    return mean;
     19  }
152,426  => ../src/GaussianProcessSupport.cpp:__static_initialization_and_destruction_0(int, int) (1x)
      .  //--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/ProductBase.h
--------------------------------------------------------------------------------
     Ir 

-- line 55 ----------------------------------------
      .    typedef typename Base::_RhsNested _RhsNested; \
      .    typedef typename Base::RhsBlasTraits RhsBlasTraits; \
      .    typedef typename Base::ActualRhsType ActualRhsType; \
      .    typedef typename Base::_ActualRhsType _ActualRhsType; \
      .    using Base::m_lhs; \
      .    using Base::m_rhs;
      .  
      .  template<typename Derived, typename Lhs, typename Rhs>
134,750  class ProductBase : public MatrixBase<Derived>
162,925  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
      .  {
      .    public:
      .      typedef MatrixBase<Derived> Base;
      .      EIGEN_DENSE_PUBLIC_INTERFACE(ProductBase)
      .      
      .      typedef typename Lhs::Nested LhsNested;
      .      typedef typename internal::remove_all<LhsNested>::type _LhsNested;
      .      typedef internal::blas_traits<_LhsNested> LhsBlasTraits;
-- line 71 ----------------------------------------
-- line 82 ----------------------------------------
      .  
      .      // Diagonal of a product: no need to evaluate the arguments because they are going to be evaluated only once
      .      typedef CoeffBasedProduct<LhsNested, RhsNested, 0> FullyLazyCoeffBaseProductType;
      .  
      .    public:
      .  
      .      typedef typename Base::PlainObject PlainObject;
      .  
 85,750      ProductBase(const Lhs& a_lhs, const Rhs& a_rhs)
315,000        : m_lhs(a_lhs), m_rhs(a_rhs)
893,515  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6860x)
      .      {
196,000        eigen_assert(a_lhs.cols() == a_rhs.rows()
 65,170  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
      .          && "invalid matrix product"
      .          && "if you wanted a coeff-wise or a dot product use the respective explicit functions");
 61,250      }
      .  
      .      inline Index rows() const { return m_lhs.rows(); }
      .      inline Index cols() const { return m_rhs.cols(); }
      .  
      .      template<typename Dest>
102,410      inline void evalTo(Dest& dst) const { dst.setZero(); scaleAndAddTo(dst,Scalar(1)); }
55,560,484  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
      .  
      .      template<typename Dest>
      .      inline void addTo(Dest& dst) const { scaleAndAddTo(dst,Scalar(1)); }
      .  
      .      template<typename Dest>
      .      inline void subTo(Dest& dst) const { scaleAndAddTo(dst,Scalar(-1)); }
      .  
      .      template<typename Dest>
 97,020      inline void scaleAndAddTo(Dest& dst, const Scalar& alpha) const { derived().scaleAndAddTo(dst,alpha); }
51,372,741  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3430x)
      .  
541,582      const _LhsNested& lhs() const { return m_lhs; }
630,539      const _RhsNested& rhs() const { return m_rhs; }
      .  
      .      // Implicit conversion to the nested type (trigger the evaluation of the product)
  9,800      operator const PlainObject& () const
      .      {
 29,960        m_result.resize(m_lhs.rows(), m_rhs.cols());
710,605  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4200x)
 15,680        derived().evalTo(m_result);
8,909,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
  3,920        return m_result;
  7,840      }
      .  
      .      const Diagonal<const FullyLazyCoeffBaseProductType,0> diagonal() const
      .      { return FullyLazyCoeffBaseProductType(m_lhs, m_rhs); }
      .  
      .      template<int Index>
      .      const Diagonal<FullyLazyCoeffBaseProductType,Index> diagonal() const
      .      { return FullyLazyCoeffBaseProductType(m_lhs, m_rhs); }
      .  
-- line 130 ----------------------------------------
-- line 262 ----------------------------------------
      .      const NestedProduct& m_prod;
      .      Scalar m_alpha;
      .  };
      .  
      .  /** \internal
      .    * Overloaded to perform an efficient C = (A*B).lazy() */
      .  template<typename Derived>
      .  template<typename ProductDerived, typename Lhs, typename Rhs>
 20,580  Derived& MatrixBase<Derived>::lazyAssign(const ProductBase<ProductDerived, Lhs,Rhs>& other)
      .  {
 34,300    other.derived().evalTo(derived());
55,618,794  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5145x)
 10,290    return derived();
 12,005  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1715x)
 13,720  }
      .  
      .  } // end namespace Eigen
      .  
      .  #endif // EIGEN_PRODUCTBASE_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/GenericPacketMath.h
--------------------------------------------------------------------------------
        Ir 

-- line 87 ----------------------------------------
         .      HasMax    = 0,
         .      HasConj   = 0,
         .      HasSetLinear = 0
         .    };
         .  };
         .  
         .  /** \internal \returns a + b (coeff-wise) */
         .  template<typename Packet> inline Packet
    73,440  padd(const Packet& a,
   165,240          const Packet& b) { return a+b; }
         .  
         .  /** \internal \returns a - b (coeff-wise) */
         .  template<typename Packet> inline Packet
         .  psub(const Packet& a,
         .          const Packet& b) { return a-b; }
         .  
         .  /** \internal \returns -a (coeff-wise) */
         .  template<typename Packet> inline Packet
-- line 104 ----------------------------------------
-- line 105 ----------------------------------------
         .  pnegate(const Packet& a) { return -a; }
         .  
         .  /** \internal \returns conj(a) (coeff-wise) */
         .  template<typename Packet> inline Packet
         .  pconj(const Packet& a) { return numext::conj(a); }
         .  
         .  /** \internal \returns a * b (coeff-wise) */
         .  template<typename Packet> inline Packet
   501,912  pmul(const Packet& a,
 1,129,302          const Packet& b) { return a*b; }
         .  
         .  /** \internal \returns a / b (coeff-wise) */
         .  template<typename Packet> inline Packet
         .  pdiv(const Packet& a,
         .          const Packet& b) { return a/b; }
         .  
         .  /** \internal \returns the min of \a a and \a b  (coeff-wise) */
         .  template<typename Packet> inline Packet
-- line 122 ----------------------------------------
-- line 271 ----------------------------------------
         .  template<typename Packet>
         .  inline void pstore1(typename unpacket_traits<Packet>::type* to, const typename unpacket_traits<Packet>::type& a)
         .  {
         .    pstore(to, pset1<Packet>(a));
         .  }
         .  
         .  /** \internal \returns a * b + c (coeff-wise) */
         .  template<typename Packet> inline Packet
 7,937,550  pmadd(const Packet&  a,
         .           const Packet&  b,
         .           const Packet&  c)
17,204,745  { return padd(pmul(a, b),c); }
    62,720  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (4480x)
         .  
         .  /** \internal \returns a packet version of \a *from.
         .    * If LoadMode equals #Aligned, \a from must be 16 bytes aligned */
         .  template<typename Packet, int LoadMode>
12,731,256  inline Packet ploadt(const typename unpacket_traits<Packet>::type* from)
         .  {
         .    if(LoadMode == Aligned)
 5,043,096      return pload<Packet>(from);
18,491,352  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1681032x)
         .    else
 4,505,346      return ploadu<Packet>(from);
36,042,768  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1501782x)
 6,365,628  }
         .  
         .  /** \internal copy the packet \a from to \a *to.
         .    * If StoreMode equals #Aligned, \a to must be 16 bytes aligned */
         .  template<typename Scalar, typename Packet, int LoadMode>
 8,158,980  inline void pstoret(Scalar* to, const Packet& from)
         .  {
         .    if(LoadMode == Aligned)
 7,946,550      pstore(to, from);
25,428,960  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1589310x)
         .    else
   212,430      pstoreu(to, from);
 1,444,524  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (42486x)
 4,895,388  }
         .  
         .  /** \internal default implementation of palign() allowing partial specialization */
         .  template<int Offset,typename PacketType>
         .  struct palign_impl
         .  {
         .    // by default data are aligned, so there is nothing to be done :)
         .    static inline void run(PacketType&, const PacketType&) {}
         .  };
-- line 312 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Diagonal.h
--------------------------------------------------------------------------------
     Ir 

-- line 56 ----------------------------------------
      .      CoeffReadCost = _MatrixTypeNested::CoeffReadCost,
      .      MatrixTypeOuterStride = outer_stride_at_compile_time<MatrixType>::ret,
      .      InnerStrideAtCompileTime = MatrixTypeOuterStride == Dynamic ? Dynamic : MatrixTypeOuterStride+1,
      .      OuterStrideAtCompileTime = 0
      .    };
      .  };
      .  }
      .  
  9,424  template<typename MatrixType, int _DiagIndex> class Diagonal
  3,968  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
      .     : public internal::dense_xpr_base< Diagonal<MatrixType,_DiagIndex> >::type
      .  {
      .    public:
      .  
      .      enum { DiagIndex = _DiagIndex };
      .      typedef typename internal::dense_xpr_base<Diagonal>::type Base;
      .      EIGEN_DENSE_PUBLIC_INTERFACE(Diagonal)
      .  
 25,116      inline Diagonal(MatrixType& matrix, Index a_index = DiagIndex) : m_matrix(matrix), m_index(a_index) {}
 90,896  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2392x)
      .  
      .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Diagonal)
      .  
 54,144      inline Index rows() const
270,720      { return m_index.value()<0 ? (std::min<Index>)(m_matrix.cols(),m_matrix.rows()+m_index.value()) : (std::min<Index>)(m_matrix.rows(),m_matrix.cols()-m_index.value()); }
419,616  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33840x)
      .  
 40,608      inline Index cols() const { return 1; }
      .  
      .      inline Index innerStride() const
      .      {
      .        return m_matrix.outerStride() + 1;
      .      }
      .  
      .      inline Index outerStride() const
      .      {
-- line 88 ----------------------------------------
-- line 104 ----------------------------------------
      .        return m_matrix.const_cast_derived().coeffRef(row+rowOffset(), row+colOffset());
      .      }
      .  
      .      inline const Scalar& coeffRef(Index row, Index) const
      .      {
      .        return m_matrix.const_cast_derived().coeffRef(row+rowOffset(), row+colOffset());
      .      }
      .  
 24,304      inline CoeffReturnType coeff(Index row, Index) const
      .      {
 69,440        return m_matrix.coeff(row+rowOffset(), row+colOffset());
288,176  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (10416x)
 17,360      }
      .  
      .      inline Scalar& coeffRef(Index idx)
      .      {
      .        EIGEN_STATIC_ASSERT_LVALUE(MatrixType)
      .        return m_matrix.const_cast_derived().coeffRef(idx+rowOffset(), idx+colOffset());
      .      }
      .  
      .      inline const Scalar& coeffRef(Index idx) const
      .      {
      .        return m_matrix.const_cast_derived().coeffRef(idx+rowOffset(), idx+colOffset());
      .      }
      .  
 29,400      inline CoeffReturnType coeff(Index idx) const
      .      {
 98,000        return m_matrix.coeff(idx+rowOffset(), idx+colOffset());
406,700  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (14700x)
 24,500      }
      .  
      .      const typename internal::remove_all<typename MatrixType::Nested>::type& 
      .      nestedExpression() const 
      .      {
      .        return m_matrix;
      .      }
      .  
      .      int index() const
-- line 139 ----------------------------------------
-- line 143 ----------------------------------------
      .  
      .    protected:
      .      typename MatrixType::Nested m_matrix;
      .      const internal::variable_if_dynamicindex<Index, DiagIndex> m_index;
      .  
      .    private:
      .      // some compilers may fail to optimize std::max etc in case of compile-time constants...
      .      EIGEN_STRONG_INLINE Index absDiagIndex() const { return m_index.value()>0 ? m_index.value() : -m_index.value(); }
 33,488      EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value()>0 ? 0 : -m_index.value(); }
 83,720      EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value()>0 ? m_index.value() : 0; }
 50,232  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8372x)
      .      // triger a compile time error is someone try to call packet
      .      template<int LoadMode> typename MatrixType::PacketReturnType packet(Index) const;
      .      template<int LoadMode> typename MatrixType::PacketReturnType packet(Index,Index) const;
      .  };
      .  
      .  /** \returns an expression of the main diagonal of the matrix \c *this
      .    *
      .    * \c *this is not required to be square.
-- line 160 ----------------------------------------
-- line 168 ----------------------------------------
      .  MatrixBase<Derived>::diagonal()
      .  {
      .    return derived();
      .  }
      .  
      .  /** This is the const version of diagonal(). */
      .  template<typename Derived>
      .  inline typename MatrixBase<Derived>::ConstDiagonalReturnType
  5,980  MatrixBase<Derived>::diagonal() const
      .  {
 10,764    return ConstDiagonalReturnType(derived());
125,580  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2392x)
  3,588  }
      .  
      .  /** \returns an expression of the \a DiagIndex-th sub or super diagonal of the matrix \c *this
      .    *
      .    * \c *this is not required to be square.
      .    *
      .    * The template parameter \a DiagIndex represent a super diagonal if \a DiagIndex > 0
      .    * and a sub diagonal otherwise. \a DiagIndex == 0 is equivalent to the main diagonal.
      .    *
-- line 187 ----------------------------------------

  8,372  <counts for unidentified lines in /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Diagonal.h>

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/Redux.h
--------------------------------------------------------------------------------
     Ir 

-- line 165 ----------------------------------------
      .  >
      .  struct redux_impl;
      .  
      .  template<typename Func, typename Derived>
      .  struct redux_impl<Func, Derived, DefaultTraversal, NoUnrolling>
      .  {
      .    typedef typename Derived::Scalar Scalar;
      .    typedef typename Derived::Index Index;
  2,480    static EIGEN_STRONG_INLINE Scalar run(const Derived& mat, const Func& func)
      .    {
  9,920      eigen_assert(mat.rows()>0 && mat.cols()>0 && "you are using an empty matrix");
 68,448  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (992x)
      .      Scalar res;
  3,472      res = mat.coeffByOuterInner(0, 0);
133,920  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
 30,752      for(Index i = 1; i < mat.innerSize(); ++i)
708,288  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3472x)
 44,640        res = func(res, mat.coeffByOuterInner(0, i));
896,458  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (5952x)
  3,968      for(Index i = 1; i < mat.outerSize(); ++i)
  3,472  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (496x)
      .        for(Index j = 0; j < mat.innerSize(); ++j)
      .          res = func(res, mat.coeffByOuterInner(i, j));
    992      return res;
  1,488    }
      .  };
      .  
      .  template<typename Func, typename Derived>
      .  struct redux_impl<Func,Derived, DefaultTraversal, CompleteUnrolling>
      .    : public redux_novec_unroller<Func,Derived, 0, Derived::SizeAtCompileTime>
      .  {};
      .  
      .  template<typename Func, typename Derived>
      .  struct redux_impl<Func, Derived, LinearVectorizedTraversal, NoUnrolling>
      .  {
      .    typedef typename Derived::Scalar Scalar;
      .    typedef typename packet_traits<Scalar>::type PacketScalar;
      .    typedef typename Derived::Index Index;
      .  
201,580    static Scalar run(const Derived& mat, const Func& func)
      .    {
161,264      const Index size = mat.size();
462,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3500x)
201,580      eigen_assert(size && "you are using an empty matrix");
 40,316      const Index packetSize = packet_traits<Scalar>::size;
161,264      const Index alignedStart = internal::first_aligned(mat);
 56,000  => /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const>::Index Eigen::internal::first_aligned<Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_conj_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const, Eigen::Block<Eigen::Matrix<double, -1, 1, 0, -1, 1>, -1, 1, false> const> const> const&) (3500x)
      .      enum {
      .        alignment = bool(Derived::Flags & DirectAccessBit) || bool(Derived::Flags & AlignedBit)
      .                  ? Aligned : Unaligned
      .      };
322,528      const Index alignedSize2 = ((size-alignedStart)/(2*packetSize))*(2*packetSize);
322,528      const Index alignedSize = ((size-alignedStart)/(packetSize))*(packetSize);
161,264      const Index alignedEnd2 = alignedStart + alignedSize2;
161,264      const Index alignedEnd  = alignedStart + alignedSize;
      .      Scalar res;
 80,632      if(alignedSize)
      .      {
220,698        PacketScalar packet_res0 = mat.template packet<alignment>(alignedStart);
2,041,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
 73,566        if(alignedSize>packetSize) // we have at least two packets to partly unroll the loop
      .        {
208,019          PacketScalar packet_res1 = mat.template packet<alignment>(alignedStart+packetSize);
1,020,600  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
464,682          for(Index index = alignedStart + 2*packetSize; index < alignedEnd2; index += 2*packetSize)
      .          {
744,588            packet_res0 = func.packetOp(packet_res0, mat.template packet<alignment>(index));
    760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
801,864            packet_res1 = func.packetOp(packet_res1, mat.template packet<alignment>(index+packetSize));
    760  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
      .          }
      .  
208,019          packet_res0 = func.packetOp(packet_res0,packet_res1);
 42,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (1400x)
 89,151          if(alignedEnd>alignedEnd2)
218,049            packet_res0 = func.packetOp(packet_res0, mat.template packet<alignment>(alignedEnd2));
805,240  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (9820x)
      .        }
257,481        res = func.predux(packet_res0);
137,200  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
      .  
147,132        for(Index index = 0; index < alignedStart; ++index)
      .          res = func(res,mat.coeff(index));
      .  
298,030        for(Index index = alignedEnd; index < size; ++index)
342,345          res = func(res,mat.coeff(index));
820,400  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2800x)
      .      }
      .      else // too small to vectorize anything.
      .           // since this is dynamic-size hence inefficient anyway for such small sizes, don't try to optimize.
      .      {
 21,198        res = mat.coeff(0);
399,700  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (700x)
 14,132        for(Index index = 1; index < size; ++index)
      .          res = func(res,mat.coeff(index));
      .      }
      .  
 80,632      return res;
120,948    }
      .  };
      .  
      .  template<typename Func, typename Derived>
      .  struct redux_impl<Func, Derived, SliceVectorizedTraversal, NoUnrolling>
      .  {
      .    typedef typename Derived::Scalar Scalar;
      .    typedef typename packet_traits<Scalar>::type PacketScalar;
      .    typedef typename Derived::Index Index;
-- line 255 ----------------------------------------
-- line 318 ----------------------------------------
      .    * The template parameter \a BinaryOp is the type of the functor \a func which must be
      .    * an associative operator. Both current STL and TR1 functor styles are handled.
      .    *
      .    * \sa DenseBase::sum(), DenseBase::minCoeff(), DenseBase::maxCoeff(), MatrixBase::colwise(), MatrixBase::rowwise()
      .    */
      .  template<typename Derived>
      .  template<typename Func>
      .  EIGEN_STRONG_INLINE typename internal::result_of<Func(typename internal::traits<Derived>::Scalar)>::type
204,060  DenseBase<Derived>::redux(const Func& func) const
      .  {
      .    typedef typename internal::remove_all<typename Derived::Nested>::type ThisNested;
      .    return internal::redux_impl<Func, ThisNested>
367,308              ::run(derived(), func);
  5,700  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
122,436  }
      .  
      .  /** \returns the minimum of all coefficients of \c *this.
      .    * \warning the result is undefined if \c *this contains NaN.
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
     40  DenseBase<Derived>::minCoeff() const
      .  {
     90    return this->redux(Eigen::internal::scalar_min_op<Scalar>());
  5,950  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (20x)
     30  }
      .  
      .  /** \returns the maximum of all coefficients of \c *this.
      .    * \warning the result is undefined if \c *this contains NaN.
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
  2,024  DenseBase<Derived>::maxCoeff() const
      .  {
  4,554    return this->redux(Eigen::internal::scalar_max_op<Scalar>());
1,924,666  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (992x)
  1,518  }
      .  
      .  /** \returns the sum of all coefficients of *this
      .    *
      .    * \sa trace(), prod(), mean()
      .    */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
161,184  DenseBase<Derived>::sum() const
      .  {
282,072    if(SizeAtCompileTime==0 || (SizeAtCompileTime==Dynamic && size()==0))
462,000  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3500x)
      .      return Scalar(0);
362,664    return this->redux(Eigen::internal::scalar_sum_op<Scalar>());
5,473,300  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7000x)
120,888  }
      .  
      .  /** \returns the mean of all coefficients of *this
      .  *
      .  * \sa trace(), prod(), sum()
      .  */
      .  template<typename Derived>
      .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
      .  DenseBase<Derived>::mean() const
-- line 372 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseStorage.h
--------------------------------------------------------------------------------
        Ir 

-- line 222 ----------------------------------------
         .  
         .  // purely dynamic matrix.
         .  template<typename T, int _Options> class DenseStorage<T, Dynamic, Dynamic, Dynamic, _Options>
         .  {
         .      T *m_data;
         .      DenseIndex m_rows;
         .      DenseIndex m_cols;
         .    public:
    43,584      inline DenseStorage() : m_data(0), m_rows(0), m_cols(0) {}
         .      inline DenseStorage(internal::constructor_without_unaligned_array_assert)
         .         : m_data(0), m_rows(0), m_cols(0) {}
    20,699      inline DenseStorage(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)
    35,484        : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(nbRows), m_cols(nbCols)
 1,200,629  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (2957x)
     8,871      { EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN }
   118,602      inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols); }
 1,881,622  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6589x)
       800      inline void swap(DenseStorage& other)
     3,520      { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); std::swap(m_cols,other.m_cols); }
    22,560  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
49,579,285      inline DenseIndex rows(void) const {return m_rows;}
20,923,035      inline DenseIndex cols(void) const {return m_cols;}
         .      inline void conservativeResize(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)
         .      {
         .        m_data = internal::conditional_aligned_realloc_new_auto<T,(_Options&DontAlign)==0>(m_data, size, m_rows*m_cols);
         .        m_rows = nbRows;
         .        m_cols = nbCols;
         .      }
    41,923      void resize(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)
         .      {
    41,923        if(size != m_rows*m_cols)
         .        {
     3,234          internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols);
    60,117  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (294x)
       588          if (size)
     2,058            m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);
   111,227  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (294x)
         .          else
         .            m_data = 0;
         .          EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN
         .        }
    17,967        m_rows = nbRows;
    17,967        m_cols = nbCols;
    17,967      }
18,338,292      inline const T *data() const { return m_data; }
 8,338,204      inline T *data() { return m_data; }
         .  };
         .  
         .  // matrix with dynamic width and fixed height (so that matrix has dynamic size).
         .  template<typename T, int _Rows, int _Options> class DenseStorage<T, Dynamic, _Rows, Dynamic, _Options>
         .  {
         .      T *m_data;
         .      DenseIndex m_cols;
         .    public:
    34,330      inline DenseStorage() : m_data(0), m_cols(0) {}
         .      inline DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_cols(0) {}
     2,688      inline DenseStorage(DenseIndex size, DenseIndex, DenseIndex nbCols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_cols(nbCols)
    35,337  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (90x)
       504      { EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN }
    54,015      inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols); }
    53,019  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (92x)
         .      inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_cols,other.m_cols); }
     1,440      static inline DenseIndex rows(void) {return _Rows;}
     1,764      inline DenseIndex cols(void) const {return m_cols;}
         .      inline void conservativeResize(DenseIndex size, DenseIndex, DenseIndex nbCols)
         .      {
         .        m_data = internal::conditional_aligned_realloc_new_auto<T,(_Options&DontAlign)==0>(m_data, size, _Rows*m_cols);
         .        m_cols = nbCols;
         .      }
       945      EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex, DenseIndex nbCols)
         .      {
       540        if(size != _Rows*m_cols)
         .        {
         .          internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols);
         .          if (size)
         .            m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);
         .          else
         .            m_data = 0;
         .          EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN
         .        }
       405        m_cols = nbCols;
       405      }
    24,472      inline const T *data() const { return m_data; }
    48,944      inline T *data() { return m_data; }
         .  };
         .  
         .  // matrix with dynamic height and fixed width (so that matrix has dynamic size).
         .  template<typename T, int _Cols, int _Options> class DenseStorage<T, Dynamic, Dynamic, _Cols, _Options>
         .  {
         .      T *m_data;
         .      DenseIndex m_rows;
         .    public:
    75,220      inline DenseStorage() : m_data(0), m_rows(0) {}
         .      inline DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_rows(0) {}
    17,712      inline DenseStorage(DenseIndex size, DenseIndex nbRows, DenseIndex) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(nbRows)
    16,628  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (45x)
     3,321      { EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN }
   129,435      inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows); }
 1,733,610  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (8583x)
         .      inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); }
28,950,089      inline DenseIndex rows(void) const {return m_rows;}
20,302,030      static inline DenseIndex cols(void) {return _Cols;}
     3,360      inline void conservativeResize(DenseIndex size, DenseIndex nbRows, DenseIndex)
         .      {
     5,760        m_data = internal::conditional_aligned_realloc_new_auto<T,(_Options&DontAlign)==0>(m_data, size, m_rows*_Cols);
   388,390  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (480x)
     1,440        m_rows = nbRows;
     1,440      }
   243,019      EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex nbRows, DenseIndex)
         .      {
   138,868        if(size != m_rows*_Cols)
         .        {
    63,672          internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows);
 2,118,841  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7959x)
    15,918          if (size)
    55,713            m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);
 2,041,999  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (7959x)
         .          else
         .            m_data = 0;
         .          EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN
         .        }
   104,151        m_rows = nbRows;
   104,151      }
 2,582,440      inline const T *data() const { return m_data; }
26,530,658      inline T *data() { return m_data; }
         .  };
         .  
         .  } // end namespace Eigen
         .  
         .  #endif // EIGEN_MATRIX_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/local/nowpac/external/eigen/include/eigen3/Eigen/src/Core/DenseBase.h
--------------------------------------------------------------------------------
       Ir 

-- line 188 ----------------------------------------
        .        * \code rows()==1 || cols()==1 \endcode
        .        * \sa rows(), cols(), IsVectorAtCompileTime. */
        .  
        .      /** \returns the outer size.
        .        *
        .        * \note For a vector, this returns just 1. For a matrix (non-vector), this is the major dimension
        .        * with respect to the \ref TopicStorageOrders "storage order", i.e., the number of columns for a
        .        * column-major matrix, and the number of rows for a row-major matrix. */
   22,344      Index outerSize() const
        .      {
        .        return IsVectorAtCompileTime ? 1
   16,138             : int(IsRowMajor) ? this->rows() : this->cols();
    6,080  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (160x)
   11,420      }
        .  
        .      /** \returns the inner size.
        .        *
        .        * \note For a vector, this is just the size. For a matrix (non-vector), this is the minor dimension
        .        * with respect to the \ref TopicStorageOrders "storage order", i.e., the number of rows for a 
        .        * column-major matrix, and the number of columns for a row-major matrix. */
2,320,604      Index innerSize() const
        .      {
        .        return IsVectorAtCompileTime ? this->size()
1,740,453             : int(IsRowMajor) ? this->cols() : this->rows();
  673,568  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (3472x)
1,160,302      }
        .  
        .      /** Only plain matrices/arrays, not expressions, may be resized; therefore the only useful resize methods are
        .        * Matrix::resize() and Array::resize(). The present method only asserts that the new size equals the old size, and does
        .        * nothing else.
        .        */
        .      void resize(Index newSize)
        .      {
        .        EIGEN_ONLY_USED_FOR_DEBUG(newSize);
-- line 219 ----------------------------------------
-- line 354 ----------------------------------------
        .      inline Derived& operator/=(const Scalar& other);
        .  
        .      typedef typename internal::add_const_on_value_type<typename internal::eval<Derived>::type>::type EvalReturnType;
        .      /** \returns the matrix or vector obtained by evaluating this expression.
        .        *
        .        * Notice that in the case of a plain matrix or vector (not an expression) this function just returns
        .        * a const reference, in order to avoid a useless copy.
        .        */
      132      EIGEN_STRONG_INLINE EvalReturnType eval() const
        .      {
        .        // Even though MSVC does not honor strong inlining when the return type
        .        // is a dynamic matrix, we desperately need strong inlining for fixed
        .        // size types on MSVC.
       99        return typename internal::eval<Derived>::type(derived());
      231  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (33x)
       66      }
        .  
        .      /** swaps *this with the expression \a other.
        .        *
        .        */
        .      template<typename OtherDerived>
   34,573      void swap(const DenseBase<OtherDerived>& other,
        .                int = OtherDerived::ThisConstantIsPrivateInPlainObjectBase)
        .      {
   79,024        SwapWrapper<Derived>(derived()).lazyAssign(other.derived());
19,762,050  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (6416x)
   24,695      }
        .  
        .      /** swaps *this with the matrix or array \a other.
        .        *
        .        */
        .      template<typename OtherDerived>
        .      void swap(PlainObjectBase<OtherDerived>& other)
        .      {
        .        SwapWrapper<Derived>(derived()).lazyAssign(other.derived());
-- line 386 ----------------------------------------
-- line 493 ----------------------------------------
        .      // disable the use of evalTo for dense objects with a nice compilation error
        .      template<typename Dest> inline void evalTo(Dest& ) const
        .      {
        .        EIGEN_STATIC_ASSERT((internal::is_same<Dest,void>::value),THE_EVAL_EVALTO_FUNCTION_SHOULD_NEVER_BE_CALLED_FOR_DENSE_OBJECTS);
        .      }
        .  
        .    protected:
        .      /** Default constructor. Do nothing. */
3,574,472      DenseBase()
2,680,854      {
  652,732  => ???:void* Eigen::internal::conditional_aligned_malloc<true>(unsigned long)'2 (22508x)
        .        /* Just checks for self-consistency of the flags.
        .         * Only do it when debugging Eigen, as this borders on paranoiac and could slow compilation down
        .         */
        .  #ifdef EIGEN_INTERNAL_DEBUGGING
        .        EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, int(IsRowMajor))
        .                          && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, int(!IsRowMajor))),
        .                            INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION)
        .  #endif
2,680,854      }
        .  
        .    private:
        .      explicit DenseBase(int);
        .      DenseBase(int,int);
        .      template<typename OtherDerived> explicit DenseBase(const DenseBase<OtherDerived>&);
        .  };
        .  
        .  } // end namespace Eigen
-- line 519 ----------------------------------------

--------------------------------------------------------------------------------
Ir 
--------------------------------------------------------------------------------
87  percentage of events annotated

